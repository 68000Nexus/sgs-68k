#	ATT:ident	"terminfo:header	1.4"

#ident	"@(#)lib/terminfo:header	25.1"

# ------------------------
#
# This file describes capabilities of various terminals, as needed by
# software such as screen editors.  It does not attempt to describe
# printing terminals very well, nor graphics terminals.  Someday.
# See terminfo(5) in the Unix Programmers Manual for documentation.
#
# Conventions: First entry is two chars, first char is manufacturer,
# second char is canonical name for model or mode.
# Third entry is the one the editor will print with "set" command.
# Last entry is verbose description.
# Others are mnemonic synonyms for the terminal.
#
# Terminal naming conventions:
# Terminal names look like <manufacturer> <model> - <modes/options>
# Certain abbreviations (e.g. c100 for concept100) are also allowed
# for upward compatibility.  The part to the left of the dash, if a
# dash is present, describes the particular hardware of the terminal.
# The part to the right can be used for flags indicating special ROM's,
# extra memory, particular terminal modes, or user preferences.
# All names are always in lower case, for consistency in typing.
# Because of file naming restrictions, terminal names should not contain
# period or slash, in fact, entirely alphanumeric characters plus dash are
# highly recommended.  These restrictions do not apply to the verbose name.
#
# The following are conventionally used flags:
#	rv	Terminal in reverse video mode (black on white)
#	2p	Has two pages of memory.  Likewise 4p, 8p, etc.
#	w	Wide - in 132 column mode.
#	pp	Has a printer port which is used.
#	na	No arrow keys - terminfo ignores arrow keys which are
#		actually there on the terminal, so the user can use
#		the arrow keys locally.
#	#	The number of lines on the screen.
#	s	With a status line.
#  
# There are some cases where the same name is used for two different
# terminals, e.g. "teleray" or "2621" or "vt100".  In these cases,
# if a site has one of these, they should choose a local default and
# bring that terminal to the front in the reorder script.  This works
# because tgetent picks the first match in /etc/terminfo.
#
# If you absolutely MUST check for a specific terminal (this is discouraged)
# check for the 1st entry (the canonical form) since all other codes are
# subject to change.  We would much rather put in special capabilities to
# describe your terminal rather than having you key on the name.
#	ATT: ident	"terminfo:adds.ti	1.10"
#ident	"@(#)lib/terminfo:adds.ti	25.1"
# # --------------------------------
#
# Manufacturer:	ADDS
# Class:	II
#
screwpoint|adds viewpoint with ^O bug,
	am,
	dl1=\El,
	cols#80, lh#0, lines#24, lw#0, nlab#0,
	bel=^G, clear=\f$<10.1*>, cr=\r, cub1=\b, cud1=\n,
	cuf1=^F, cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c$<6>, cuu1=^Z,
	ed=\Ek$<16.1*>, el=\EK$<16>, ind=\n, is2=^G, kcub1=^U,
	kcud1=\n, kcuf1=^F, kcuu1=^Z, khome=^A, ll=^A,
fviewpoint|flaky adds viewpoint with ^O bug,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, lines#24, cols#80,
	dl1=\El,
	cup=\EY%p1%' '%+%c%p2%' '%+%c$<6>, is2=,
	ed=\Ek$<16.1*>, el=\EK$<16>, cuf1=^F, cuu1=^Z, clear=^L$<10.1*>, ll=^A,
	kcub1=^U, kcuf1=^F, kcud1=^J, kcuu1=^Z, khome=^A,
viewpoint|adds viewpoint,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, lines#24, cols#80,
	cup=\EY%p1%' '%+%c%p2%' '%+%c$<6>, is2=^O\E0`,
	ed=\Ek$<16.1*>, el=\EK$<16>, cuf1=^F, cuu1=^Z, clear=^L$<10.1*>, ll=^A,
	dl1=\El,
	kcub1=^U, kcuf1=^F, kcud1=^J, kcuu1=^Z, khome=^A,
	kf0=^B1, kf2=^B2, kf3=^B!, kf4=^B", kf5=^B#,
	rmso=^O, smso=\E0P^N, rmul=^O, smul=\E0`^N,
	cvvis=^O\E0P, cnorm=^O\E0`,
v90|viewpoint-90|ADDS viewpoint 90,
	lines#24, cols#80, it#8, am, bw, mir,
	clear=^L, ll=^A, cuu1=^Z, cub1=^H, cuf1=^F, cud1=^J,
	cr=^M, cud1=^J, ind=^J, bel=^G, ht=^I,
	dl1=\El, il1=\EM, ed=\Ek, el=\EK,
	cbt=\EO, dch1=\EE, .smir=\EF, .rmir=\EF,
	pad=\377,
	vpa=^K%p1%' '%+%c,
	hpa=^P%p1%{10}%/%{16}%*%p1%{10}%m%+%c,
	cup=\EY%p1%' '%+%c%p2%' '%+%c,
	kbs=^H, kcud1=^J, khome=^A, kcub1=^U, kcuf1=^F, kcuu1=^Z,
	kf0=^B1^M, kf1=^B2^M, kf2=^B3^M, kf3=^B4^M, kf4=^B5^M, kf5=^B6^M,
	kf6=^B7^M, kf7=^B8^M, kf8=^B9^M, kf9=^B:^M, kf10=^B;^M,
	lf0=F1, lf1=F2, lf2=F3, lf3=F4, lf4=F5, lf5=F6,
	lf6=F7, lf7=F8, lf8=F9, lf9=F10, lf10=F11,
regent|Adds Regent Series,
	cr=^M, cud1=^J, ind=^J, bel=^G, lines#24, cols#80, am,
	clear=^L, ll=^A, cuu1=^Z, cub1=^H, cuf1=^F, cud1=^J,
regent100|Adds Regent 100,
	kf0=^B1^M, kf1=^B2^M, kf2=^B3^M, kf3=^B4^M,
	kf4=^B5^M, kf5=^B6^M, kf6=^B7^M, kf7=^B8^M,
	lf0=F1, lf1=F2, lf2=F3, lf3=F4, lf4=F5, lf5=F6, lf6=F7, lf7=F8,
	cup=^K%p1%' '%+%c^P%p2%{10}%/%{16}%*%p2%{10}%m%+%c,
	xmc#1, use=regent,
regent20|Adds Regent 20,
	ed=\Ek, el=\EK, cup=^K%p1%' '%+%c^P%p2%{10}%/%{16}%*%p2%{10}%m%+%c,
	use=regent,
regent25|Adds Regent25,
	khome=^A, kcub1=^U, kcuf1=^F, kcuu1=^Z, kcud1=^J, use=regent20,
regent40|Adds Regent 40,
	kf0=^B1^M, kf1=^B2^M, kf2=^B3^M, kf3=^B4^M,
	kf4=^B5^M, kf5=^B6^M, kf6=^B7^M, kf7=^B8^M,
	lf0=F1, lf1=F2, lf2=F3, lf3=F4, lf4=F5, lf5=F6, lf6=F7, lf7=F8,
	il1=2*\EM, dl1=2*\El, smso=\E0P, rmul=\E0@,
	smul=\E0`, rmso=\E0@, xmc#1, use=regent25,
regent40-s|regent40+|Adds Regent 40-s,
	is2=\EB, use=regent40,
regent60|regent200|Adds Regent 60,
	rmso=\ER\E0@\EV, smso=\ER\E0P\EV,
	dch1=\EE, rmir=\EF, smir=\EF, is2=\EV\EB,
	kdch1=\EE, kich1=\EF, krmir=\EF, use=regent40-s,
regent60-na|regent 60 w/no arrow keys,
	kcub1@, kcuf1@, kcuu1@, kcud1@, use=regent60,
a980|adds consul 980,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\E^N$<13>, am, cub1=^H,
	clear=^L$<1>^K@, cup=^K%p1%'@'%+%c\E^E%p2%02d, cols#80, dl1=\E^O$<13>,
	kf0=\E0, kf1=\E1, kf2=\E2, kf3=\E3, kf4=\E4,
	kf5=\E5, kf6=\E6, kf7=\E7, kf8=\E8, kf9=\E9,
	lines#24, cuf1=\E^E01, smso=^Y^^^N, rmso=^O, cuu1=$<9>,
#	ATT:ident	"terminfo:annarbor.ti	1.11"
#ident	"@(#)lib/terminfo:annarbor.ti	25.1"
# # --------------------------------
#
# annarbor: ANN ARBOR
# Manufacturer:	ANN ARBOR
# Class:	III
#
aa|annarbor|4080|ann arbor 4080,
	cr=^M, cud1=^J, ind=^J, bel=^G, ht=^I, tbc=^\^P^P, hts=^]^P1,
	cup=^O%p2%{10}%/%{16}%*%p2%{10}%m%+%c%p1%?%p1%{19}%>%t%{12}%+%;%'@'%+%c,
	cols#80, lines#40, cub1=^H, clear=^L$<2>, cuu1=^N, cuf1=^_,
	home=^K, am, kbs=^^, kcud1=^J, kcuu1=^N, kcub1=^H, kcuf1=^_, khome=^K,
#
aaa+unk|aaa-unk|ann arbor ambassador (internal - don't use this directly),
	am, km, mc5i, mir, xon,
	cols#80, it#8,
	bel=^G, blink=\E[5m, bold=\E[1m, cbt=\E[Z,
	clear=\E[H\E[J$<156>, cr=\r, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=^K, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M,
	ed=\E[J, el=\E[K$<5>, home=\E[H, hpa=\E[%p1%{1}%+%dG,
	ht=\t, hts=\EH, ich=\E[%p1%d@$<4*>, ich1=\E[@$<4>,
	il=\E[%p1%dL, il1=\E[L$<3>, ind=^K, invis=\E[8m,
	is1=\E[m\E7\E[H\E9\E8,
	is3=\E[1Q\E[>20;30l\EP`+x~M\E\\, kbs=\b, kcbt=\E[Z,
	kclr=\E[J, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C,
	kcuu1=\E[A, kdch1=\E[P, kdl1=\E[M, kf1=\EOA,
	kf10=\EOJ, kf11=\EOK, kf12=\EOL, kf13=\EOM, kf14=\EON,
	kf15=\EOO, kf16=\EOP, kf17=\EOQ, kf18=\EOR, kf19=\EOS,
	kf2=\EOB, kf20=\EOT, kf21=\EOU, kf22=\EOV, kf23=\EOW,
	kf24=\EOX, kf3=\EOC, kf4=\EOD, kf5=\EOE, kf6=\EOF,
	kf7=\EOG, kf8=\EOH, kf9=\EOI, khome=\E[H, kich1=\E[@,
	kil1=\E[L, krmir=\E6, mc0=\E[0i, mc4=^C, mc5=\E[v,
	mc5p=\E[%p1%dv, rc=\E8, rep=%p1%c\E[%p2%{1}%-%db,
	rev=\E[7m,
	rmkx=\EP`>y~[[J`8xy~[[A`4xy~[[D`6xy~[[C`2xy~[[B\E\\,
	rmm=\E[>52l, rmso=\E[m, rmul=\E[m, sc=\E7,
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p6%t1;%;m,
	sgr0=\E[0m,
	smkx=\EP`>z~[[J`8xz~[[A`4xz~[[D`6xz~[[C`2xz~[[B\E\\,
	smm=\E[>52h, smso=\E[7m, smul=\E[4m, tbc=\E[2g,
	vpa=\E[%p1%{1}%+%dd,
# Info:
#	.flash=\E7\E[H\E[7m\E9$<200>\E[m\E9\E8,
#
aaa+rv,
	bold=\E[1;7m, rev=\E[m, blink=\E[5;7m, invis=\E[7;8m, sgr0=\E[7m^N,
	rmul=\E[7m, smul=\E[4;7m, rmso=\E[7m, smso=\E[m, rs1=\E[H\E[7m\E[J$<156>,
	sgr=\E[%?%p1%p3%|%!%t7;%;%?%p2%t4;%;%?%p4%t5;%;%?%p6%t1;%;%?%p7%t8;%;m,
#	.flash=\E7\E[H\E[m\E9$<200>\E[7m\E9\E8,
	is1=\E[7m\E7\E[H\E9\E8,
# Info:
#	Ambassador with the DEC option, for partial vt100 compatibility.
#
aaa+dec,
	csr=\E[%i%p1%d;%p2%dr,
	sgr=\E[%?%p1%p3%|%!%t7;%;%?%p2%t4;%;%?%p4%t5;%;%?%p6%t1;%;%?%p7%t8;%;m%?%p9%t^O%e^N%;,
	enacs=\E(0, smacs=^O, rmacs=^N,
	acsc=aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz||}},
aaa-18|ann arbor ambassador/18 lines,
	smcup=\E[18;0;0;18p, rmcup=\E[60;0;0;18p\E[60;1H\E[K,
	is2=\E7\E[60;0;0;18p\E8, lines#18, use=aaa+unk,
aaa-18-rv|ann arbor ambassador/18 lines+reverse video,
	use=aaa+rv, use=aaa-18,
aaa-20|ann arbor ambassador/20 lines,
	smcup=\E[20;0;0;20p, rmcup=\E[60;0;0;20p\E[60;1H\E[K,
	is2=\E7\E[60;0;0;20p\E8, lines#20, use=aaa+unk,
aaa-22|ann arbor ambassador/22 lines,
	smcup=\E[22;0;0;22p, rmcup=\E[60;0;0;22p\E[60;1H\E[K,
	is2=\E7\E[60;0;0;22p\E8, lines#22, use=aaa+unk,
aaa-24|ann arbor ambassador/24 lines,
	smcup=\E[24;0;0;24p, rmcup=\E[60;0;0;24p\E[60;1H\E[K,
	is2=\E7\E[60;0;0;24p\E8, lines#24, use=aaa+unk,
aaa-24-rv|ann arbor ambassador/24 lines+reverse video,
	use=aaa+rv, use=aaa-24,
aaa-26|ann arbor ambassador/26 lines,
	smcup=\E[H\E[J$<156>\E[26;0;0;26p, rmcup=\E[60;0;0;26p\E[26;1H\E[K,
	is2=\E7\E[60;0;0;26p\E8, lines#26, use=aaa+unk,
aaa-28|ann arbor ambassador/28 lines,
	smcup=\E[H\E[J$<156>\E[28;0;0;28p, rmcup=\E[60;0;0;28p\E[28;1H\E[K,
	is2=\E7\E[60;0;0;28p\E8, lines#28, use=aaa+unk,
aaa-30-s|aaa-s|ann arbor ambassador/30 lines with status line,
	smcup=\E[H\E[J$<156>\E[30;1;0;30p\E[30;1H\E[K,
	rmcup=\E[60;1;0;30p\E[29;1H\E[K,
	is2=\r\n\E[A\E7\E[60;1;0;30p\E8, lines#29,
	tsl=\E[>51h\E[1;%p1%dH\E[2K, fsl=\E[>51l, hs, eslok,
	dsl=\E7\E[60;0;0;30p\E[1;1H\E[K\E[H\E8\r\n\E[K,
	use=aaa+unk,
aaa-30-s-rv|aaa-s-rv|ann arbor ambassador/30 lines+status line+reverse video,
	use=aaa+rv, use=aaa-30-s,
aaa-s-ctxt|aaa-30-s-ctxt|ann arbor ambassador/30 lines; status line; saving context,
	smcup=\E[30;1H\E[K\E[30;1;0;30p, rmcup=\E[60;1;0;30p\E[59;1H\E[K,
	use=aaa-30-s,
aaa-s-rv-ctxt|aaa-30-s-rv-ct|aaa-30-srvctxt|ann arbor ambassador/30 lines; status line; saving context,
	smcup=\E[30;1H\E[K\E[30;1;0;30p, rmcup=\E[60;1;0;30p\E[59;1H\E[K,
	use=aaa-30-s-rv,
aaa|aaa-30|ambas|ambassador|ann arbor ambassador/30 lines,
	smcup=\E[H\E[J$<156>\E[30;0;0;30p, rmcup=\E[60;0;0;30p\E[30;1H\E[K,
	is2=\E7\E[60;0;0;30p\E8, lines#30, use=aaa+unk,
aaa-30-rv|aaa-rv|ann arbor ambassador/30 lines in reverse video,
	use=aaa+rv, use=aaa-30,
aaa-30-ctxt|aaa-ctxt|ann arbor ambassador/30 lines; saving context,
	smcup=\E[30;0;0;30p, rmcup=\E[60;0;0;30p\E[60;1H\E[K, use=aaa-30,
aaa-30-rv-ctxt|aaa-rv-ctxt|ann arbor ambassador/30 lines; saving context,
	smcup=\E[30;0;0;30p, rmcup=\E[60;0;0;30p\E[60;1H\E[K,
	use=aaa+rv, use=aaa-30,
aaa-36|ann arbor ambassador/36 lines,
	smcup=\E[H\E[J$<156>\E[36;0;0;36p, rmcup=\E[60;0;0;36p\E[36;1H\E[K,
	is2=\E7\E[60;0;0;36p\E8, lines#36, use=aaa+unk,
aaa-36-rv|ann arbor ambassador/36 lines+reverse video,
	use=aaa+rv, use=aaa-36,
aaa-40|ann arbor ambassador/40 lines,
	smcup=\E[H\E[J$<156>\E[40;0;0;40p, rmcup=\E[60;0;0;40p\E[40;1H\E[K,
	is2=\E7\E[60;0;0;40p\E8, lines#40, use=aaa+unk,
aaa-40-rv|ann arbor ambassador/40 lines+reverse video,
	use=aaa+rv, use=aaa-40,
aaa-48|ann arbor ambassador/48 lines,
	smcup=\E[H\E[J$<156>\E[48;0;0;48p, rmcup=\E[60;0;0;48p\E[48;1H\E[K,
	is2=\E7\E[60;0;0;48p\E8, lines#48, use=aaa+unk,
aaa-48-rv|ann arbor ambassador/48 lines+reverse video,
	use=aaa+rv, use=aaa-48,
aaa-60-s|ann arbor ambassador/59 lines plus status line,
	is2=\r\n\E[A\E7\E[60;1;0;60p\E8, lines#59,
	tsl=\E[>51h\E[1;%p1%dH\E[2K, fsl=\E[>51l, hs, eslok,
	dsl=\E7\E[60;0;0;60p\E[1;1H\E[K\E[H\E8\r\n\E[K,
	use=aaa+unk,
aaa-60-s-rv|ann arbor ambassador/59 lines+status line+reverse video,
	use=aaa+rv, use=aaa-60-s,
aaa-60-s-rv-de|aaa-60-s-rvdec|ann arbor ambassador/dec mode+59 lines+status line+rev video,
	use=aaa+dec, use=aaa+rv, use=aaa-60-s,
aaa-60|ann arbor ambassador/60 lines,
	is2=\E7\E[60;0;0;60p\E[1Q\E[m\E[>20;30l\E8, lines#60, use=aaa+unk,
aaa-60-rv|ann arbor ambassador/60 lines+reverse video,
	use=aaa+rv, use=aaa-60,
aaa-db|ann arbor ambassador 30/destructive backspace,
	cub1=\E[D, is3=\E[1Q\E[m\E[>20l\E[>30h, use=aaa-30,
#
guru|guru-33|guru+unk|ann arbor guru/33 lines 80 cols,
	smcup=\E[33p, rmcup=\E[255p\E[255;1H\E[K,
	flash=\E[>59h$<100>\E[>59l,
	is2=\E7\E[255;0;0;33;80;80p\E8\E[J, is3=\E[>59l, lines#33, use=aaa+unk,
guru+rv|guru changes for reverse video,
	flash=\E[>59l$<100>\E[>59h, is3=\E[>59h,
guru-rv|guru-33-rv|ann arbor guru/33 lines+reverse video,
	use=guru+rv, use=guru-33,
guru+s|changes for status line,
	rmcup=\E[255;1p\E[255;1H\E[K,
	tsl=\E[>51h\E[1;%p1%dH\E[2K, fsl=\E[>51l, hs, eslok,
	dsl=\E7\E[;0p\E[1;1H\E[K\E[H\E8\r\n\E[K,
guru-nctxt,
	smcup=\E[H\E[J$<156>\E[33p\E[255;1H\E[K, use=guru,
guru-s|guru-33-s|ann arbor guru/33 lines with status line,
	smcup=\E[33;1p\E[255;1H\E[K,
	is2=\r\n\E[A\E7\E[255;1;0;33;80;80p\E8\E[J, lines#32,
	use=guru+s, use=guru+unk,
guru-24,
	smcup=\E[24p, is2=\E7\E[255;0;0;24;80;80p\E8\E[J,
	lines#24, cols#80, use=guru+unk,
guru-44,
	smcup=\E[44p, is2=\E7\E[255;0;0;44;97;100p\E8\E[J,
	lines#44, cols#97, use=guru+unk,
guru-44-s|ann arbor guru/44 lines with status line,
	smcup=\E[44;1p\E[255;1H\E[K,
	is2=\r\n\E[A\E7\E[255;1;0;44;80;80p\E8\E[J, lines#43,
	use=guru+s, use=guru+unk,
guru-76|guru with 76 lines by 89 cols,
	smcup=\E[76p, is2=\E7\E[255;0;0;76;89;100p\E8\E[J,
	lines#76, cols#89, use=guru+unk,
guru-76-s|ann arbor guru/76 lines with status line,
	smcup=\E[76;1p\E[255;1H\E[K,
	is2=\r\n\E[A\E7\E[255;1;0;76;89;100p\E8\E[J, lines#75, cols#89,
	use=guru+s, use=guru+unk,
guru-76-lp|guru-lp|guru with page bigger than line printer,
	smcup=\E[76p, is2=\E7\E[255;0;0;76;134;134p\E8\E[J,
	lines#76, cols#134, use=guru+unk,
guru-76-w|guru 76 lines by 178 cols,
	smcup=\E[76p, is2=\E7\E[255;0;0;76;178;178p\E8\E[J,
	lines#76, cols#178, use=guru+unk,
guru-76-w-s|ann arbor guru/76 lines with status line,
	smcup=\E[76;1p\E[255;1H\E[K,
	is2=\r\n\E[A\E7\E[255;1;0;76;178;178p\E8\E[J, lines#75, cols#178,
	use=guru+s, use=guru+unk,
guru-76-wm|guru 76 lines by 178 cols with 255 cols memory,
	smcup=\E[76p, is2=\E7\E[255;0;0;76;178;255p\E8\E[J,
	lines#76, cols#178, use=guru+unk,
aaa-rv-unk,
	lh#0, lw#0, nlab#0,
	blink=\E[5;7m, bold=\E[1;7m, invis=\E[7;8m,
	is1=\E[7m\E7\E[H\E9\E8, rev=\E[m, rmso=\E[7m,
	rmul=\E[7m, rs1=\E[H\E[7m\E[J,
	sgr=\E[%?%p1%!%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p6%t1;%;%?%p7%t8;%;m,
	sgr0=\E[7m, smso=\E[m, smul=\E[4;7m,
#	ATT:#ident	"terminfo:ansi.ti	1.12"	*/
#	ATT:#ident	"terminfo:ansi.ti	1.9"	*/
	
#ident	"@(#)lib/terminfo:ansi.ti	25.1"

# # ANSI - standards and other nonexistent terminals emulated in software.
#
# Manufacturer:	ANSI - Generic
# Class:	III
# 
# Info:
#	This category is used for terminals people "make up" in software
#	that do not represent a particular piece of hardware. This 
#	includes standards, such as the ANSI standard, as well as 
#	emulator programs that accept a particular set of escape 
#	sequences.
#	
#	ANSI capabilities are broken up into pieces, so that a terminal
#	implementing some ANSI subset can use many of them.
#
ansi+local,
	cud=\E[%p1%dB, cub=\E[%p1%dD, cuf=\E[%p1%dC, cuu=\E[%p1%dA,
ansi+local1,
	cud1=^J, cub1=^H, cuf1=\E[C, cuu1=\E[A,
ansi+tabs,
	ht=^I, cbt=\E[Z, hts=\EH, tbc=\E[2g,
ansi+inittabs,
	it#8, use=ansi+tabs,
ansi+erase,
	ed=\E[J, el=\E[K, clear=\E[H\E[J,
ansi+rca,
	hpa=\E[%p1%{1}%+%dG, vpa=\E[%p1%{1}%+%dd,
ansi+cup,
	cup=\E[%i%p1%d;%p2%dH, home=\E[H,
ansi+rep,
	rep=%p1%c\E[%p2%{1}%-%db,
ansi+idl,
	dl=\E[%p1%dM, il=\E[%p1%dL,
ansi+idl1,
	dl1=\E[M, il1=\E[L,
ansi+idc,
	dch1=\E[P, ich=\E[%p1%d@, ich1=\E[@, 
#	smir=\E6, rmir=\E6,	commented out by ehr3
ansi+arrows,
	kcuu1=\E[A, kcud1=\E[B, kcub1=\E[D, kcuf1=\E[C, khome=\E[H, kbs=^H,
ansi+sgr|ansi graphic renditions,
	rev=\E[7m, blink=\E[5m, invis=\E[8m, sgr0=\E[0m,
ansi+sgrso|ansi standout only,
	rmso=\E[m, smso=\E[7m,
ansi+sgrul|ansi underline only,
	rmul=\E[m, smul=\E[4m,
ansi+sgrbold|ansi graphic renditions; assuming terminal has bold; not dim,
	bold=\E[1m,
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p6%t1;%;m,
	use=ansi+sgr, use=ansi+sgrso, use=ansi+sgrul,
ansi+sgrdim|ansi graphic renditions; assuming terminal has dim; not bold,
	dim=\E[2m,
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p5%t2;%;m,
	use=ansi+sgr, use=ansi+sgrso, use=ansi+sgrul,
ansi+pp|ansi printer port,
	mc4=\E[4i, mc5=\E[5i, mc0=\E[0i,
# Info:
#	ANSI is a vanilla ANSI terminal. This is assumed to implement 
#	all the normal ANSI stuff with no extensions. It assumes 
#	insert/delete line/char is there, so it won't work with 
#	vt100 clones. It assumes video attributes for bold, blink, 
#	underline, and reverse, which won't matter much if the terminal 
#	can't do some of those. Padding is assumed to be zero, which 
#	shouldn't hurt since xon/xoff is assumed.
#	
#	We assume a 24x80 screen. This entry was derived from the 
#	Ann Arbor Ambassador, and is untested.
#
ansi|generic ansi standard terminal,
	use=vanilla, am, cols#80, lines#24, xon,
	use=ansi+cup, use=ansi+rca,
	use=ansi+erase,
	use=ansi+tabs,
	use=ansi+local1, use=ansi+local,
	use=ansi+idc, use=ansi+idl1, use=ansi+idl,
	use=ansi+rep,
	use=ansi+sgrbold, use=ansi+arrows,
# Info:
#	Bare minimum ANSI terminal. This should work on anything, but 
#	beware of screen size problems and memory relative cursor 
#	addressing.
#
minansi|minimum ansi standard terminal,
	am, xon, use=vanilla, cols#80, lines#24,
	use=ansi+cup, use=ansi+erase,
# Info:
#	This terminal type is for ANSI terminals with ONLY memory 
#	relative cursor addressing and more than one page of memory.
#	It uses local motions instead of direct cursor addressing, 
#	and makes almost no assumptions. It does assume auto margins, 
#	no padding and/or xon/xoff, and a 24x80 screen.
#
mransi|mem rel cup ansi,
	am, use=vanilla, cols#80, lines#24, xon,
	use=ansi+erase, use=ansi+local1,
# Info:
#	Columbus UNIX virtual terminal. This terminal also appears in 
#	UNIX 4.0 and successors as line discipline 1 (?), but is 
#	undocumented and does not really work quite right.
#
virtual|cbunix|cb-unix|cb-unix virtual terminal,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, am, clear=\EJ,
	cub1=^H, cup=\EG%p2%c%p1%c, cuf1=\EC, cuu1=\EA, el=\EK,
	ed=\EL, il1=\EP, dl1=\EN, ich1=\EO, dch1=\EM, lm#0, da, db,
	kcub1=\ED, kcuf1=\EC, kcuu1=\EA, kcud1=\EB, khome=\EE,
	smso=\Ea\004, rmso=\Eb\004, smul=\Ea\001, rmul=\Eb\001,
# Info:
#	This terminal is based on virtual but cleans up a few problems 
#	with control characters in parameter strings. It is implemented 
#	in mrh's window manager.
#
pty|4bsd pty terminal,
	smso=\Ea$, rmso=\Eb$, smul=\Ea!, rmul=\Eb!,
	cup=\EG%p1%' '%+%c%p2%' '%+%c, use=virtual,
# Info:
#	A dumb terminal with 1 line which is a fake status line.
#	This is useful to run sysline in in a multi-window environment.
#
1line|one_line|one line window,
	cr=^M, ind=^J, cols#80, lines#1, am, ht=^I, cub1=^H,
	hs, tsl=\n,
# Info:
#	1linepty is like 1line but the 1 line window is smarter,
#	with standout, cursor addressing, and clear to eol.
#
1linepty|one_linepty|1 line window in a pty,
	smso=\Ea$, rmso=\Eb$, smul=\Ea!, rmul=\Eb!,
	cup=\EG%p1%' '%+%c%p2%' '%+%c, tsl=\r\EK\EG %p2%' '%+%c,
	eslok, use=1line,
vanilla,
	bel=^G, cr=^M, cud1=^J, ind=^J,
datakit,
	am, gn,
	cols#80,
	bel=^G, cr=\r, cud1=\n, ind=\n,
#ident	"@(#)terminfo:att.ti	1.93"
# # --------------------------------
#
# att: AT&T
#
# Manufacturer:	AT&T
# Class:	I

2300|att2300|ATT2300|sv80|AT&T 2300 Video Information Terminal 80 column mode @(#)2300.ti 1.1,
	am, xon, eo, mir, msgr,
	cols#80, lines#24, it#8,
	bel=^G,
	cub=\E[%p1%dD, cub1=\b,
	cuf=\E[%p1%dC, cuf1=\E[C,
	cud=\E[%p1%dB, cud1=\n,
	cuu=\E[%p1%dA, cuu1=\E[A,
	cup=\E[%i%p1%d;%p2%dH,
	ich=\E[%p1%d@, 
	il=\E[%p1%dL, il1=\E[L,
	dch=\E[%p1%dP, dch1=\E[P,
	dl=\E[%p1%dM, dl1=\E[M,
	smso=\E[7m, rmso=\E[0m, rev=\E[7m,
	cr=\r, ind=\n, 
	ht=\t, smir=\E[4h, rmir=\E[4l,
	home=\E[H, clear=\E[H\E[J, ed=\E[J, el=\E[K, el1=\E[1K,
	kf1=\E[1r, kf2=\E[2r, kf3=\E[3r, kf4=\E[4r,
	kf5=\E[5r, kf6=\E[6r, kf7=\E[7r, kf8=\E[8r,
	kf9=\E[9r, kf10=\E[10r, kf11=\E[11r, kf12=\E[12r,
	kf13=\E[13r, kf14=\E[14r, kf15=\E[15r, kf16=\E[16r,
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A,
	khome=\E[H, kclr=\E[J, kcbt=\E[Z, kbs=\b,
	kil1=\E[L, kich1=\E[@, kdl1=\E[M, kdch1=\E[P,
	mc0=\E[0i, mc4=\E[4i, mc5=\E[5i,
	sgr0=\E[m, 
2350|att2350|ATT2350|AT&T 2350 Video Information Terminal 80 column mode @(#)2300.ti 1.1,
	mc0@, mc4@, mc5@, use=att2300,
2300-x40|att2300-x40|ATT2300-x40|sv40|AT&T 2300 Video Information Terminal 40 column mode @(#)2300.ti 1.1,
	cols#40, lines#23, it#5, il@, il1@, use=att2300,
2350-x40|att2350-x40|ATT2350-x40|AT&T 2350 Video Information Terminal 40 column mode @(#)2300.ti 1.1,
	cols#40, lines#23, it#5, il@, il1@, use=att2350,
33|tty33|tty|AT&T model 33 teletype @(#)33.ti 1.1,
	xon,cr=^M, cud1=^J, ind=^J, bel=^G, cols#72, hc, os,

35|tty35|AT&T model 35 teletype @(#)35.ti 1.1,
	use=tty33,

37|tty37|AT&T model 37 teletype @(#)37.ti 1.1,
	xon,cr=^M, cud1=^J, ind=^J, bel=^G,
	cub1=^H, hc, hu=\E8, hd=\E9, cuu1=\E7, os,

# Info:
#	The Dataspeed 40's print a visible newline indicator after 
#	each newline. The 40-1 is a half duplex terminal.
#	and is described here. The 40-4 is a 3270 lookalike 
#	
#	The terminal has blinking standout. It also has visible bell 
#	but I don't know it - it's null here to prevent it from showing
#	the BL character.
#	
#	I am not sure if the 40 has xmc, it looked like it didn't.
#	
#	Note also that the control characters have been randomly 
#	rearranged, for example, to get escape you type control-P and 
#	cntrol-H generates GS, group separator!
#	
#	
#	\EX will get terminal out of protect mode but there doesn't 
#	appear to be a mnemonic for it (\EW will put it into protect).
#	
#	When printer is enabled all received characters are printed - no
#	print screen is provided. Most delays are pure guesswork.
#	
#	Watch out for the visible newline symbol. Note that 
#	the editing and cursor controls do not work in S/R mode except 
#	for cursor left arrow which generates the backspace character. 
#	
#	Note also that many control codes echo visibly while the 
#	corresponding escape sequences do not; for example, both ^K 
#	and \EC move the cursor right one place, but the former
#	prints a VT symbol, too.
#

40|tty40|ds40|ds40-2|dataspeed40|teletype dataspeed 40/2 @(#)40.ti 1.1,
	clear=\EH$<20>\EJ$<80>, ed=\EJ$<75>, il1=\EL$<50>, dl1=\EM$<50>,
	dch1=\EP$<50>, ich1=\E\^$<50>, cuf1=\EC, cuu1=\E7, cub1=^H, cr=\EG,
	ind=\ES$<20>, cud1=\EB, cols#80, lines#24, smso=\E3, rmso=\E4,
	xon,kbs=\035, kcub1=^H, rs2=^S\ER$<60>, hts=\E1, home=\EH$<10>,
	ri=\ET$<10>, tbc=\EH\E2$<80>, mc5=^R$<2000>, mc4=^T, ht=\E@$<10>,

43|tty43|AT&T model 43 teletype @(#)43.ti 1.1,
	xon,cr=^M, cud1=^J, ind=^J, bel=^G,
	kbs=^h, am, cub1=^H, hc, os, cols#132,

# Info:
#	Must setup RETURN KEY - CR, REC'VD LF - INDEX.
#	Seems upward compatible with vt100, plus ins/del line/char.
#	On sgr, the protection parameter is ignored.
#	No check is made to make sure that only 3 parameters are output.
#		standout= reverse + half-intensity = 3 | 5.
#		bold= reverse + underline = 2 | 3.
#	note that half-bright blinking doesn't look different from 
#	normal blinking.
#	
#	NOTE:you must program the function keys first, label second!
#


ATT4410v1|ATT5410v1|att5410v1|att4410v1|4410v1|tty5410v1|5410v1|AT&T 4410/5410 terminal in 80 column mode - version 1 @(#)4410.ti 1.3,
	am, hs, mir, msgr, xon,
	cols#80, it#8, lh#2, lines#24, lw#8, nlab#8, wsl#80,
	acsc=``aaffhhggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~00++--\,\,..,
	is1=\E[?3l\E)0,
	bel=^G, blink=\E[5m, bold=\E[4;7m, clear=\E[H\E[J,
	cr=\r, csr=\E[%i%p1%d;%p2%dr, cub1=\b, cud1=\E[B,
	cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH, cuu1=\E[A,
	dch1=\E[P, dim=\E[2m, dl1=\E[M, ed=\E[J, el=\E[K,
	fsl=\E8, home=\E[H, ht=\t, ich1=\E[@, il1=\E[L,
	ind=\n, invis=\E[8m,
	is3=\E[1;03q\s\s\sf1\s\s\s\s\s\s\s\s\s\s\s\EOP\E[2;03q\s\s\sf2\s\s\s\s\s\s\s\s\s\s\s\EOQ\E[3;03q\s\s\sf3\s\s\s\s\s\s\s\s\s\s\s\EOR\E[4;03q\s\s\sf4\s\s\s\s\s\s\s\s\s\s\s\EOS\E[5;03q\s\s\sf5\s\s\s\s\s\s\s\s\s\s\s\EOT\E[6;03q\s\s\sf6\s\s\s\s\s\s\s\s\s\s\s\EOU\E[7;03q\s\s\sf7\s\s\s\s\s\s\s\s\s\s\s\EOV\E[8;03q\s\s\sf8\s\s\s\s\s\s\s\s\s\s\s\EOW,
	kbs=\b, kclr=\E[2J, kcub1=\E[D, kcud1=\E[B,
	kcuf1=\E[C, kcuu1=\E[A, kf1=\EOP, kf2=\EOQ, kf3=\EOR,
	kf4=\EOS, kf5=\EOT, kf6=\EOU, kf7=\EOV, kf8=\EOW,
	khome=\E[H, kll=\E[24;1H, ll=\E[24H, nel=\r\n,
	pfx=\E[%p1%1d;%p2%l%2.2dq\s\s\sf%p1%1d\s\s\s\s\s\s\s\s\s\s\s%p2%s,
	pln=\E[%p1%d;00q%p2%:-16s, rc=\E8, rev=\E[7m, ri=\EM,
	rmacs=^O, rmso=\E[m, rmul=\E[m, rs2=\Ec\E[?3l\E[2;0y,
	sc=\E7,
	sgr=\E[0%?%p1%p5%|%t;2%;%?%p2%p6%|%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O, smacs=^N, smso=\E[2;7m, smul=\E[4m,
	tsl=\E7\E[25;%p1%{1}%+%dH,

att4410v1-w|ATT4410v1-w|att5410v1-w|ATT5410v1-w|4410v1-w|tty5410v1-w|5410v1-w|AT&T 4410/5410 terminal in 132 column mode - version 1 @(#)4410.ti 1.3,
	cols#132,is1=\E[?3h\E)0,rs2=\Ec\E[?3h\E[2;0y,wsl#132,use=4410v1,

att4410|ATT4410|att5410|ATT5410|4410|tty5410|5410|AT&T 4410/5410 terminal in 80 column mode - version 2 @(#)4410.ti 1.3,
	pfx=\E[%p1%d;%p2%l%02dq   f%p1%d           %p2%s,
	use=4410v1,

ATT4410-nfk|att4410-nfk|att5410-nfk|ATT5410-nfk|4410-nfk|tty5410-nfk|5410-nfk|version 1 AT&T 4410/5410 entry without function keys @(#)4410.ti 1.3,
	pln@, is3@, kf1@, kf2@, kf3@, kf4@, kf5@, kf6@, kf7@, kf8@, use=att4410,

att5410-w|ATT5410-w|att4410-w|4410-w|tty5410-w|5410-w|AT&T 4410/5410 in 132 column mode @(#)4410.ti 1.3,
	cols#132, is1=\E[?3h\E)0,rs2=\Ec\E[?3h\E[2;0y, wsl#132,
	use=att4410,


5410-nsl|att5410-nsl|ATT5410-nsl|4410-nsl|att4410-nsl|ATT4410-nsl|tty5410-nsl|tty5410 entry without pln defined @(#)4410.ti 1.3,
	pln@,
	use=tty5410,

otty5410|teletype 5410 for S5R2 curses @(#)4410.ti 1.3,
	tsl=\E7\E[25;%p1%{1}%+%dH,
	use=tty5410,

# Info:
#	5410 in terms of a vt100
#
v5410| 5410 in terms of a vt100 @(#)4410.ti 1.3,
	am, mir, msgr, xon,
	cols#80, it#8, lines#24, vt#3,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>,
	clear=\E[H\E[J$<50>, cr=\r, csr=\E[%i%p1%d;%p2%dr,
	cub1=\b, cud1=\n, cuf1=\E[C$<2>,
	cup=\E[%i%p1%d;%p2%dH$<5>, cuu1=\E[A$<2>, dch1=\E[P,
	dl1=\E[M, ed=\E[J$<50>, el=\E[K$<3>, el1=\E[1K$<3>,
	enacs=\E(B\E)0, home=\E[H, ht=\t, hts=\EH, ich1=\E[@,
	il1=\E[L, ind=\n, ka1=\EOq, ka3=\EOs, kb2=\EOr,
	kbs=\b, kc1=\EOp, kc3=\EOn, kcub1=\EOD, kcud1=\EOB,
	kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, kf1=\EOP,
	kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt,
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, rc=\E8,
	rev=\E[7m$<2>, ri=\EM$<5>, rmacs=^O, rmkx=\E[?1l\E>,
	rmso=\E[m$<2>, rmul=\E[m$<2>,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7,
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;$<2>,
	sgr0=\E[m^O$<2>, smacs=^N$<2>, smkx=\E[?1h\E=,
	smso=\E[1;7m$<2>, smul=\E[4m$<2>, tbc=\E[3g,

# Info:
#	
#	Teletype Model 5420 -- A souped up 5410, with multiple windows,
#	even! the 5420 has three modes: scroll, window or page mode
#	this terminfo should work in scroll or window mode, but doesn't
#	take advantage of any of the differences between them.
#
ATT4415|att4415|4415|tty5420|att5420|ATT5420|5420|AT&T 4415/5420 in 80 column mode @(#)4415.ti 1.3,
# Info:
#	Memory below (2 lines!)
#
	xon,db, mir,
# Info:
#	3 pages of memory (plus some spare)
#
	nlab#8, lh#2, lw#8, wsl#55, lm#78,
	cbt=\E[Z, clear=\E[x\E[J, cnorm=\E[11;0j,
	cub=\E[%p1%dD, cud=\E[%p1%dB, cuf=\E[%p1%dC, cuu=\E[%p1%dA,
# Info:
#	The 5410 sequences would work for these, but these
#	work in both scroll and window mode...
#
	cup=\E[%i%p1%d;%p2%dx,
	cvvis=\E[11;1j, dch=\E[%p1%dP, dl=\E[%p1%dM,
	ech=\E[%p1%ds\E[%p1%dD,
	flash=\E[?5h$<200>\E[?5l,
	home=\E[x, hpa=\E[%p1%{1}%+%dG, hts=\EH,
# Info:
#	Unset insert character so insert mode works
#
	ich1@, ich=\E[%p1%d@, il=\E[%p1%dL, indn=\E[%p1%dE,
# Info:
#	set 80 column mode,
#
	is1=\E[?3l$<100>,
#	is2 escape sequence:
#	1) turn off all fonts
#	2) function keys off, keyboard lock off, control display off,
#	   insert mode off, erasure mode off,
#	3) full duplex, monitor mode off, send graphics off, nl on lf off
#	4) reset origin mode
#	5) set line wraparound
#	6) exit erasure mode, positional attribute mode, and erasure extent mode
#	7) clear margins
#	8) program ENTER to transmit ^J,
#	We use \212 to program the ^J because a bare ^J will get translated by
#	UNIX into a CR/LF. The enter key is needed for AT&T uOMS.
#	    1      2            3              4     5     6    7  8
#
	is2=\E[0m^O\E[1;2;3;4;6l\E[12;13;14;20l\E[?6;97;99l\E[?7h\E[4i\Ex\E[21;1j\212,
# Info:
#	set screen color to black,
#
	is3=\E[?5l,
	kbeg=\Et, kcbt=\E[Z, kdch1=\E[P, kdl1=\E[M,
# info:
#	No representation in terminfo for the delete word key
#	kdw1=\Ed
#
	kel=\E[2K, kend=\Ez, kent=\Eent,
# Info:
#	This assumes the power-up send sequence...
#
	kf1=\EOc, kf2=\EOd, kf3=\EOe, kf4=\EOf,
	kf5=\EOg, kf6=\EOh, kf7=\EOi, kf8=\EOj,
	kich1=\E[4h, kil1=\E[L, kind=\E[T, kll=\Eu,
	knp=\E[U, kpp=\E[V, kri=\E[S,
	lf1=F1, lf2=F2, lf3=F3, lf4=F4, lf5=F5, lf6=F6, lf7=F7, lf8=F8,
	ll=\Ew, mc0=\E[?2i, mc4=\E[?9i, mc5=\E[?4i,
	mrcup=\E[%i%p1%d;%p2%dt,
	pfx=\E[%p1%d;%p2%l%02dq   F%p1%d           %p2%s,
	pln=\E[%p1%d;0;0;0q%p2%:-16.16s,
	rmln=\E|, smln=\E~, prot=\EV, rin=\E[%p1%dF,
# Info:
#	This rmcup is not strictly necessary, but it helps maximize 
#	memory usefulness
#	rmcup=\Ez,
#
	rmir=\E[4l, rmkx=\E[19;0j\E[21;1j\212, sgr0=\E[0m^O,
# Info:
#	sgr0=\E[0m\EW^O,
#
	sgr=\E[0%?%p1%p5%|%t;2%;%?%p2%p6%|%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
# Info:
#	sgr=\E[%?%p1%t2;7%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p5%t;2%;%?%p7%t;8%;m%?%p8%t\EV%;%?%p9%t^N%e^O%;,
#
	smir=\E[4h,
# Info:
#	This programs the SYS PF keys to send a set sequence.
#	It also sets up labels f1, f2, ..., f8, and sends edit keys.
#	This string causes them to send the strings kf1-kf8
#	when pressed in SYS PF mode.
#
	smkx=\E[19;1j\E[21;4j\Eent, tbc=\E[3g,
	tsl=\E7\E[25;%p1%{8}%+%dH, vpa=\E[%p1%{1}%+%dd,
	use=att4410,

ATT4415-w|att4415-w|4415-w|tty5420-w|att5420-w|ATT5420-w|5420-w|AT&T model 4415/5420 in 132 column mode @(#)4415.ti 1.3,
	lm#54, cols#132, wsl#97,
# Info:
#	set 132 column mode,
#
	is1=\E[?3h$<100>,
	use=att4415,

ATT4415-rv|att4415-rv|4415-rv|tty5420-rv|att5420-rv|ATT5420-rv|5420-rv|AT&T model 4415/5420 80 columns in reverse video @(#)4415.ti 1.3,
	flash=\E[?5l$<200>\E[?5h,
# Info:
#	set screen color to white,
#
	is3=\E[?5h,
	use=att4415,

ATT4415-w-rv|att4415-w-rv|4415-w-rv|tty5420-w-rv|att5420-w-rv|ATT5420-w-rv|5420-w-rv|AT&T model 4415/5420 132 columns in reverse video @(#)4415.ti 1.3,
	lm#54, cols#132, wsl#97,
	flash=\E[?5l$<200>\E[?5h,
# Info:
#	set 132 column mode,
#
	is1=\E[?3h$<100>, 
# Info:
#	set screen color to white,
#
	is3=\E[?5h,
	use=att4415,

# Info:
#	Note that this mode permits programming USER PF KEYS and labels
#	However, when you program user pf labels you have to reselect
#	user pf keys to make them appear! 
#
ATT4415+nl|att4415+nl|4415+nl|tty5420+nl|att5420+nl|ATT5420+nl|5420+nl|generic AT&T 4415/5420 changes for not changing labels @(#)4415.ti 1.3,
	kf1@, kf2@, kf3@, kf4@, kf5@, kf6@, kf7@, kf8@,
	pfx=\E[%p1%d;%p2%l%02d;0;1q   F%p1%d           %p2%s,
	pln=\E[%p1%d;0;0;1q%p2%:-16.16s,

ATT4415-nl|att4415-nl|4415-nl|tty5420-nl|att5420-nl|ATT5420-nl|5420-nl|AT&T 4415/5420 without changing labels @(#)4415.ti 1.3,
	kf1@, kf2@, kf3@, kf4@, kf5@, kf6@, kf7@, kf8@,
	use=att4415+nl, use=att4415,

ATT4415-rv-nl|att4415-rv-nl|4415-rv-nl|tty5420-rv-nl|5420-rv-nl|ATT5420-rv-nl|att5420-rv-nl|AT&T 4415/5420 reverse video without changing labels @(#)4415.ti 1.3,
	kf1@, kf2@, kf3@, kf4@, kf5@, kf6@, kf7@, kf8@,
	use=att4415+nl, use=att4415-rv,

ATT4415-w-nl|att4415-w-nl|4415-w-nl|tty5420-w-nl|5420-w-nl|att5420-w-nl|ATT5420-w-nl|AT&T 4415/5420 132 cols without changing labels @(#)4415.ti 1.3,
	kf1@, kf2@, kf3@, kf4@, kf5@, kf6@, kf7@, kf8@,
	use=att4415+nl, use=att4415-w,

ATT4415-w-rv-n|att4415-w-rv-n|4415-w-rv-nl|tty5420-w-rv-n|5420-w-rv-nl|att5420-w-rv-n|ATT5420-w-rv-n||AT&T 4415/5420 132 cols reverse without changing labels @(#)4415.ti 1.3,
	kf1@, kf2@, kf3@, kf4@, kf5@, kf6@, kf7@, kf8@,
	use=att4415+nl, use=att4415-w-rv,

otty5420|teletype 5420 for SVR2 curses on the 3B-20's @(#)4415.ti 1.3,
	hpa=\E[%p1%{1}%+%dG,
	vpa=\E[%p1%{1}%+%dd,
	use=tty5420,

att5420_2|ATT5420_2|5420_2|AT&T 5420 model 2 in 80 column mode @(#)4415.ti 1.3,
	am, db, hs, mir, msgr, xon,
	cols#80, it#8, lh#2, lines#24, lm#78, lw#8, nlab#8,
	wsl#55,
	blink=\E[5m, bold=\E[4;7m, cbt=\E[1Z, clear=\EH\EJ, 
	cnorm=\E[11;0j, cr=\EG, csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, 
	cub1=\b, cud1=\E[1B, cuf=\E[%p1%dC, cuf1=\E[1C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cvvis=\E[11;1j,
	dch=\E[%p1%dP, dch1=\E[P, dim=\E[2m, dl=\E[%p1%dM,
	dl1=\E[M, ech=\E[%p1%ds\E[%p1%dD, ed=\E[0J, el=\E[0K,
	el1=\E[1K, flash=\E[?5h$<200>\E[?5l, fsl=\E8,
	home=\E[0;0H, hpa=\E[%p1%{1}%+%dG, ht=\t, hts=\EH,
	ich=\E[%p1%d@, ich1=\E[@, il=\E[%p1%dL, il1=\E[L,
	ind=\n, indn=\E[%p1%dE, invis=\E[8m,
	is1=\E[0;23r\Ex\Ey\E[2;0j\E[3;3j\E[4;0j\E[5;0j\E[6;0j\E[7;0j\E[8;0j\E[9;1j\E[10;0j\E[15;0j\E[16;1j\E[19;0j\E[20;1j\E[29;0j\E[1;24r,
	kbeg=\Et, kbs=\b, kcbt=\E[Z, kclr=\E[2J, kcub1=\E[D,
	kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, kdch1=\E[P,
	kdl1=\E[M, kel=\E[2K, kend=\Ez, kent=\n, kf1=\EOc,
	kf2=\EOd, kf3=\EOe, kf4=\EOf, kf5=\EOg, kf6=\EOh,
	kf7=\EOi, kf8=\EOj, khome=\E[H, kich1=\E[4h,
	kil1=\E[L, kind=\E[T, kll=\Eu, knp=\E[U, kpp=\E[V,
	kri=\E[S, lf1=F1, lf2=F2, lf3=F3, lf4=F4, lf5=F5,
	lf6=F6, lf7=F7, lf8=F8, ll=\Ew, mc0=\E[?;2i,
	mc4=\E[4i, mc5=\E[5i, mrcup=\E[%i%p1%d;%p2%dt,
	nel=\r\n,
	pfx=\E[%p1%d;%p2%l%02dq\s\s\sF%p1%d\s\s\s\s\s\s\s\s\s\s\s%p2%s\E~,
	pln=\E[%p1%d;0;0;0q%p2%:-16.16s\E~, prot=\EV, rc=\E8,
	rev=\E[7m, ri=\EM, rin=\E[%p1%dF, rmacs=^O,
	rmkx=\E[19;0j, rmln=\E|, rmso=\E[m, rmul=\E[m,
	rs2=\Ec\E[?3l\E[2;0y, sc=\E7,
	sgr=\E[0%?%p1%p5%|%t;2%;%?%p2%p6%|%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	sgr0=\E[0m^O, smacs=^N, smkx=\E[19;1j,
	smln=\E~, smso=\E[2;7m, smul=\E[4m, tbc=\E[3g,
	tsl=\E7\E[25;%p1%{8}%+%dH, vpa=\E[%p1%{1}%+%dd,
att5420_2-w|ATT5420_2-w|5420_2-w|AT&T 5420 model 2 in 132 column mode @(#)4415.ti 1.3,
	cols#132,
	is1=\E[0;23r\Ex\Ey\E[2;0j\E[3;3j\E[4;0j\E[5;1j\E[6;0j\E[7;0j\E[8;0j\E[9;1j\E[10;0j\E[15;0j\E[16;1j\E[19;0j\E[20;1j\E[29;0j\E[1;24r,
	use=5420_2,

4418|att4418|ATT4418|5418|att5418|ATT5418|AT&T 5418 in 80 column mode @(#)4418.ti 1.2,
	am, xon,
	cols#80, lines#24,
	bel=^G, blink=\E[5m, clear=\E[H\E[2J, cr=\r,
	cub=\E[%p1%dD, cub1=\E[D, cud=\E[%p1%dB, cud1=\E[B,
	cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH,
	cuu=\E[%p1%dA, cuu1=\E[A, dch=\E[%p1%dP, dch1=\E[1P,
	dim=\E[2m, dl=\E[%p1%dM, dl1=\E[M, ed=\E[0J, el=\E[0K,
	home=\E[H, ich=\E[%p1%d@, ich1=\E[1@, il=\E[%p1%dL,
	il1=\E[1L, ind=\n, is1=\E[?3l, is2=\E)0\E?6l\E?5l,
	kclr=\E[%, kcub1=\E@, kcud1=\EU, kcuf1=\EA, kcuu1=\ES,
	khome=\Ec, kent=\E[, kf1=\E[h, kf10=\E[m, kf11=\E[n, kf12=\E[o,
	kf13=\E[H, kf14=\E[I, kf15=\E[J, kf18=\E[K, kf19=\E[L,
	kf2=\E[i, kf20=\E[E, kf21=\E[_, kf22=\E[M, kf23=\E[N,
	kf24=\E[O, kf3=\E[j, kf6=\E[k, kf7=\E[l, kf8=\E[f,
	kf9=\E[w, rc=\E8, rev=\E[7m, rmacs=^O, rmso=\E[0m,
	rmul=\E[0m, sc=\E7, sgr0=\E[0m^O, smacs=^N, smso=\E[7m,
	smul=\E[4m,
4418-w|att4418-w|ATT4418-w|5418-w|att5418-w|ATT5418-w|AT&T 5418 in 132 column mode @(#)4418.ti 1.2,
	cols#132,is1=\E[?3h,use=5418,

4420|tty4420|teletype 4420 @(#)4420.ti 1.1,
	xon,da, db, eo, msgr, ul,lm#72,
	cols#80, lines#24,
	bel=^G, clear=\EH\EJ, cr=\EG,
	cuu1=\EA, cud1=\EB,cuf1=\EC,cub1=\ED,
	cup=\EY%p1%' '%+%c%p2%' '%+%c, cuu1=\EA,
	dch1=\EP, dl1=\EM, ed=\EJ, el=\Ez, il1=\EL,
	home=\EH,
	ind=\EH\EM\EY7 , kcub1=\b, kcud1=\EB, kcuf1=\EC, kcuu1=\EA,
	kf0=\EU, kf3=\E@,
	lf0=segment advance, lf3=cursor tab,
	kind=\ES, kri=\ET, kcbt=\EO, kclr=\EJ,
	kil1=\EL, kdl1=\EM, kich1=\E\^, kdch1=\EP, khome=\EH,
	rmdc@, rmso=\E~, rmul=\EZ, smdc@, smso=\E}, smul=\E\\,

# Info:
#	 The following is a termcap entry for the Teletype 4424
#	 asyncronous keyboard-display terminal.  It supports
#	 the vi editor.  The terminal must be "set up" as follows,
#		
#		HIGHLIGHT DEFINITION	3-TONE
#		DISPLAY FUNCTION	GROUP III
#		
#	 The second entry below provides limited (a la adm3a)
#	 operation under GROUP II.
#		
#	 This must be used with DISPLAY FUNCTION GROUP I or III
#		and HIGHLIGHT DEFINITION 3-TONE
#
4424|att4424|ATT4424|tty4424|4424-3|teletype 4424 @(#)4424.ti 1.7,
	xon,cr=^M, ind=^J, bel=^G, cols#80, lines#24, am,
	smso=\E[7m, rmso=\E~, rev=\E[7m, smul=\E[4m, rmul=\EZ, ri=\ET,
# Info:
#	The terminal has either bold or blink, depending on options
#
	xon,bold=\E[1m, blink=\E[5m,
	ht=^I, cbt=\EO, home=\E[H, cuu1=\EA, cuu=\E[%p1%dA,
	cud1=\EB, cud=\E[%p1%dB, cuf1=\EC, cuf=\E[%p1%dC,
	smcup=\E[1m,
	cub1=^H, cub=\E[%p1%dD, cup=\E[%i%p1%d;%p2%dH,
	clear=\E[H\E[2J, ed=\EJ, el=\Ez, nel=\EE, hts=\EH, tbc=\EF,
	smacs=\E(0, rmacs=\E(B, is2=\E[20l\E[?7h, csr=\E[%i%p1%d;%p2%dr,
	il1=\EL, il=\E[%p1%dL, dl1=\EM, dl=\E[%p1%dM,
	ich1=\E\^, ich=\E[%p1%d@, dch1=\EP, dch=\E[%p1%dP,
	sgr=\E[0%?%p1%p3%|%t;7%;%?%p2%t;4%;%?%p6%t;1%;%?%p4%t;5%;m,
	sgr0=\EX\E~\EZ\E4\E(B,
	kcuu1=\E[A, kcud1=\E[B, kcub1=\E[D, kcuf1=\E[C, khome=\E[H, kbs=^H, kclr=\EJ,
	kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS,

4424-1|att4424-1|ATT4424-1|tty4424-1|teletype 4424 in display function group I @(#)4424.ti 1.7,
	kclr@,kcub1=\ED,kcud1=\EB,kcuf1=\EC,kcuu1=\EA,khome@,use=4424,

# Info:
#	The Teletype 5425 is really version 2 of the Teletype 5420. It 
#	is quite similar, except for some minor differences. No page 
#	mode, for example, so all of the cup sequences used above have 
#	to change back to what's being used for the 5410. Many of the 
#	option settings have changed their numbering as well.
#	
#	This has been tested on a preliminary model.
#

ATT4425|ATT5425|att5425|4425|5425|tty5425|att4425|AT&T 4425/5425 @(#)4425.ti 1.3,
	am, da, db, hs, mir, msgr, xenl, xon,
	cols#80, it#8, lh#2, lines#24, lm#78, lw#8, nlab#8,
	wsl#55,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m, bold=\E[4;7m, cbt=\E[Z,
	clear=\E[H\E[J, cnorm=\E[12;0j, cr=\r,
	csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	cvvis=\E[12;1j, dch=\E[%p1%dP, dch1=\E[P, dim=\E[2m,
	dl=\E[%p1%dM, dl1=\E[M, ech=\E[%p1%ds\E[%p1%dD,
	ed=\E[J, el=\E[K, el1=\E[1K, enacs=\E(B\E)0,
	flash=\E[?5h$<200>\E[?5l, fsl=\E8, home=\E[H,
	hpa=\E[%p1%{1}%+%dG, ht=\t, hts=\EH, ich=\E[%p1%d@,
	il=\E[%p1%dL, il1=\E[L, ind=\n, indn=\E[%p1%dE,
	invis=\E[8m, is1=\E<\E[?3l$<100>,
	is2=\E[0m^O\E[1;2;3;4;6l\E[12;13;14;20l\E[?6;97;99l\E[?7h\E[4i\Ex\E[25;1j\212,
	is3=\E[?5l, kbeg=\Et, kbs=\b, kcbt=\E[Z, kclr=\E[J,
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A,
	kdch1=\E[P, kdl1=\E[M, kel=\E[2K, kend=\Ez, kent=\Eent,
	kf1=\EOc, kf2=\EOd, kf3=\EOe, kf4=\EOf, kf5=\EOg,
	kf6=\EOh, kf7=\EOi, kf8=\EOj, khome=\E[H, kich1=\E[4h,
	kil1=\E[L, kind=\E[T, kri=\E[S, ll=\E[24H, mc0=\E[?2i,
	mc4=\E[?9i, mc5=\E[?4i, nel=\r\n,
	pfx=\E[%p1%d;%p2%l%02dq\s\s\sF%p1%1d\s\s\s\s\s\s\s\s\s\s\s%p2%s,
	pln=\E[%p1%d;0;0;0q%p2%:-16.16s, prot=\EV, rc=\E8,
	rev=\E[7m, ri=\EM, rin=\E[%p1%dF, rmacs=^O,
	rmir=\E[4l, rmkx=\E[21;0j\E[25;1j\212, rmln=\E|, rmso=\E[m,
	rmul=\E[m, rs2=\Ec\E[?3l\E[2;0y, sc=\E7,
	sgr=\E[0%?%p1%p5%|%t;2%;%?%p2%p6%|%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O, smacs=^N, smir=\E[4h, smkx=\E[21;1j\E[25;4j\Eent\E~,
	smln=\E~, smso=\E[2;7m, smul=\E[4m, tbc=\E[3g,
	tsl=\E7\E[25;%p1%{8}%+%dH, vpa=\E[%p1%{1}%+%dd,

ATT4425-nl|ATT5425-nl|att5425-nl|4425-nl|5425-nl|tty5425-nl|att4425-nl|AT&T 4425/5425 without label change 80 column mode @(#)4425.ti 1.3,
	smkx=\E[21;1j\E[25;4j\Eent,use=4425,

ATT4425-nl-w|ATT5425-nl-w|att5425-nl-w|4425-nl-w|5425-nl-w|tty5425-nl-w|att4425-nl-w|AT&T 4425/5425 without label change 132 column mode @(#)4425.ti 1.3,
	smkx=\E[21;1j\E[25;4j\Eent,use=4425-w,

4425-fk|5425-fk|tty5425-fk|att4425-fk|AT&T 4425/5425 without function keys @(#)4425.ti 1.3,
	smkx@,rmkx@,use=5425,

ATT4425-w|att5425-w|ATT5425-w|att4425-w|4425-w|5425-w|tty5425-w|teletype 4425/5425 in 132 column mode @(#)4425.ti 1.3,
	lm#54, cols#132, wsl#97,
# Info:
#	set 132 column mode,
#
	is1=\E[?3h$<100>,
	use=tty5425,

4425-w-fk|5425-w-fk|tty5425-w-fk|att4425-w-fk|ATT4425-w-fk|att5425-w-fk|ATT5425-w-fk|AT&T 4425/5425 without function keys in wide mode @(#)4425.ti 1.3,
	smkx@,rmkx@,use=5425-w,

4426|att4426|ATT4426|tty4426|teletype 4426S @(#)4426.ti 1.2,
	am,xon,
	is1=\Ec\E[?7h,
	bel=^G,
	bold=\E[5m,
	clear=\E[H\E[2J\E[1U\E[H\E[2J\E[1V,
	cols#80,
	cr=^M,
	cub1=\E[D,
	cub=\E[%p1%dD,
	cud1=\E[B,
	cud=\E[%p1%dB,
	cuf1=\E[C,
	cuf=\E[%p1%dC,
	cup=\E[%i%p1%d;%p2%dH, 
	cuu1=\EA,
	cuu=\E[%p1%dA,
	dch1=\EP,
	dch=\E[%p1%dP,
	dl1=\E[M,
	dl=\E[%p1%dM,
	ed=\E[J, 
	el=\E[0K,
	home=\E[H,
	hpa=\E[%p1%dG,
	hts=\E1,
	ht=\t,
	ich1=\E\^, 
	ich=\E[%p1%d@,
	il1=\EL,
	il=\E[%p1%dL,
	ind=\ES,
	ind=^J,
	indn=\E[%p1%dS,
	is2=\E[m\E[1;24r,
	kbs=^H,
	kcbt=\EO,
	kclr=\E[2J,
	kcub1=\ED,
	kcud1=\EB,
	kcuf1=\EC, 
	kcuu1=\EA,
	kf1=\EOP,
	kf2=\EOQ,
	kf3=\EOR,
	kf4=\EOS,
	kf5=\EOT,
	kf6=\EOU,
	kf7=\EOV,
	kf8=\EOW,
	khome=\E[H,
	kll=\E[24;1H,
	lines#24,
	ll=\E[24H,
	nel=^M^J,
	rc=\E8,
	rev=\E[7m,
	ri=\EM,
	ri=\ET,
	ri=\E[1U, 
	rin=\E[%p1%dT,
	rmacs=\E(B,
	rmso=\E[0m,
	rmul=\E[0m,
	rmul=\E[m,
	rs2=\Ec\E[?3l\E[2;0y,
	sc=\E7, 
	sgr0=\E[0m\E(B,
	smacs=\E(0,
	smso=\E[5m,
	smul=\E[4m,
	smul=\E[4m,
	tbc=\E[3g,
	lm#48,da,db,
	vpa=\E[%p1%dd,


# Terminfo entry for the AT&T 510 A Personal Terminal
# Function keys 9 - 16 are available only after the 
# screen labeled (soft keys/action blocks) are labeled.  Function key
# 9 corresponds to the leftmost touch target on the screen,
# function key 16 corresponds to the rightmost.
#
#
# This entry is based on one done by Ernie Rice at Summit, NJ and
# changed by Anne Gallup, Skokie, IL, ttrdc!anne
#
att510a|510a|bct510a|510A|AT&T 510A Personal Terminal @(#)510a.ti 1.2,
	am,
	xenl,
	mir,
	msgr,
	xon,
	cols#80,
	lines#24,
	nlab#8,
	lh#2,
	lw#7,
	cbt=\E[Z,
	bel=^G,
	cr=^M,
	tbc=\E[3g,
	clear=\E[H\E[J,
	el=\E[0K,
	ed=\E[0J,
	cup=\E[%i%p1%d;%p2%dH,
	cud1=\E[1B,
	home=\E[H,
	cub1=^H,
	cnorm=\E[11;3|,
	cuf1=\E[C,
	cuu1=\E[A,
	civis=\E[11;0|,
	cvvis=\E[11;2|,
	dch1=\E[P,
	dl1=\E[M,
	smacs=^N,
	blink=\E[5m,
	bold=\E[2;7m,
	dim=\E[2m,
	rev=\E[7m,
	smso=\E[7m,
	smul=\E[4m,
	rmacs=^O,
	sgr0=\E[m^O,
	rmso=\E[m,
	rmul=\E[m,
	ff=^L,
	is3=\E[21;1|\212,
	il1=\E[L,
	kbs=^H,
	kcud1=\E[B,
	kf1=\EOm,
	kf2=\EOV,
	kf3=\EOu,
	kf4=\ENj,
	kf5=\ENe,
	kf6=\ENf,
	kf7=\ENh,
	kf8=\E[H,
	kf9=\EOc,
	kf10=\EOd,
	kf11=\EOe,
	kf12=\EOf,
	kf13=\EOg,
	kf14=\EOh,
	kf15=\EOi,
	kf16=\EOj,
	kcub1=\E[D,
	kcuf1=\E[C,
	kind=\E[S,
	kri=\E[T,
	kcuu1=\E[A,
	rmkx=\E[19;0|,
	smkx=\E[19;1|,
	nel=\EE,
	dch=\E[%p1%dP,
	dl=\E[%p1%dM,
	cud=\E[%p1%dB,
	il=\E[%p1%dL,
	cub=\E[%p1%dD,
	cuf=\E[%p1%dC,
	cuu=\E[%p1%dA,
	mc0=\E[0i,
	mc4=\E[?8i,
	mc5=\E[?4i,
	rc=\E8,
	sc=\E7,
	ind=^J,
	ri=\EM,
	sgr=\E[0%?%p5%p6%|%t;2%;%?%p2%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;m%?%p9%t^N%e^O%;,
	hts=\EH,
	ht=\t,
	acsc=hrisjjkkllmmnnqqttuuvvwwxx{{||}}~~-f\,h.e+g`b,
	pln=\E[%p1%dp%p2%:-16s,
	kcbt=\E[Z,
	enacs=\E(B\E)1,
	kLFT=\E[u,
	kRIT=\E[v,
	el1=\E[1K,
	is1=\E(B\E)1\E[2l,

# Terminfo entry for the AT&T 510 D Personal Terminal
# Function keys 9 through 16 are accessed by bringing up the
# system blocks.
# Function key 9 corresponds to the leftmost touch target on the screen,
# function key 16 corresponds to the rightmost.
#
# There are problems with soft key labeling.  These are due to 
# strangenesses in the native terminal that are impossible to
# describe in a terminfo.  
#
#
att510d|510d|bct510d|510D|AT&T 510D Personal Terminal @(#)510d.ti 1.2,
	am,
	da,
	db,
	mir,
	msgr,
	xenl,
	xon,
	cols#80,
	lh#2,
	lines#24,
	lm#48,
	lw#7,
	nlab#8,
	acsc=hrisjjkkllmmnnqqttuuvvwwxx{{||}}~~-f\,h.e+g`b,
	bel=^G,
	blink=\E[5m,
	bold=\E[2;7m,
	cbt=\E[Z,
	clear=\E[H\E[J,
	cnorm=\E[11;3|,
	cr=^M,
	cub1=^H,
	cub=\E[%p1%dD,
	cud1=\E[1B,
	cud=\E[%p1%dB,
	cuf1=\E[C,
	cuf=\E[%p1%dC,
	cup=\E[%i%p1%d;%p2%dH,
	cuu1=\E[A,
	cuu=\E[%p1%dA,
	cvvis=\E[11;2|,
	dch1=\E[P,
	dch=\E[%p1%dP,
	dim=\E[2m,
	dl1=\E[M,
	dl=\E[%p1%dM,
	ed=\E[0J,
	el1=\E[1K,
	el=\E[0K,
	enacs=\E(B\E)1,
	ff=^L,
	home=\E[H,
	hpa=\E[%p1%{1}%+%dG,
	hts=\EH,
	ht=\t,
	ich=\E[%p1%d@,
	il1=\E[L,
	il=\E[%p1%dL,
	ind=^J,
	indn=\E[%p1%dS,
	invis=\E[8m,
	is1=\E(B\E)1\E[5;0|,
	is3=\E[21;1|\212,
	kbs=^H,
	kcbt=\E[Z,
	kcub1=\E[D,
	kcud1=\E[B,
	kcuf1=\E[C,
	kcuu1=\E[A,
	kf10=\EOd,
	kf11=\EOe,
	kf12=\EOf,
	kf13=\EOg,
	kf14=\EOh,
	kf15=\EOi,
	kf16=\EOj,
	kf1=\EOm,
	kf2=\EOV,
	kf3=\EOu,
	kf4=\ENj,
	kf5=\ENe,
	kf6=\ENf,
	kf7=\ENh,
	kf8=\E[H,
	kf9=\EOc,
	kind=\E[S,
	kLFT=\E[u,
	kri=\E[T,
	kRIT=\E[v,
	ll=\E#2,
	mc0=\E[0i,
	mc4=\E[?8i,
	mc5=\E[?4i,
	mgc=\E:,
	nel=\EE,
	pln=\E[%p1%dp%p2%:-16s,
	rc=\E8,
	rep=%p1%c\E[%p2%{1}%-%db,
	rev=\E[7m,
	ri=\EM,
	rin=\E[%p1%dT,
	rmacs=^O,
	rmir=\E[4l,
	rmkx=\E[19;0|,
	rmln=\E<,
	rmso=\E[m,
	rmul=\E[m,
	rmxon=\E[29;1|,
	rs2=\E[5;0|,
	sc=\E7,
	sgr0=\E[m^O,
	sgr=\E[0%?%p5%p6%|%t;2%;%?%p2%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	smacs=^N,
	smgl=\E4,
	smgr=\E5,
	smir=\E[4h,
	smkx=\E[19;1|,
	smln=\E?,
	smso=\E[7m,
	smul=\E[4m,
	smxon=\E[29;0|,
	tbc=\E[3g,
	vpa=\E[%p1%{1}%+%dd,


ATT513|att513|513|att513-page|513-page|attis513-pfk|513bct|AT&T 513 Terminal using page mode @(#)513.ti 1.3,
	am, chts, mir, msgr, xenl, xon,
	cols#80, lh#2, lines#24, lw#8, nlab#8,
	acsc=hrisjjkkllmmnnqqttuuvvwwxx{{||}}~~-f\,h.e+g`b,
	bel=^G, blink=\E[5m, bold=\E[4;7m, cbt=\E[Z,
	clear=\E[H\E[J, cnorm=\E[11;0|, cr=\r,
	csr=%i\E[%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	cvvis=\E[11;1|, dch=\E[%p1%dP, dch1=\E[P$<1>,
	dim=\E[2m, dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K,
	el1=\E[1K, enacs=\E(B\E)1, home=\E[H,
	hpa=\E[%p1%{1}%+%dG, ht=\t, hts=\EH, ich=\E[%p1%d@,
	il=\E[%p1%dL, il1=\E[L, ind=\n, indn=\E[%p1%dE,
	invis=\E[8m,
	is1=\E?\E[3;3|\E[10;0|\E[21;1|\212\E[6;1|\E[1{\E[?99l,
	kBEG=\ENB, kCAN=\EOW, kCMD=\EOU, kCPY=\END, kCRT=\EON,
	kDC=\ENF, kDL=\ENE, kEND=\ENN, kEOL=\EOA, kEXT=\EOK,
	kFND=\EOX, kHLP=\EOM, kHOM=\ENM, kIC=\ENJ, kLFT=\ENK,
	kMOV=\ENC, kMSG=\EOL, kNXT=\ENH, kOPT=\EOR, kPRT=\EOZ,
	kPRV=\ENG, kRDO=\EOT, kRES=\EOQ, kRIT=\ENL, kRPL=\EOY,
	kSAV=\EOO, kSPD=\EOP, kUND=\EOS, kbeg=\E9, kbs=\b,
	kcan=\EOw, kcbt=\E[Z, kclo=\EOV, kclr=\E[J, kcmd=\EOu,
	kcpy=\ENd, kcrt=\EOn, kcub1=\E[D, kcud1=\E[B,
	kcuf1=\E[C, kcuu1=\E[A, kdch1=\ENf, kdl1=\ENe,
	kel=\EOa, kend=\E0, kent=\Eent, kext=\EOk, kf1=\EOc,
	kf2=\EOd, kf3=\EOe, kf4=\EOf, kf5=\EOg, kf6=\EOh,
	kf7=\EOi, kf8=\EOj, kfnd=\EOx, khlp=\EOm, khome=\E[H,
	kich1=\ENj, kind=\E[S, kmov=\ENc, kmrk=\ENi,
	kmsg=\EOl, knp=\E[U, knxt=\ENh, kopn=\EOv, kopt=\EOr,
	kpp=\E[V, kprt=\EOz, kprv=\ENg, krdo=\EOt, kref=\EOb,
	kres=\EOq, krfr=\ENa, kri=\E[T, krpl=\EOy, krst=\EOB,
	ksav=\EOo, kslt=\ENI, kspd=\EOp, kund=\EOs, ll=\E#2,
	mc0=\E[?98l\E[0i, mc4=\E[?98l\E[?8i,
	mc5=\E[?98l\E[?4i, nel=\EE,
	pfkey=\E[%p1%d;%p2%l%d;3;0p\s\s\sF%p1%d\s\s\s\s\s\s\s\s\s\s\s%p2%s,
	pfloc=\E[%p1%d;%p2%l%d;2;0p\s\s\sF%p1%d\s\s\s\s\s\s\s\s\s\s\s%p2%s,
	pfx=\E[%p1%d;%p2%l%d;1;0p\s\s\sF%p1%d\s\s\s\s\s\s\s\s\s\s\s%p2%s,
	pln=\E[%p1%dp%p2%:-16s, rc=\E8,
	rep=%p1%c\E[%p2%{1}%-%db, rev=\E[7m, ri=\EM,
	rin=\E[%p1%dF, rmacs=^O, rmir=\E[4l, rmkx=\E[19;0|\E[21;1|\212,
	rmln=\E<, rmso=\E[m, rmul=\E[m,
	rs1=\E?\E[3;3|\E[10;0|\E[21;1|\212\E[6;1|\E[1{\E[?99l\E[2;0|\E[6;1|\E[8;0|\E[19;0|\E[1{\E[?99l,
	rs2=\E[5;0|, sc=\E7,
	sgr=\E[0%?%p1%p5%|%t;2%;%?%p2%p6%|%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O, smacs=^N, smir=\E[4h, smkx=\E[19;1|\E[21;4|\Eent,
	smln=\E?, smso=\E[2;7m, smul=\E[4m, tbc=\E[3g,
	vpa=\E[%p1%{1}%+%dd,

ATT500|att500|bct500|500|BCT500|AT&T-IS 500 terminal @(#)513.ti 1.3,
	use=att513,

5310|att5310|ATT5310|AT&T 5310 hardcopy terminal @(#)5310.ti 1.1,
	am, hc, os,
	cols#80,
	bel=^G, cr=\r, cub1=\b, cud1=\n, dch1=\E[P, dl1=\E[M,
	ind=\n, kbs=\b, rmso=\E[m, smso=\E[7m,

5320|att5320|ATT5320|AT&T 5320 hardcopy terminal @(#)5310.ti 1.1,
	cols#132, use=5310,
# Info:
#	5620 terminfo  (2.0 or later ROMS with char attributes)
#	
#    assumptions:
#	ind (scroll forward one line) is only done at screen bottom
#
att5620|ATT5620|dmd|tty5620|ttydmd|5620|5620 terminal 88 columns @(#)5620.ti 1.1,
	npc,xon,am, cols#88, lines#70, it#8,
	bel=^G, cr=^M, clear=\E[H\E[J,
	ht=^I, nel=^J,
# Info:
#	clear to end of line, screen
#
	el=\E[K, ed=\E[J,
# Info:
#	scroll screen up/down one/many lines
#
	ind=\E[S, indn=\E[%p1%dS, ri=\E[T, rin=\E[%p1%dT,
# Info:
#	cursor arbitrarily, down, home, left, right, up
#	cup=\E[%i%p1%d;%p2%dH, home=\E[H,
#
	cup=\E[%i%p1%d;%p2%dH, cud1=\E[B, home=\E[H,
	cub1=^H, cuf1=\E[C, cuu1=\E[A,
# Info:
#	delete/insert one/many characters/lines
#
	dch1=\E[P, dch=\E[%p1%dP, dl1=\E[M, dl=\E[%p1%dM,
	ich1=\E[@, ich=\E[%p1%d@, il1=\E[L, il=\E[%p1%dL,
# Info:
#	sequences sent by keys: backspace, clear, down-arrow, 
#	home-arrow, left-arrow, home-down, right-arrow, up-arrow
#
	kbs=^H, kclr=\E[2J, kcud1=\E[B, khome=\E[H,
	kcub1=\E[D, kll=\E[70;1H, kcuf1=\E[C, kcuu1=\E[A,
# Info:
#	program function keys, reset terminal, restore/store cursor 
#	position
#
	pfx=\E[%p1%d;%p2%l%dq%p2%s,
	rs1=\Ec, rc=\E8, sc=\E7,
# Info:
#	set/clear underline/standout character attributes
#
	smul=\E[4m, rmul=\E[0m,
	smso=\E[7m, rmso=\E[0m,
# Info:
#	reverse video, reset character attributes, pseudo-dim, 
#	pseudo-bold
#
	rev=\E[7m, sgr0=\E[0m,
	dim=\E[2m, bold=\E[2m,

att5620-24|ATT5620-24|5620-24|dmd-24|teletype dmd 5620 in a 24x80 layer @(#)5620.ti 1.1,
	lines#24, use=5620,

att5620-34|ATT5620-34|5620-34|dmd-34|teletype dmd 5620 in a 34x80 layer @(#)5620.ti 1.1,
	lines#34, use=5620,


#Info:
#       Entries for kf15 thru kf28 refer to the shifted system pf keys.
#
#       Entries for kf29 thru kf46 refer to the alternate keypad mode
#       keys:  = * / + 7 8 9 - 4 5 6 , 1 2 3 0 . ENTER


605|605bct|ATT605|att605|AT&T 605  80 column  102key keyboard @(#)605.ti 1.1,
	am,
	xenl,
	hs,
	eslok,
	mir,
	msgr,
	xon,
	cols#80,
	it#8,
	lh#2,
	lines#24,
	lw#8,
	nlab#8,
	wsl#80,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G,
	blink=\E[5m,
	bold=\E[1m,
	cbt=\E[Z,
	civis=\E[?25l,
	clear=\E[H\E[J,
	cnorm=\E[?25h\E[?12l,
	cr=^M,
	csr=\E[%i%p1%d;%p2%dr,
	cup=\E[%i%p1%d;%p2%dH,
	cud1=\E[B,
	cub=\E[%p1%dD,
	cub1=^H,
	cud=\E[%p1%dB,
	cuf=\E[%p1%dC,
	cuf1=\E[C,
	cuu=\E[%p1%dA,
	cuu1=\E[A,
	cvvis=\E[?12;25h,
	dch1=\E[P,
	dch=\E[%p1%dP,
	dim=\E[2m,
	dl=\E[%p1%dM,
	dl1=\E[M,
	ed=\E[J,
	el=\E[K,
	el1=\E[1K,
	flash=\E[?5h$<200>\E[?5l,
	fsl=\E8,
	home=\E[H,
	ht=\t,
	ich=\E[%p1%d@,      
	il=\E[%p1%dL,
	il1=\E[L,
	ind=\ED,
	invis=\E[8m,
	is1=\E[8;0|\E[?3;4;5;13;15l\E[13;20l\E[?7h\E[12h\E(B\E)0,
	is2=\E[0m^O,
	is3=\E(B\E)0,
	kbs=^H,
	kcbt=\E[Z,
	kclr=\E[2J,
	kcub1=\E[D,
	kcud1=\E[B,
	kcuf1=\E[C,
	kcuu1=\E[A,
	kdch1=\E[P,
	kdl1=\E[M,
	kent=^M,
	kend=\E[24;1H,
	kf1=\EOc,
	kf2=\EOd,
	kf3=\EOe,
	kf4=\EOf,
	kf5=\EOg,
	kf6=\EOh,
	kf7=\EOi,
	kf8=\EOj,
	kf9=\ENo,
	kf10=\ENp,
	kf11=\ENq,
	kf12=\ENr,
	kf13=\ENs,
	kf14=\ENt,
	kf15=\EOC,
	kf16=\EOD,
	kf17=\EOE,
	kf18=\EOF,
	kf19=\EOG,
	kf20=\EOH,
	kf21=\EOI,
	kf22=\EOJ,
	kf23=\ENO,
	kf24=\ENP,
	kf25=\ENQ,
	kf26=\ENR,
	kf27=\ENS,
	kf28=\ENT,
	kf29=\EOP,
	kf30=\EOQ,
	kf31=\EOR,
	kf32=\EOS,
	kf33=\EOw,
	kf34=\EOx,
	kf35=\EOy,
   	kf36=\EOm,
	kf37=\EOt,
	kf38=\EOu,
	kf39=\EOv,
	kf40=\EOl,
	kf41=\EOq,
	kf42=\EOr,
	kf43=\EOs,
	kf44=\EOp,
	kf45=\EOn,
	kf46=\EOM,
	khome=\E[H,
	kil1=\E[L,
	kind=\E[S,
	kich1=\E[@,
	kpp=\E[V,
	knp=\E[U,
	kri=\E[T,
	kLFT=\E[ A,
	kRIT=\E[ @,
	ll=\E[24H,
	mc4=\E[?4i,
	mc5=\E[?5i,
	nel=\EE,
	pfx=\E[%p1%d;%p2%l%02dq   F%p1%1d           %p2%s,
	pln=\E[%p1%d;0;0;0q%p2%:-16.16s,
	rev=\E[7m,
	ri=\EM,
	rmacs=^O,
	rmir=\E[4l,
	rs2=\Ec\E[?3l,
	rc=\E8,
	rmso=\E[m,
	rmln=\E[2p,
	rmul=\E[m,
	sgr0=\E[m^O,
	sgr=\E[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p4%t;5%;%?%p3%p1%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	smacs=^N,
	smir=\E[4h,
	smso=\E[7m,
	smul=\E[4m,
	smln=\E[p,
	sc=\E7,
	tsl=\E7\E[25;%i%p1%dx,

605-w|605bct-w|ATT605-w|att605-w|AT&T 605-w 132 column 102 key keyboard @(#)605.ti 1.1,
        cols#132,
	is1=\E[8;0|\E[?4;5;13;15l\E[13;20l\E[?3;7h\E[12h\E(B\E)0,
	wsl#132,
	use=605,
610|610bct|ATT610|att610|AT&T 610; 80 column; 98key keyboard @(#)610.ti 1.4,
	am,
	xenl,
	hs,
	eslok,
	mir,
	msgr,
	xon,
	cols#80,
	it#8,
	lh#2,
	lines#24,
	lw#8,
	nlab#8,
	wsl#80,
	cbt=\E[Z,
	bel=^G,
	cr=^M,
	csr=\E[%i%p1%d;%p2%dr,
	clear=\E[H\E[J,
	el=\E[K,
	ed=\E[J,
	cup=\E[%i%p1%d;%p2%dH,
	cud1=\E[B,
	home=\E[H,
	civis=\E[?25l,
	cub1=^H,
	cnorm=\E[?25h\E[?12l,
	cuf1=\E[C,
	ll=\E[24H,
	cuu1=\E[A,
	cvvis=\E[?12;25h,
	dch1=\E[P,
	dl1=\E[M,
	smacs=^N,
	blink=\E[5m,
	bold=\E[1m,
	dim=\E[2m,
	smir=\E[4h,
	ich=\E[%p1%d@,
	invis=\E[8m,
	rev=\E[7m,
	smso=\E[7m,
	smul=\E[4m,
	rmacs=^O,
	sgr0=\E[m^O,
	rmir=\E[4l,
	rmso=\E[m,
	rmul=\E[m,
	flash=\E[?5h$<200>\E[?5l,
	fsl=\E8,
	is1=\E[8;0|\E[?3;4;5;13;15l\E[13;20l\E[?7h\E[12h\E(B\E)0,
	is2=\E[0m^O,
	is3=\E(B\E)0,
	il1=\E[L,
	kbs=^H,
	kclr=\E[2J,
	kcud1=\E[B,
	kf1=\EOc,
	kf2=\EOd,
	kf3=\EOe,
	kf4=\EOf,
	kf5=\EOg,
	kf6=\EOh,
	kf7=\EOi,
	kf8=\EOj,
	kf9=\ENo,
	kf10=\ENp,
	kf11=\ENq,
	kf12=\ENr,
	kf13=\ENs,
	kf14=\ENt,
	khome=\E[H,
	kcub1=\E[D,
	kcuf1=\E[C,
	kind=\E[S,
	kri=\E[T,
	kcuu1=\E[A,
	nel=\EE,
	dch=\E[%p1%dP,
	dl=\E[%p1%dM,
	cud=\E[%p1%dB,
	il=\E[%p1%dL,
	cub=\E[%p1%dD,
	cuf=\E[%p1%dC,
	cuu=\E[%p1%dA,
	pfx=\E[%p1%d;%p2%l%02dq   F%p1%1d           %p2%s,
	mc4=\E[?4i,
	mc5=\E[?5i,
	rs2=\Ec\E[?3l,
	rc=\E8,
	sc=\E7,
	ind=\ED,
	ri=\EM,
	sgr=\E[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p4%t;5%;%?%p3%p1%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	ht=\t,
	tsl=\E7\E[25;%i%p1%dx,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	pln=\E[%p1%d;0;0;0q%p2%:-16.16s,
	kcbt=\E[Z,
	smln=\E[p,
	rmln=\E[2p,
	kLFT=\E[ @,
	kRIT=\E[ A,
	el1=\E[1K,
610-w|610bct-w|ATT610-w|att610-w|AT&T 610; 132 column; 98key keyboard @(#)610.ti 1.4,
	cols#132,
	is1=\E[8;0|\E[?4;5;13;15l\E[13;20l\E[?3;7h\E[12h,
	wsl#132,
	use=610,
610-103k|610bct-103k|ATT610-103k|att610-103k|AT&T 610; 80 column; 103key keyboard @(#)610.ti 1.4,
	kf9@,
	kf10@,
	kf11@,
	kf12@,
	kf13@,
	kf14@,
	kdch1=\ENf,
	kdl1=\ENe,
	kel=\EOa,
	kich1=\ENj,
	krmir=\ENj,
	knp=\E[U,
	kpp=\E[V,
	kbeg=\E9,
	kcan=\EOw,
	kclo=\EOV,
	kcmd=\EOu,
	kcpy=\ENd,
	kcrt=\EOn,
	kend=\E0,
	kent=^M,
	kext=\EOk,
	kfnd=\EOx,
	khlp=\EOm,
	kmrk=\ENi,
	kmsg=\EOl,
	kmov=\ENc,
	knxt=\ENh,
	kopn=\EOv,
	kopt=\EOr,
	kprt=\EOz,
	kprv=\ENg,
	krdo=\EOt,
	kref=\EOb,
	krfr=\ENa,
	krpl=\EOy,
	krst=\EOB,
	kres=\EOq,
	ksav=\EOo,
	kspd=\EOp,
	kund=\EOs,
	kBEG=\ENB,
	kCAN=\EOW,
	kCMD=\EOU,
	kCPY=\END,
	kCRT=\EON,
	kDC=\ENF,
	kDL=\ENE,
	kslt=\ENI,
	kEND=\ENN,
	kEOL=\EOA,
	kEXT=\EOK,
	kFND=\EOX,
	kHLP=\EOM,
	kMSG=\EOL,
	kMOV=\ENC,
	kNXT=\ENH,
	kOPT=\EOR,
	kPRT=\EOZ,
	kPRV=\ENG,
	kRDO=\EOT,
	kRPL=\EOY,
	kRES=\EOQ,
	kSAV=\EOO,
	kSPD=\EOP,
	kUND=\EOS,
	use=610,
610-103k-w|610bct-103k-w|ATT610-103k-w|att610-103k-w|AT&T 610; 132 column; 103key keyboard @(#)610.ti 1.4,
	cols#132,
	is1=\E[8;0|\E[?4;5;13;15l\E[13;20l\E[?3;7h\E[12h,
	wsl#132,
	use=610-103k,
615|615mt|ATT615|att615|AT&T 615; 80 column; 98key keyboard @(#)615.ti 1.3,
	kLFT=\E[ A,
	kRIT=\E[ @,
	kf15=\EOC,
	kf16=\EOD,
	kf17=\EOE,
	kf18=\EOF,
	kf19=\EOG,
	kf20=\EOH,
	kf21=\EOI,
	kf22=\EOJ,
	kf23=\ENO,
	kf24=\ENP,
	kf25=\ENQ,
	kf26=\ENR,
	kf27=\ENS,
	kf28=\ENT,
	kf29=\EOP,
	kf30=\EOQ,
	kf31=\EOR,
	kf32=\EOS,
	kf33=\EOw,
	kf34=\EOx,
	kf35=\EOy,
	kf36=\EOm,
	kf37=\EOt,
	kf38=\EOu,
	kf39=\EOv,
	kf40=\EOl,
	kf41=\EOq,
	kf42=\EOr,
	kf43=\EOs,
	kf44=\EOp,
	kf45=\EOn,
	kf46=\EOM,
	use=610,
615-w|615mt-w|ATT615-w|att615-w|AT&T 615; 132 column; 98key keyboard @(#)615.ti 1.3,
	kLFT=\E[ A,
	kRIT=\E[ @,
	kf15=\EOC,
	kf16=\EOD,
	kf17=\EOE,
	kf18=\EOF,
	kf19=\EOG,
	kf20=\EOH,
	kf21=\EOI,
	kf22=\EOJ,
	kf23=\ENO,
	kf24=\ENP,
	kf25=\ENQ,
	kf26=\ENR,
	kf27=\ENS,
	kf28=\ENT,
	kf29=\EOP,
	kf30=\EOQ,
	kf31=\EOR,
	kf32=\EOS,
	kf33=\EOw,
	kf34=\EOx,
	kf35=\EOy,
	kf36=\EOm,
	kf37=\EOt,
	kf38=\EOu,
	kf39=\EOv,
	kf40=\EOl,
	kf41=\EOq,
	kf42=\EOr,
	kf43=\EOs,
	kf44=\EOp,
	kf45=\EOn,
	kf46=\EOM,
	use=610-w,
615-103k|615mt-103k|ATT615-103k|att615-103k|AT&T 615; 80 column; 103key keyboard @(#)615.ti 1.3,
	kLFT=\E[ A,
	kRIT=\E[ @,
	use=610-103k,
615-103k-w|615mt-103k-w|ATT615-103k-w|att615-103k-w|AT&T 615; 132 column; 103key keyboard @(#)615.ti 1.3,
	kLFT=\E[ A,
	kRIT=\E[ @,
	use=610-103k-w,
620|620mtg|ATT620|att620|AT&T 620; 80 column; 98key keyboard @(#)620.ti 1.4,
	am,
	xenl,
	hs,
	eslok,
	mir,
	msgr,
	xon,
	cols#80,
	it#8,
	lh#2,
	lines#24,
	lw#8,
	nlab#8,
	wsl#80,
	cbt=\E[Z,
	bel=^G,
	cr=^M,
	csr=\E[%i%p1%d;%p2%dr,
	clear=\E[H\E[J,
	el=\E[K,
	ed=\E[J,
	cup=\E[%i%p1%d;%p2%dH,
	cud1=\E[B,
	home=\E[H,
	civis=\E[?25l,
	cub1=^H,
	cnorm=\E[?25h\E[?12l,
	cuf1=\E[C,
	ll=\E[24H,
	cuu1=\E[A,
	cvvis=\E[?12;25h,
	dch1=\E[P,
	dl1=\E[M,
	smacs=^N,
	blink=\E[5m,
	bold=\E[1m,
	smir=\E[4h,
	ich=\E[%p1%d@,
	invis=\E[8m,
	rev=\E[7m,
	smso=\E[7m,
	smul=\E[4m,
	rmacs=^O,
	sgr0=\E[m^O,
	rmir=\E[4l,
	rmso=\E[m,
	rmul=\E[m,
	flash=\E[?5h$<200>\E[?5l,
	fsl=\E8,
	is1=\E[8;0|\E[?3;4;5;13;15l\E[13;20l\E[?7h\E[12h,
	is2=\E[0m^O,
	is3=\E(B\E)0,
	il1=\E[L,
	kbs=^H,
	kclr=\E[2J,
	kcud1=\E[B,
	kf1=\EOc,
	kf2=\EOd,
	kf3=\EOe,
	kf4=\EOf,
	kf5=\EOg,
	kf6=\EOh,
	kf7=\EOi,
	kf8=\EOj,
	kf9=\ENo,
	kf10=\ENp,
	kf11=\ENq,
	kf12=\ENr,
	kf13=\ENs,
	kf14=\ENt,
	kf15=\EOC,
	kf16=\EOD,
	kf17=\EOE,
	kf18=\EOF,
	kf19=\EOG,
	kf20=\EOH,
	kf21=\EOI,
	kf22=\EOJ,
	kf23=\ENO,
	kf24=\ENP,
	kf25=\ENQ,
	kf26=\ENR,
	kf27=\ENS,
	kf28=\ENT,
	kf29=\EOP,
	kf30=\EOQ,
	kf31=\EOR,
	kf32=\EOS,
	kf33=\EOw,
	kf34=\EOx,
	kf35=\EOy,
	kf36=\EOm,
	kf37=\EOt,
	kf38=\EOu,
	kf39=\EOv,
	kf40=\EOl,
	kf41=\EOq,
	kf42=\EOr,
	kf43=\EOs,
	kf44=\EOp,
	kf45=\EOn,
	kf46=\EOM,
	khome=\E[H,
	kcub1=\E[D,
	kcuf1=\E[C,
	kind=\E[S,
	kri=\E[T,
	kcuu1=\E[A,
	nel=\EE,
	dch=\E[%p1%dP,
	dl=\E[%p1%dM,
	cud=\E[%p1%dB,
	il=\E[%p1%dL,
	cub=\E[%p1%dD,
	cuf=\E[%p1%dC,
	cuu=\E[%p1%dA,
	pfx=\E[%p1%d;%p2%l%02dq   F%p1%1d           %p2%s,
	mc4=\E[?4i,
	mc5=\E[?5i,
	rs2=\Ec\E[?3l,
	rc=\E8,
	sc=\E7,
	ind=\ED,
	ri=\EM,
	sgr=\E[0%?%p6%t;1%;%?%p2%t;4%;%?%p4%t;5%;%?%p5%t;2%;%?%p3%p1%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	ht=\t,
	tsl=\E7\E[25;%i%p1%dx,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	pln=\E[%p1%d;0;0;0q%p2%:-16.16s,
	kcbt=\E[Z,
	smln=\E[p,
	rmln=\E[2p,
	kLFT=\E[ A,
	kRIT=\E[ @,
	el1=\E[1K,
620-w|620mtg-w|ATT620-w|att620-w|AT&T 620; 132 column; 98key keyboard @(#)620.ti 1.4,
	cols#132,
	is1=\E[8;0|\E[?4;5;13;15l\E[13;20l\E[?3;7h\E[12h,
	wsl#132,
	use=620,
620-103k|620mtg-103k|ATT620-103k|att620-103k|AT&T 620; 80 column; 103key keyboard @(#)620.ti 1.4,
	kf9@,
	kf10@,
	kf11@,
	kf12@,
	kf13@,
	kf14@,
	kf15@,
	kf16@,
	kf17@,
	kf18@,
	kf19@,
	kf20@,
	kf21@,
	kf22@,
	kf23@,
	kf24@,
	kf25@,
	kf26@,
	kf27@,
	kf28@,
	kf29@,
	kf30@,
	kf31@,
	kf32@,
	kf33@,
	kf34@,
	kf35@,
	kf36@,
	kf37@,
	kf38@,
	kf39@,
	kf40@,
	kf41@,
	kf42@,
	kf43@,
	kf44@,
	kf45@,
	kf46@,
	kdch1=\ENf,
	kdl1=\ENe,
	kel=\EOa,
	kich1=\ENj,
	krmir=\ENj,
	knp=\E[U,
	kpp=\E[V,
	kbeg=\E9,
	kcan=\EOw,
	kclo=\EOV,
	kcmd=\EOu,
	kcpy=\ENd,
	kcrt=\EOn,
	kend=\E0,
	kent=^M,
	kext=\EOk,
	kfnd=\EOx,
	khlp=\EOm,
	kmrk=\ENi,
	kmsg=\EOl,
	kmov=\ENc,
	knxt=\ENh,
	kopn=\EOv,
	kopt=\EOr,
	kprt=\EOz,
	kprv=\ENg,
	krdo=\EOt,
	kref=\EOb,
	krfr=\ENa,
	krpl=\EOy,
	krst=\EOB,
	kres=\EOq,
	ksav=\EOo,
	kspd=\EOp,
	kund=\EOs,
	kBEG=\ENB,
	kCAN=\EOW,
	kCMD=\EOU,
	kCPY=\END,
	kCRT=\EON,
	kDC=\ENF,
	kDL=\ENE,
	kslt=\ENI,
	kEND=\ENN,
	kEOL=\EOA,
	kEXT=\EOK,
	kFND=\EOX,
	kHLP=\EOM,
	kMSG=\EOL,
	kMOV=\ENC,
	kNXT=\ENH,
	kOPT=\EOR,
	kPRT=\EOZ,
	kPRV=\ENG,
	kRDO=\EOT,
	kRPL=\EOY,
	kRES=\EOQ,
	kSAV=\EOO,
	kSPD=\EOP,
	kUND=\EOS,
	use=620,
620-103k-w|620mtg-103k-w|ATT620-103k-w|att620-103k-w|AT&T 620; 132 column; 103key keyboard @(#)620.ti 1.4,
	cols#132,
	is1=\E[8;0|\E[?4;5;13;15l\E[13;20l\E[?3;7h\E[12h,
	wsl#132,
	use=620-103k,

##############################################################
#
#	630 terminfo
#
#
630|att630|5630|5630DMD|630MTG|AT&T 630 windowing terminal @(#)630.ti 1.4,
	am, da, db, mir, msgr, npc, xon,
	cols#80, it#8, lines#60, lm#0,
#
# short descriptions without \E
#
	bel=^G, cr=\r, ht=\t, nel=\r\n,
#
# cursor movement
#
	cuu1=\E[A,     cud1=\E[B,     cuf1=\E[C,     cub1=\b,
	cuu=\E[%p1%dA, cud=\E[%p1%dB, cuf=\E[%p1%dC, cub=\E[%p1%dD,
	cup=\E[%i%p1%d;%p2%dH,
	home=\E[H,
	cbt=\E[Z,
#
# scrolling
#
	ind=\ED,         ri=\EM,
	indn=\E[%p1%dS, rin=\E[%p1%dT,
#
# character attributes
#
	smul=\E[4m, rmul=\E[m,
	smso=\E[7m, rmso=\E[m,
	rev=\E[7m,
	sgr=\E[0%?%p2%t;4%;%?%p1%p3%|%p4%|%p5%|%t;7%;m,
	sgr0=\E[m,
#
# clear
#
	el=\E[K, el1=\E[1K, ed=\E[J, clear=\E[H\E[J,
#
# insert/delete
#
	dch1=\E[P,     dl1=\E[M,     il1=\E[L,
	dch=\E[%p1%dP, dl=\E[%p1%dM, il=\E[%p1%dL, ich=\E[%p1%d@,
	smir=\E[4h,    rmir=\E[4l,
#
# pf string
#
	pfx=\E[%p1%d;%p2%l%dq%p2%s,
#
# set/reset
#
	sc=\E7, rc=\E8,
	is2=\E[m, rs2=\Ec,
#
# printer
#
	mc4=\E[?4i, mc5=\E[?5i,
#
# keyboard definitions
#
	kbs=\b, kclr=\E[2J, kent=\r, khome=\E[H, kcbt=\E[Z,
	kcuu1=\E[A, kcud1=\E[B, kcuf1=\E[C, kcub1=\E[D,
	kf9=\ENo,  kf10=\ENp, kf11=\ENq,
	kf12=\ENr, kf13=\ENs, kf14=\ENt,
#
# the following keys are used only by the 122 key keyboard
#
	kdch1=\E[P, kdl1=\E[M,
	kich1=\E[@, kil1=\E[L,
	kf15=\ENu, kf16=\ENv, kf17=\ENw,
	kf18=\ENx, kf19=\ENy, kf20=\ENz,
	kf21=\EN{, kf22=\EN|, kf23=\EN},
	kf24=\EN~,


630-24|att630-24|5630-24|5630DMD-24|630MTG-24|AT&T 630 windowing terminal 24 lines @(#)630.ti 1.4,
	lines#24, use=630,


6300+|PC6300PLUS|pc6300plus|6300plus|6300PLUS|AT&T-IS PC 6300 PLUS Personal Computer @(#)6300+.ti 1.1,
	am,
	cols#80, lines#24,
	bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[2J\E[H,
	cr=\r, cub1=\b, cud1=\E[B, cuf1=\E[C,
	cup=\E[%i%p1%02d;%p2%02dH, cuu1=\E[A, dch1=\E[1P,
	dim=\E[2m, dl1=\E[1M, ed=\E[0J, el=\E[0K, home=\E[H,
	hts=\EH, ich1=\E[1@, il1=\E[1L, ind=\n, invis=\E[9m,
	kbs=\b, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C,
	kcuu1=\E[A, kf1=\EOc, kf10=\EOu, kf2=\EOd, kf3=\EOe,
	kf4=\EOf, kf5=\EOg, kf6=\EOh, kf7=\EOi, kf8=\EOj,
	kf9=\EOk, nel=\r\n, rev=\E[7m, rmso=\E[m, rmul=\E[m,
	smso=\E[7m, smul=\E[4m, tbc=\E[3g,
#
# Info:
#	TERMINFO entry for the AT&T Unix PC 7300
#	from escape(7) in Unix PC 7300 Manual.
#	Somewhat similar to a vt100-am (but different enough
#	to redo this from scratch.)
# Info:
#	/***************************************************************
#	*
#	*           FONT LOADING PROGRAM FOR THE UNIX PC
#	*
#	*     This routine loads a font defined in the file ALTFONT
#	*     into font memory slot #1.  Once the font has been loaded,
#	*     it can be used as an alternative character set.
#	*
#	*     The call to ioctl with the argument WIOCLFONT is the key 
#	*     to this routine.  For more information, see window(7) in 
#	*     the PC 7300 documentation.
#	***************************************************************/
#	#include <string.h>		/* needed for strcpy call */
#	#include <sys/window.h>         /* needed for ioctl call */
#	#define FNSIZE	60		/* font name size */
#	#define ALTFONT  "/usr/lib/wfont/special.8.ft"  /* font file */
#	/*
#	*     The file /usr/lib/wfont/special.8.ft comes with the
#	*     standard PC software.  It defines a graphics character set
#	*     similar to that of the Teletype 5425 terminal.  To view
#	*     this or other fonts in /usr/lib/wfont, use the command
#	*     cfont <filename>.  For further information on fonts see
#	*     cfont(1) in the PC 7300 documentation.
#	*/
#	
#	struct altfdata 	/* structure for alt font data */
#	{
#	short	altf_slot;		/* memory slot number */
#	char	altf_name[FNSIZE];	/* font name (file name) */
#	};
#	ldfont()
#	{
#		int wd;		/* window in which altfont will be */
#		struct altfdata altf;
#		altf.altf_slot=1;
#		strcpy(altf.altf_name,ALTFONT);
#		for (wd =1; wd < 12; wd++) {
#		     ioctl(wd, WIOCLFONT,&altf);
#	        }
#	}
#
7300|unixpc|pc7300|PC7300|unix_pc|AT&T UNIX PC Model 7300 @(#)7300.ti 1.2,
	am, xon, xenl,
	cols#80, it#8, lines#24,
	bel=^G, bold=\E[7m, cbt=\E\t, clear=\E[2J\E[H, cr=\r,
	cub=\E[%p1%dD, cud=\E[%p1%dB, cud1=\E[B,
	cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH,
	cuu=\E[%p1%dA, cuu1=\E[A, dim=\E[2m, dl=\E[%p1%dM,
	dl1=\E[M, ed=\E[0J, el=\E[0K, home=\E[H, il=\E[%p1%dL,
	il1=\E[L, ind=\n, is1=^O, kBEG=\EBG, kCAN=\ECN, kCPY=\ECP,
	kCRT=\ECR, kDC=\EDC, kDL=\EDL, kEND=\EEN, kEOL=\ECI,
	kFND=\EFI, kHLP=\EHL, kHOM=\EHM, kIC=\ENJ, kLFT=\EBW,
	kMOV=\EMV, kNXT=\ENX, kOPT=\EOT, kPRV=\EPV, kRDO=\ERO,
	kRIT=\EFW, kRPL=\ERP, kSAV=\ESV, kUND=\EUD, kbeg=\Ebg,
	kbs=\b, kcan=\Ecn, kcbt=\E\t, kclo=\Ecl, kclr=\Ece,
	kcmd=\Ecm, kcpy=\Ecp, kcrt=\Ecr, kcub1=\E[D,
	kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A, kdch1=\Edc,
	ked=\Ece, kel=\Eci, kend=\Een, kext=\Eex, kf1=\EOP,
	kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\E5, kf6=\E6,
	kf7=\E7, kf8=\E8, kfnd=\Efi, khlp=\Ehl, khome=\Ehm,
	kich1=\Eim, kind=\Erd, kmov=\Emv, kmrk=\Emk, knp=\Epg,
	knxt=\Enx, kopn=\Eop, kopt=\Eot, kpp=\EPG, kprt=\Epr,
	kprv=\Epv, krdo=\Ero, kref=\Ere, krfr=\Erf, kri=\Eru,
	krpl=\Erp, krst=\Ers, ksav=\Esv, kslt=\Esl, kund=\Eud,
	nel=\EE, rev=\E[7m, ri=\EM, rmacs=\E[10m, rmso=\E[0m,
	rmul=\E[0m, sgr0=\E[0;10m, smacs=\E[11m, smso=\E[7m,
	smul=\E[4m,
blit|jerq|blit running teletype rom @(#)blit.ti 1.1,
	xon,cr=^M, ind=^J, bel=^G, am, ht=^I, it#8, ul, eo,
	cud1=^J, cuf1=\EC, cuu1=\EA, cub1=\ED,
	cols#87, lines#72, clear=^L, el=\EK,
	cup=\EY%p2%' '%+%c%p1%' '%+%c,
	il1=\EF!, dl1=\EE!, ich1=\Ef!, dch1=\Ee!,
	il=\EF%p1%' '%+%c, dl=\EE%p1%' '%+%c,
	ich=\Ef%p1%' '%+%c, dch=\Ee%p1%' '%+%c,
	kcuu1=\EA, kcud1=\EB, kcuf1=\EC, kcub1=\ED, kbs=^H,
	kf1=\Ex, kf2=\Ey, kf3=\Ez,

cbblit|fixterm|blit running columbus code @(#)blit.ti 1.1,
	smso=\EU!, rmso=\EV!, smul=\EU", rmul=\EV",
	flash=\E^G, ed=\EJ, smir=\EQ, rmir=\ER, ich1@, cols#88,
	mc5=^R, mc4=^T, mc5p=\EP%p1%03d, use=blit,

oblit|ojerq|first version of blit rom @(#)blit.ti 1.1,
	xon,cr=^M, cud1=^J, ind=^J, bel=^G, cols#88, lines#72, it#8, ht=^I,
	am, ul, eo, mir, il=\Ef%p1%' '%+%c, dl=\Ee%p1%' '%+%c,
	dl1=\EE, rmir=\ER, smir=\EQ, dch1=\EO, cub1=\ED, da, db,
	il1=\EF, ed=\EJ, el=\EK, clear=^L, cup=\EY%p2%' '%+%c%p1%' '%+%c,
	cuf1=\EC, cuu1=\EA, flash=\E^G, kbs=^H,

# Info:	
#	This is an old version of vitty reentered. It is used when 
#	running the vitty program outside a blit layer.
#

blitlayer|vitty| @(#)blit.ti 1.1,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#87, lines#72, it#8, ht=^I,
	am, clear=^L, cup=\EY%p2%' '%+%c%p1%' '%+%c, el=\EK, il1=\EI, dl1=\ED,
	flash=\E^G, cuu1=^K,

# Info:	
#	
#	This is a generic terminal for the new AT&T terminals that is not
#		really for use by itself, but was created to help make the
#		support for the other new terminals easier by defining the
#		common entry fields only once.  There are several things
#		that weren't defined here but were common to 2 or more terminal
#		entries because they were different in at least 2 of the other
#		entries (e.g. clear, cols, cud1, ht, ind, and lines).
#		Unfortunately the 4424 has almost completely different data
#		for the fields than what the newer ones have and so hasn't been
#		included as one of the terminals using this common entry.
#
attgeneric| AT&T generic terminal description @(#)generic.ti 1.2,
	am, hs, mir, msgr, xenl, xon,
	cols#80, it#8, lh#2, lines#24, lw#8, nlab#8,
	wsl#55,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m, bold=\E[4;7m, cbt=\E[Z,
	clear=\E[H\E[J, cnorm=\E[12;0j, cr=\r,
	csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	cvvis=\E[12;1j, dch=\E[%p1%dP, dch1=\E[P, dim=\E[2m,
	dl=\E[%p1%dM, dl1=\E[M, ech=\E[%p1%ds\E[%p1%dD,
	ed=\E[J, el=\E[K, el1=\E[1K, enacs=\E(B\E)0,
	flash=\E[?5h$<200>\E[?5l, fsl=\E8, home=\E[H,
	ht=\t, hts=\EH, ich=\E[%p1%d@,
	il=\E[%p1%dL, il1=\E[L, ind=\n, indn=\E[%p1%dE,
	invis=\E[8m, is1=\E<\E[?3l$<100>,
	is2=\E[0m^O\E[1;2;3;4;6l\E[12;13;14;20l\E[?6;97;99l\E[?7h\E[4i\Ex\E[25;1j\212,
	is3=\E[?5l, kbeg=\Et, kbs=\b, kcbt=\E[Z, kclr=\E[2J,
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A,
	kdch1=\E[P, kdl1=\E[M, kel=\E[2K, kend=\Ez, kent=\n,
	kf1=\EOc, kf2=\EOd, kf3=\EOe, kf4=\EOf, kf5=\EOg,
	kf6=\EOh, kf7=\EOi, kf8=\EOj, khome=\E[H, kich1=\E[4h,
	kil1=\E[L, kind=\E[T, kprt=\EOe, kri=\E[S, ll=\E[24H,
	mc0=\E[?2i, mc4=\E[?9i, mc5=\E[?4i, nel=\r\n,
	pfx=\E[%p1%d;%p2%l%02dq\s\s\sF%p1%1d\s\s\s\s\s\s\s\s\s\s\s%p2%s,
	pln=\E[%p1%d;0;0;0q%p2%:-16.16s, prot=\EV, rc=\E8,
	rev=\E[7m, ri=\EM, rin=\E[%p1%dF, rmacs=^O,
	rmir=\E[4l, rmkx=\E[21;0j, rmln=\E|, rmso=\E[m,
	rmul=\E[m, rs2=\Ec\E[?3l\E[2;0y, sc=\E7,
	sgr=\E[0%?%p1%p5%|%t;2%;%?%p2%p6%|%t;4%;%?%p4%t;5%;%?%p3%p1%|%p6%|%t;7%;%?%p7%t;8%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O, smacs=^N, smir=\E[4h, smkx=\E[21;1j\E~,
	smln=\E~, smso=\E[2;7m, smul=\E[4m, tbc=\E[3g,
	tsl=\E7\E[25;%p1%{8}%+%dH,

netty| @(#)netty.ti 1.2,
	smcup=\EC@\EI@\EU@\ER@\EW@\EP@\E{A\E[@\E#A\EXA, rmcup=\E{@\E#@\EX@,
	use=netty-Tabs,

netty-vi| @(#)netty.ti 1.2,
	smcup=\EC@\EI@\EU@\ER@\EW@\EP@\E{A\E[A\E#B\EX@, rmcup=\E{@\E[@\E#@,
	use=netty-Tabs,

netty-Tabs| @(#)netty.ti 1.2,
	am,
	hs,
	mir,
	msgr,
	it#8,
	acsc=jjkkllmmqqxx,
	bel=^G,
	cr=^M,
	clear=^L,
	el=\EZ,
	cup=\EY%p2%?%p2%{95}%>%t^A%{96}%-%;%' '%+%c%p1%?%p1%{95}%>%t^A%{96}%-%;%' '%+%c,
	home=\EY\s\s,
	cub1=^H,
	cud1=^J,
	cuu1=\EA,
	dch1=\Ed,
	dl1=\ED!,
	fsl=^A,
	smacs=\ECA, rmacs=\EC@,
	smcup=\EC@\EI@\EU@\ER@\EW@\EP@\E{A\E[@\EX@\E#C\EM@!!, rmcup=\E{@\E#@,
	smcup=\E{A, rmcup=\E{@,
	smir=\EIA, rmir=\EI@,
	smul=\EUA, rmul=\EU@,
	smso=\ERA, rmso=\ER@,
	sgr0=\EC@\EI@\EU@\ER@,
	il1=\EO!,
	is3=\EF@^A^XOE^A\EFA^A^XOF^A\EFB^A^XOG^A\EFC^A^XOH^A\EFD^A^XOI^A\EFE^A^XOJ^A\EFF^A^XOK^A\EFG^A^XOL^A\EFH^A^XOM^A\EFI^A^XON^A\EFK^A^XOO^A,
	kcud1=^XOB,
	kf1=^XOE,
	kf2=^XOF,
	kf3=^XOG,
	kf4=^XOH,
	kf5=^XOI,
	kf6=^XOJ,
	kf7=^XOK,
	kf8=^XOL,
	kclr=^XOM,
	khome=^XON,
	kll=^XOO,
	kcub1=^XOC,
	kcuf1=^XOD,
	kcuu1=^XOA,
	dl=\ED%p1%' '%+%c,
	indn=\ES%p1%' '%+%c,
	ind=\n,
	il=\EO%p1%' '%+%c,
	ht=\t,
	cols#80,
	lines#24,
# Info:
#	wind=\Ev%p1%' '%+%c%p3%' '%+%c%p2%' '%+%c%p4%' '%+%c,	loses bad
#	rev=^N,		standout seems to work better
#
	tsl=\Eb^A,

#
# The following Terminfo entry describes functions which are supported by
# the AT&T 5430/pt505 terminal software version 2 and later.
#
# The following represents the screen layout along with the associated
# bezel buttons for the 5430/pt505 terminal. The "kf" designations do
# not appear on the screen but are shown to reference the bezel buttons.
# The "CMD", "MAIL", and "REDRAW" buttons are shown in their approximate
# position relative to the screen.
#
#
#
#      +----------------------------------------------------------------+
#      |                                                                |
# XXXX | kf0                                                       kf24 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf1                                                       kf23 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf2                                                       kf22 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf3                                                       kf21 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf4                                                       kf20 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf5                                                       kf19 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf6                                                       kf18 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX |                                                                | XXXX
#      |                                                                |
#      |                                                                |
#      +----------------------------------------------------------------+
#
#          XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX
#
# Note: XXXX represents the screen buttons
#                                                          CMD   REDRAW
#
#                                                          MAIL
#
#       Depression of the "CMD" key sends    \E!    (kcmd)
#	Depression of the "MAIL" key sends   \E[26s (kf26)
#	"REDRAW" same as "REFRESH" (krfr)
#
#
# "kf" functions adds carriage return to output string if terminal is in
# 'new line' mode.
#
# The following are functions not covered in the table above:
#
#       Set keyboard character (SKC):
#
#               \EPn1;Pn2w
#
#                       Pn1= 0 Back Space key
#                       Pn1= 1 Break key
#                       Pn2=   Program char (hex)
#
#       Screen Definition (SDF):
#
#               \E[Pn1;Pn2;Pn3;Pn4;Pn5t
#
#                       Pn1=     Window number (1-39)
#                       Pn2-Pn5= Y;X;Y;X coordinates
#
#       Screen Selection (SSL):
#
#               \E[Pnu
#
#                       Pn= Window number
#
#       Set Terminal Modes (SM):
#
#               \E[Pnh
#
#                       Pn= 3 Graphics mode
#                       Pn= > Cursor blink
#                       Pn= < Enter new line mode
#                       Pn= = Enter reverse insert/replace mode
#                       Pn= ? Enter no scroll mode
#
#       Reset Terminal Mode (RM):
#
#               \E[Pnl
#
#                       Pn= 3 Exit graphics mode
#                       Pn= > Exit cursor blink
#                       Pn= < Exit new line mode
#                       Pn= = Exit reverse insert/replace mode
#                       Pn= ? Exit no scroll mode
#
#       Screen Status Report (SSR):
#
#               \E[Pnp
#
#                       Pn= 0 Request current window number
#                       Pn= 1 Request current window dimensions
#
#       Device Status Report (DSR):
#
#               \E[6n    Request cursor position
#
#       Call Status Report (CSR):
#
#               \E[Pnv
#
#                       Pn= 0 Call failed
#                       Pn= 1 Call successful
#
#       Transparent Button String (TBS):
#
#               \E[Pn1;Pn2;Pn3;{string
#
#                       Pn1= Button number to be loaded
#                       Pn2= Character count of "string"
#                       Pn3= Key mode being loaded:
#                               0= Unshifted
#                               1= Shifted
#                               2= Control
#                       String= Text string (15 chars max)
#
#       Screen Number Report (SNR):
#
#               \E[Pnp
#
#                       Pn= Screen number
#
#       Screen Dimension Report (SDR):
#
#               \E[Pn1;Pn2r
#
#                       Pn1= Number of rows available in window
#                       Pn2= Number of columns available in window
#
#       Cursor Position Report (CPR):
#
#               \E[Pn1;Pn2R
#
#                       Pn1= "Y" Position of cousor
#                       Pn2= "X" Position of cursor
#
#       Request Answer Back (RAB):
#
#               \E[c
#
#       Answer Back Response (ABR):
#
#               \E[?;*;30;VSV
#
#                       *=  0 No printer available
#                       *=  2 Printer available
#                       V=  Software version number
#                       SV= Software sub version number
#
#       Screen Alingment Aid:
#
#               \En
#
#       Bell (lower pitch):
#
#               \E[x
#
#       Dial Phone Number:
#
#               \EPdstring\
#
#                       string= Phone number to be dialed
#
#       Set Phone Labels:
#
#               \EPpstring\
#
#                       string= Label for phone buttons
#
#       Set Clock:
#
#               \EPchour;minute;second\
#
#       Position Clock:
#
#               \EPsY;X\
#
#                       Y= "Y" coordinate
#                       X= "X" coordinate
#
#       Delete Clock:
#
#               \Epr\
#
#       Programming The Function Buttons:
#
#               \EPfPn;string\
#
#                       Pn= Button number (00-06, 18-24)
#                                         (kf00-kf06, kf18-kf24)
#
#                       string= Text to sent on button depression
#
#       Request For Local Directory Data:
#
#               \EPp12;\
#
#       Local Directory Data to host:
#
#               \EPp11;LOCAL...DIRECTORY...DATA\
#
#	Request for Local Directory Data in print format:
#	
#		\EPp13;\
#
#	Enable 'Prt on Line' mode:
#
#		\022 (DC2)
#
#	Disable 'Prt on Line' mode:
#
#		\024 (DC4)
#
#
#
#								05-Aug-86
#
# 
505|pt505|5430|gs5430| AT&T Personal Terminal 505 or 5430 GETSET terminal @(#)pt505.ti 1.4,
        am, bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[2J\E[H, cnorm=\E[>l,
        cols#80, cr=\r, cub1=\E[D, cub=\E[%p1%dD, cud=\E[%p1%dB, cud1=\E[B,
        cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
        cvvis=\E[>h, dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M, ed=\E[0J,
        el=\E[0K, el1=\E2K, home=\E[H, ht=\t, il=\E[%p1%dL, il1=\E[L, ind=\n,
        is1=\EPr\\E[0u\E[2J\E[0;0H\E[0m\E[3l\E[<l\E[4l\E[>l\E[=l\E[?l,
        it#8, kbs=\b, kcmd=\E!, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A,
        kf0=\E[00s, kf1=\E[01s, kf2=\E[02s, kf3=\E[03s, kf4=\E[04s, kf5=\E[05s,
        kf6=\E[06s, kf18=\E[18s, kf19=\E[19s, kf20=\E[20s, kf21=\E[21s,
        kf22=\E[22s, kf23=\E[23s, kf24=\E24s, kf26=\E26s, krfr=\E[27s,
        lines#24, mc4=\E[4i, mc5=\E[5i, rc=\E8,
        rev=\E[7m, rmacs=\E[10m, rmir=\E[4l, rmso=\E[0m, rmul=\E[0m, rs1=\Ec,
        sc=\E7, sgr0=\E[0m, smacs=\E[11m, smir=\E[4h, smso=\E[1m, smul=\E[4m,
        xon, rmam=\E[11;1j, smam=\E[11;0j,

#
# The following Terminfo entry describes functions which are supported by
# the AT&T 5430/pt505 terminal software version 1.
#
# The following represents the screen layout along with the associated
# bezel buttons for the 5430/pt505 terminal. The "kf" designations do
# not appear on the screen but are shown to reference the bezel buttons.
# The "CMD", "MAIL", and "REDRAW" buttons are shown in their approximate
# position relative to the screen.
#
#
#
#      +----------------------------------------------------------------+
#      |                                                                |
# XXXX | kf0                                                       kf24 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf1                                                       kf23 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf2                                                       kf22 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf3                                                       kf21 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf4                                                       kf20 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf5                                                       kf19 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX | kf6                                                       kf18 | XXXX
#      |                                                                |
#      |                                                                |
# XXXX |                                                                | XXXX
#      |                                                                |
#      |                                                                |
#      +----------------------------------------------------------------+
#
#          XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX  XXXX
#
# Note: XXXX represents the screen buttons
#                                                          CMD   REDRAW
#
#                                                          MAIL
#
#       Depression of the "CMD" key sends    \E!    (kcmd)
#	Depression of the "MAIL" key sends   (note) (kf26)
#	"REDRAW" same as "REFRESH" (krfr)    (note)
#
# note: The character string sent by key 'kf26' may be user programmable
#       to send either \E[16s, or \E[26s.
#       The character string sent by key 'krfr' may be user programmable
#       to send either \E[17s, or \E[27s.
#
# "kf" functions adds carriage return to output string if terminal is in
# 'new line' mode.
#
# The following are functions not covered in the table above:
#
#       Set keyboard character (SKC):
#
#               \EPn1;Pn2w
#
#                       Pn1= 0 Back Space key
#                       Pn1= 1 Break key
#                       Pn2=   Program char (hex)
#
#       Screen Definition (SDF):
#
#               \E[Pn1;Pn2;Pn3;Pn4;Pn5t
#
#                       Pn1=     Window number (1-39)
#                       Pn2-Pn5= Y;X;Y;X coordinates
#
#       Screen Selection (SSL):
#
#               \E[Pnu
#
#                       Pn= Window number
#
#       Set Terminal Modes (SM):
#
#               \E[Pnh
#
#                       Pn= 3 Graphics mode
#                       Pn= > Cursor blink
#                       Pn= < Enter new line mode
#                       Pn= = Enter reverse insert/replace mode
#                       Pn= ? Enter no scroll mode
#
#       Reset Terminal Mode (RM):
#
#               \E[Pnl
#
#                       Pn= 3 Exit graphics mode
#                       Pn= > Exit cursor blink
#                       Pn= < Exit new line mode
#                       Pn= = Exit reverse insert/replace mode
#                       Pn= ? Exit no scroll mode
#
#       Screen Status Report (SSR):
#
#               \E[Pnp
#
#                       Pn= 0 Request current window number
#                       Pn= 1 Request current window dimensions
#
#       Device Status Report (DSR):
#
#               \E[6n    Request cursor position
#
#       Call Status Report (CSR):
#
#               \E[Pnv
#
#                       Pn= 0 Call failed
#                       Pn= 1 Call successful
#
#       Transparent Button String (TBS):
#
#               \E[Pn1;Pn2;Pn3;{string
#
#                       Pn1= Button number to be loaded
#                       Pn2= Character count of "string"
#                       Pn3= Key mode being loaded:
#                               0= Unshifted
#                               1= Shifted
#                               2= Control
#                       String= Text string (15 chars max)
#
#       Screen Number Report (SNR):
#
#               \E[Pnp
#
#                       Pn= Screen number
#
#       Screen Dimension Report (SDR):
#
#               \E[Pn1;Pn2r
#
#                       Pn1= Number of rows available in window
#                       Pn2= Number of columns available in window
#
#       Cursor Position Report (CPR):
#
#               \E[Pn1;Pn2R
#
#                       Pn1= "Y" Position of cousor
#                       Pn2= "X" Position of cursor
#
#       Request Answer Back (RAB):
#
#               \E[c
#
#       Answer Back Response (ABR):
#
#               \E[?;0;30;VSV
#
#                       V=  Software version number
#                       SV= Software sub version number
#
#       Screen Alingment Aid:
#
#               \En
#
#       Bell (lower pitch):
#
#               \E[x
#
#       Dial Phone Number:
#
#               \EPdstring\
#
#                       string= Phone number to be dialed
#
#       Set Phone Labels:
#
#               \EPpstring\
#
#                       string= Label for phone buttons
#
#       Set Clock:
#
#               \EPchour;minute;second\
#
#       Position Clock:
#
#               \EPsY;X\
#
#                       Y= "Y" coordinate
#                       X= "X" coordinate
#
#       Delete Clock:
#
#               \Epr\
#
#       Programming The Function Buttons:
#
#               \EPfPn;string\
#
#                       Pn= Button number (00-06, 18-24)
#                                         (kf00-kf06, kf18-kf24)
#
#                       string= Text to sent on button depression
#
#
#
#								05-Aug-86
#
# 
505-24|pt505-24|5430-24|gs5430-24| AT&T PT505 or 5430 GETSET version 1 24 lines @(#)pt505v1.ti 1.2,
        am, bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[2J\E[H, cnorm=\E[>l,
        cols#80, cr=\r, cub1=\E[D, cub=\E[%p1%dD, cud=\E[%p1%dB, cud1=\E[B,
        cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
        cvvis=\E[>h, dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M, ed=\E[0J,
        el=\E[0K, el1=\E2K, home=\E[H, ht=\t, il=\E[%p1%dL, il1=\E[L, ind=\n,
        is1=\EPr\\E[0u\E[2J\E[0;0H\E[0m\E[3l\E[<l\E[4l\E[>l\E[=l\E[?l,
        it#8, kbs=\b, kcmd=\E!, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A,
        kf0=\E[00s, kf1=\E[01s, kf2=\E[02s, kf3=\E[03s, kf4=\E[04s, kf5=\E[05s,
        kf6=\E[06s, kf18=\E[18s, kf19=\E[19s, kf20=\E[20s, kf21=\E[21s,
        kf22=\E[22s, kf23=\E[23s, kf24=\E24s, kf26=\E26s, krfr=\E[27s,
        lines#24,
        rev=\E[7m, rmacs=\E[10m, rmir=\E[4l, rmso=\E[0m, rmul=\E[0m, rs1=\Ec,
        sgr0=\E[0m, smacs=\E[11m, smir=\E[4h, smso=\E[1m, smul=\E[4m,
        xon,
505-22|pt505-22|5430-22|gs5430-22| AT&T PT505 or 5430 GETSET version 1 22 lines @(#)pt505v1.ti 1.2,
        lines#22, use=5430-24,
#
# AT&T 386 monocrome console
#
AT386-M|at386-m|386AT-M|386at-m|at/386 console,
	am, bw, eo, xon, xt,
	cols#80, lines#25,
	acsc=``aaffggjYk?lZm@nEooppqDrrsstCu4vAwBx3yyzz{{||}}~~,
	bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[2J\E[H,
	cr=\r, cub=\E[%p1%dD, cub1=\E[D, cud=\E[%p1%dB,
	cud1=\E[B, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%02d;%p2%02dH, cuu=\E[%p1%dA, cuu1=\E[A,
	dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[1M,
	ed=\E[J, el=\E[K, flash=^G, home=\E[H, ht=\t,
	ich=\E[%p1%d@, ich1=\E[1@, il=\E[%p1%dL, il1=\E[1L,
	ind=\E[S, indn=\E[%p1%dS, invis=\E[9m, is2=\E[0;10m,
	kbs=\b, kcbt=^], kclr=\E[2J, kcub1=\E[D, kcud1=\E[B,
	kcuf1=\E[C, kcuu1=\E[A, kdch1=\E[P, kend=\E[Y,
	kf1=\EOP, kf10=\EOY, kf11=\EOZ, kf12=\EOA, kf2=\EOQ,
	kf3=\EOR, kf4=\EOS, kf5=\EOT, kf6=\EOU, kf7=\EOV,
	kf8=\EOW, kf9=\EOX, khome=\E[H, kich1=\E[@, knp=\E[U,
	kpp=\E[V, krmir=\E0, rev=\E[7m, rin=\E[S,
	rmacs=\E[10m, rmso=\E[m, rmul=\E[m,
	sgr=\E[10m\E[0%?%p1%p3%|%t;7%;%?%p2%t;4%;%?%p4%t;5%;%?%p6%t;1%;%?%p9%t;12%;%?%p7%t;9%;m,
	sgr0=\E[0;10m, smacs=\E[12m, smso=\E[7m, smul=\E[4m,
#
# AT&T 386 color console
#
AT386|at386|386AT|386at|at/386 console,
	colors#8, ncv#3, pairs#64,
	op=\E[0m,
	setb=\E[%?%p1%{0}%=%t40m
                %e%p1%{1}%=%t44m
                %e%p1%{2}%=%t42m
	        %e%p1%{3}%=%t46m
	        %e%p1%{4}%=%t41m
	        %e%p1%{5}%=%t45m
	        %e%p1%{6}%=%t43m
	        %e%p1%{7}%=%t47m%;,
	setf=\E[%?%p1%{0}%=%t30m
	        %e%p1%{1}%=%t34m
	        %e%p1%{2}%=%t32m
	        %e%p1%{3}%=%t36m
	        %e%p1%{4}%=%t31m
	        %e%p1%{5}%=%t35m
	        %e%p1%{6}%=%t33m
	        %e%p1%{6}%=%t33m
	        %e%p1%{7}%=%t37m%;,
	use=at386-m,
#	ATT:ident	"terminfo:beehive.ti	1.9"

#ident	"@(#)lib/terminfo:beehive.ti	25.1"

# # --------------------------------
#
# beehive: BEEHIVE
#
# Manufacturer:	BEEHIVE
# Class:	II
# 
# Info:
#	Beehive documentation is undated 
#	(Preliminary) and has no figures so we must have early Superbee2
#	(Model 600, according to phone conversation with mfr.). It has 
#	proved reliable except for some missing padding requirements 
#	(notably after \EK and nl at bottom of screen).
#	
#	The key idea is that AEP mode is poison for cm & that US's in 
#	the local memory should be avoided like the plague. That means 
#	that the 2048 character local buffer is used as 25 lines of 80 
#	characters, period. No scrolling local memory, folks. It also 
#	appears that we cannot use naked INS LINE feature since it uses
#	US. The sbi fakes al with an 80-space insert that may be too 
#	slow at low speeds; also spaces get converted to \040 which is 
#	too long for some programs (not vi). DEL LINE is ok but slow.
#	
#	The nl string is designed for last line of screen ONLY; cm to 
#	25th line corrects the motion inherent in scrolling to Page 1.
#	
#	There is one understood bug. It is that the screen appears to
#	pop to a new (blank) page after a nl, or leave a half-line 
#	elipsis to a quad that is the extra 48 memory locations. The 
#	data received is dumped into memory but not displayed. Not to 
#	worry if cm is being used; the lines not displayed will be, 
#	whenever the cursor is moved up there. Since cm is addressed 
#	relative to MEMORY of window, nothing is lost; but beware of 
#	relative cursor motion (up,do,nd,bs). Recommended, therefore, 
#	is setenv MORE -c .
#	
#	WARNING: Not all features tested.
#	
#	Timings are assembled from 3 sources. Some timings may reflect 
#	SB2/Model 300 that were used if more conservative.
#	Tested on a Model 600 at 1200 and 9600 bd.
#	
#	The BACKSPACEkb option is cute. The NEWLINE key, so cleverly 
#	placed on the keyboard and useless because of AEP, is made 
#	into a backspace key. In use ESC must be pressed twice (to send)
#	and sending ^C must be prefixed by ESC to avoid that wierd 
#	transmit mode associated with ENTER key.
#	
#	IF TERMINAL EVER GOES CATATONIC with the cursor buzzing across 
#	the screen, then it has dropped into ENTER mode; hit 
#	RESET--ONLINE--!tset.
#	
#	As delivered this machine has a FATAL feature that will throw 
#	it into that strange transmit state (SPOW) if the space bar is 
#	hit after a CR is received, but before receiving a LF (or a 
#	few others).
#	
#	The circuits MUST be modified to eliminate the SPOW latch. 
#	This is done by strapping on chip A46 of the I/O board; cut 
#	the p.c. connection to Pin 5 and Strap Pin 5 to Pin 8 of that 
#	chip. This mod has been checked out on a Mod 600 of Superbee II.
#	With this modification absurdly high timings on cr are 
#	unnecessary.
#	
#	NOTE WELL that the rear panel switch should be set to CR/LF, 
#	not AEP!
#
sb|sb1|sbg|Beehive superbee,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, cbt=\E`$<650>, bw, cols#80,
	il1=\EN\EL$<3>\EQ                                                                                \EP$<3> \EO\ER\EA$<3>,
	ed=\EJ$<3>, el=\EK$<3>, clear=\EH$<1>\EJ$<3>, cup=\EF%p2%03d%p1%03d,
	ht=\t, hts=\E1, tbc=\E3, lines#25, cub1=\b$<1>, cr=$<1>\r, da,
	db, dch1=\EP$<3>, dl1=\EM$<100>, cud1=\EB$<3>, rmir=\ER,
	home=\EH$<1>, smir=\EQ\EO,
	is2=\EE$<3>\EX\EZ\EO\Eb\Eg\ER, kf0=\E2, kf1=\Ep,
	kf2=\Eq, kf3=\Er, kf4=\Es, kf5=\Et, kf6=\Eu, kf7=\Ev, kf8=\Ew,
	kf9=\E1, lf0=TAB CLEAR, lf9=TAB SET,
	kbs=^_, kcud1=\EB,
	kel=\EK, ked=\EJ, kdl1=\EM, kich1=\EQ\EO, krmir=\ER,
	khome=\EH, kcub1=\ED, kcuf1=\EC, kcuu1=\EA, mir,
	cuf1=\EC$<3>, rmso=\E_3, xmc#1, smso=\E_1,
	smcup=\EO, rmul=\E_3, ul, cuu1=\EA$<3>,
	smul=\E_0,
sb2|sb3|fixed superbee,
	xsb@, use=superbee,
sbi|superbee|beehive superbee at Indiana U.,
	xsb, cr=^M$<1>, il1=1\EN\EL$<9>\EQ \EP$<9> \EO\ER\EA, use=sbg,
# Info:
#	Does this entry make xmc when it doesn't have to?
#	Look at those spaces in rmso/smso. Seems strange to me.
#	However, not having one to test changes on, I'll just leave it be...
#
bh3m|beehiveIIIm|,
	if=/usr/lib/tabset/beehive,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	il1=^S$<160>, am, cub1=^H, ed=^R, el=^P, clear=^E^R,
	cols#80, dl1=^Q$<350>, home=^E, lines#20, ll=^E^K,
	cuf1=^L, ht=^I, rmso= ^_, smso=^] , cuu1=^K,
microb|microbee|micro bee series,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	ed=\EJ, el=\EK, clear=\EE, cols#80, cup=\EF%p1%' '%+%c%p2%' '%+%c,
	kf1=\Ep, kf2=\Eq, kf3=\Er, kf4=\Es,
	kf5=\Et, kf6=\Eu, kf7=\Ev, kf8=\Ew, kf9=\Ex,
	kcud1=\EB, khome=\EH, kcub1=\ED, kcuf1=\EC, kcuu1=\EA,
	lines#24, cuf1=\EC, ht=^I, cuu1=\EA,
	rmso=\Ed@ , smso= \EdP, rmul=\Ed@, smul=\Ed`,
bh4|beehive4|beehive 4,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	cols#80, lines#24, am, cub1=^H, ed=\EJ, el=\EK, clear=\EE,
	home=\EH, cuu1=\EA, cuf1=\EC, cub1=\ED,
#	ATT:#ident	"terminfo:cdc.ti	1.3"	*/
	
#ident	"@(#)lib/terminfo:cdc.ti	25.1"

# # --------------------------------
#
# cdc: CONTROL DATA
#
# Manufacturer:	CONTROL DATA
# Class:	II
# 
cdc456|cdc,
	cr=^M, cud1=^J, ind=^J, bel=^G, lines#24, cols#80, clear=^Y^X,
	cuf1=^L, cuu1=^Z, cub1=^H, cup=\E1%p1%' '%+%c%p2%' '%+%c, home=^Y,
	il1=\E\114, dl1=\E\112, el=^V, ed=^X, am,
cdc456tst,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	lines#24, cols#80, clear=^y^x, cub1=^H, cup=\E1%p1%' '%+%c%p2%' '%+%c, am,
#	ATT:#ident	"terminfo:colorscan.ti	1.7"	*/
#	ATT:#ident	"terminfo:colorscan.ti	1.4"	*/
	
#ident	"@(#)lib/terminfo:colorscan.ti	25.1"

# Manufacturer:	DATAMEDIA
# Class:	III
#
cs10|colorscan|Datamedia Color Scan 10,
	msgr,
	cols#80, lines#24,
	bel=^G, clear=\E[;H\E[J, cr=\r, cub1=\b, cud1=\n, cuf1=\E[C,
	cup=\E[%i%p1%02d;%p2%02dH, cuu1=\E[A, ed=\E[J, el=\E[K, ind=\n,
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A,
	kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS,
	rmso=\E[m, rmul=\E[m, smso=\E[7m, smul=\E[4m,

cs10-w|Datamedia Color Scan 10 with 132 columns,
	cols#132,
	cup=\E[%i%p1%02d;%p2%03dH,
	use=cs10,
#	ATT:#ident	"terminfo:datamedia.ti	1.9"	*/
#	ATT:#ident	"terminfo:datamedia.ti	1.6"	*/
	
#ident	"@(#)lib/terminfo:datamedia.ti	25.1"

# # --------------------------------
#
# datamedia: DATAMEDIA
#
# Manufacturer:	DATAMEDIA
# Class:	II
# 
dm1520|dm1521|1521|1520|datamedia 1520,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, ed=^K, el=^], clear=^L,
	cup=^^%p2%' '%+%c%p1%' '%+%c, cols#80, home=^Y,
	kcuu1=^_, kcud1=^J, kcub1=^H, kcuf1=^\, khome=^Y,
	lines#24, cuf1=^\, cuu1=^_, xenl, ht=^I,
dm2500|datamedia2500|2500|datamedia 2500,
	cud1=^J, ind=^J, bel=^G, il1=^P\n^X^]^X^]$<1*>, cub1=^H, el=^W,
	clear=^^^^\177, cup=^L%p2%'`'%^%c%p1%'`'%^%c, cols#80,
	dch1=^P\b^X^]$<10*>,
	dl1=^P^Z^X^]$<10*>, smdc=^P, rmdc=^X^], rmir=\377\377^X^]$<10>, home=^B,
	ich1=^P^\^X^]$<10*>, smir=^P, lines#24, cuf1=^\,
	pad=\377, smso=^N, rmso=^X^], cuu1=^Z,
dm3025|datamedia 3025a,
	is2=\EQ\EU\EV, cr=^M, cud1=^J, ind=^J, bel=^G,
	il1=\EP\n\EQ$<130>, cub1=^H, ed=\EJ$<2>, el=\EK, clear=\EM$<2>,
	cup=\EY%p2%' '%+%c%p1%' '%+%c, cols#80, dch1=\b$<6>,
	dl1=\EP\EA\EQ$<130>, smdc=\EP, rmdc=\EQ, rmir=\EQ, home=\EH,
	smir=\EP, lines#24, cuf1=\EC, ht=^I,
	smso=\EOA, rmso=\EO@, cuu1=\EA,
3045|dm3045|datamedia 3045a,
	is2=\EU\EV, cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	ed=\EJ$<2>, el=\EK, clear=\EM$<2>, cup=\EY%p2%' '%+%c%p1%' '%+%c,
	cols#80, dch1=\EB$<6>, rmir=\EP, home=\EH,
	smir=\EP, ip=$<6>,
	kf0=\Ey\r, kf1=\Ep\r, kf2=\Eq\r, kf3=\Er\r, kf4=\Es\r,
	kf5=\Et\r, kf6=\Eu\r, kf7=\Ev\r, kf8=\Ew\r, kf9=\Ex\r,
	khome=\EH, kcuu1=\EA, kcuf1=\EC, lines#24, cuf1=\EC, pad=\177, ht=^I,
	eo, ul, cuu1=\EA, xenl,
# Info:
#	dt80/1 is2 a vt100 lookalike, but it doesn't seem to need 
#	any padding.
#
dt80|dmdt80|dm80|datamedia dt80/1,
	am, mir, msgr, xenl, xon,
	cols#80, it#8, lines#24, vt#3,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>,
	clear=\E[2J\E[H, cr=\r, csr=\E[%i%p1%d;%p2%dr,
	cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cud1=\n,
	cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH,
	cuu=\E[%p1%dA, cuu1=\E[A, ed=\E[J, el=\E[K,
	el1=\E[1K$<3>, enacs=\E(B\E)0, home=\E[H, ht=\t,
	hts=\EH, ind=\n, ka1=\EOq, ka3=\EOs, kb2=\EOr, kbs=\b,
	kc1=\EOp, kc3=\EOn, kcub1=\EOD, kcud1=\EOB,
	kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, kf1=\EOP,
	kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt,
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, mc0=\E[0i,
	mc4=\E[4i, mc5=\E[5i, rc=\E8, rev=\E[7m$<2>, ri=\EM,
	rmacs=^O, rmkx=\E[?1l\E>, rmso=\E[m, rmul=\E[m,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7,
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O$<2>, smacs=^N, smkx=\E[?1h\E=, smso=\E[7m,
	smul=\E[4m, tbc=\E[3g,
# Info:
#	In 132 column mode it needs a little padding.
#	This is2 still less padding than the vt100, and you can always 
#	turn on the ^S/^Q handshaking, smso you can use vt100 flavors 
#	for things like reverse video.
#
dt80-w|dmdt80-w|dm80-w|datamedia dt80/1 in 132 char mode,
	cr=^M, cud1=^J, ind=^J, bel=^G, ed=\E[0J$<20>, cols#132, el=\E[0K$<20>,
	cup=\E[%i%p1%d;%p2%dH$<5>, clear=\E[H\E[2J$<50>, cuu1=\E[A$<5>, use=dmdt80,
#	ATT:ident	"terminfo:dec.ti	1.11"

#ident	"@(#)lib/terminfo:dec.ti	25.1"

# # --------------------------------
#
# dec: DEC (DIGITAL EQUIPMENT CORPORATION)
#
# Manufacturer:	DEC (DIGITAL EQUIPTMENT CORP.)
# Class:	II
# 
# Info:
#	Note that xenl glitch in vt100 is not quite the same as concept,
#	since the cursor is left in a different position while in the
#	weird state (concept at beginning of next line, vt100 at end
#	of this line) so all versions of vi before 3.7 don't handle
#	xenl right on vt100. The correct way to handle xenl is when
#	you output the char in column 80, immediately output CR LF
#	and then assume you are in column 1 of the next line. If xenl
#	is on, am should be on too.
#	
#	I assume you have smooth scroll off or are at a slow enough baud
#	rate that it doesn't matter (1200? or less). Also this assumes
#	that you set auto-nl to "on", if you set it off use vt100-nam 
#	below.
#	
#	The padding requirements listed here are guesses. It is strongly
#	recommended that xon/xoff be enabled, as this is assumed here.
#	
#	The vt100 uses rs2 and rf rather than is2/tbc/hts because the 
#	tab settings are in non-volatile memory and don't need to be 
#	reset upon login. Also setting the number of columns glitches 
#	the screen annoyingly. You can type "reset" to get them set.
#
vt100|vt100-am|dec vt100 (w/advanced video),
	mir, msgr, cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, it#8,
	clear=\E[H\E[J$<50>, cub1=^H, am, cup=\E[%i%p1%d;%p2%dH$<5>,
	cuf1=\E[C$<2>, cuu1=\E[A$<2>, el=\E[K$<3>, el1=\E[1K$<3>, ed=\E[J$<50>,
	cud=\E[%p1%dB, cuu=\E[%p1%dA, cub=\E[%p1%dD, cuf=\E[%p1%dC, 
	smso=\E[1;7m$<2>, rmso=\E[m$<2>, smul=\E[4m$<2>, rmul=\E[m$<2>,
	bold=\E[1m$<2>, rev=\E[7m$<2>, blink=\E[5m$<2>, sgr0=\E[m^O$<2>,
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, smkx=\E[?1h\E=, rmkx=\E[?1l\E>,
	enacs=\E(B\E)0, smacs=^N, rmacs=^O,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	tbc=\E[3g, hts=\EH, home=\E[H, ht=^I, ri=\EM$<5>,
	kcuu1=\EOA, kcud1=\EOB, kcuf1=\EOC, kcub1=\EOD, kbs=^H,

# Info:
# This is how the keypad gets assigned.
#	PF1	  PF2	    PF3	      PF4
	kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS,
#	7	  8	     9	    '-' does not send anything on my terminal.
	kf9=\EOw, kf10=\EOx, kf0=\EOy,
#	4	  5	    6	      ,
	kf5=\EOt, kf6=\EOu, kf7=\EOv, kf8=\EOl,
#	1	  2	    3
	ka1=\EOq, kb2=\EOr, ka3=\EOs,
#	0	  .	    ENTER
	kc1=\EOp, kc3=\EOn, kent=\EOM,
#


	vt#3, xenl, xon, sc=\E7, rc=\E8, csr=\E[%i%p1%d;%p2%dr,
vt100-nam|vt100 w/no am (w/advanced video),
	am@, xenl@, use=vt100-am,
# Info:
#	Ordinary vt100 in 132 column ("wide") mode.
#
vt100-w|vt100-w-am|dec vt100 132 cols (w/advanced video),
	cols#132, lines#24, rs2=\E>\E[?3h\E[?4l\E[?5l\E[?8h, use=vt100-am,
vt100-w-nam|vt100-nam-w|dec vt100 132 cols (w/advanced video),
	cols#132, lines#14, rs2=\E>\E[?3h\E[?4l\E[?5l\E[?8h, vt@, use=vt100-nam,
# Info:
#	vt100's with no advanced video.
#
vt100-nav|vt100 without advanced video option,
	sgr@, smso=\E[7m , rmso=\E[m , xmc#1,
	smul@, rmul@, bold@, rev@, blink@, sgr0@, use=vt100,
vt100-nav-w|vt100-w-nav|dec vt100 132 cols 14 lines (no advanced video option),
	lines#14, cols#132, use=vt100-nav,
# Info:
#	vt100's with one of the 24 lines used as a status line.
#	We put the status line on the top.
#
vt100-s|vt100-s-top|vt100-top-s|vt100 for use with sysline,
	lines#23, is2=\E7\E[2;24r\E8, clear=\E[2;1H\E[J$<50>, home=\E[2;1H,
	dsl=\E7\E[1;24r\E8,
	cup=\E[%i%p1%{1}%+%d;%p2%dH$<5>, csr=\E[%i%i%p1%d;%p2%dr,
	hs, eslok, tsl=\E7\E[1;%p1%dH\E[1K, fsl=\E8, use=vt100-am,
# Info:
#	Status line at bottom. 
#	Clearing the screen will clobber status line.
#
vt100-s-bot|vt100-bot-s|vt100 for use with sysline,
	lines#23, is2=\E[1;23r\E[23;1H, dsl=\E7\E[1;24r\E8,
	hs, eslok, tsl=\E7\E[24;%p1%dH\E[1K, fsl=\E8, use=vt100-am,
# Info:
#	vt132 - like vt100 but slower and has ins/del line and such.
#	I'm told that smir/rmir are backwards in the terminal from the
#	manual and from the ANSI standard, this describes the actual 
#	terminal. I've never actually used a vt132 myself, so this 
#	is untested.
#
vt132|DEC vt132,
	il1=\E[L$<99>, dl1=\E[M$<99>, ip=$<7>, dch1=\E[P$<7>, rmir=\E[4h,
	smir=\E[4l, xenl, ind=^J$<30>, use=vt100,
# Info:
#	Older DEC CRT's
#
vt50|dec vt50,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=\EJ, el=\EK, clear=\EH\EJ,
	cols#80, lines#12, cuf1=\EC, ht=^I, cuu1=\EA,
vt50h|dec vt50h,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=\EJ, el=\EK,
	clear=\EH\EJ, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80, lines#12,
	cuf1=\EC, ht=^I, ri=\EI, cuu1=\EA,
vt52|dec vt52,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=\EJ, el=\EK,
	clear=\EH\EJ, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80, lines#24,
	cuf1=\EC, ht=^I, it#8, ri=\EI, cuu1=\EA,
	kcuu1=\EA, kcud1=\EB, kcuf1=\EC, kcub1=\ED, kbs=^H,
# Info:
#	A VT62 can be made to think that it is a VT61 by moving 6 
#	soldered-in jumpers on the i/o board. 
#	The keyboard must be relabeled, also. 
#
vt61|vt-61|vt61.5|,
	cr=^M$<20>, cud1=^J, ind=^J$<20>, bel=^G, cub1=^H,
	ed=\EJ$<120>, el=\EK$<70>, clear=\EH\EJ$<120>,
	cup=\EY%p1%' '%+%c%p2%' '%+%c$<20>, cols#80, lines#24,
	cuf1=\EC$<20>, ht=^I, ri=\E$<20>I, cuu1=\EA$<20>,
	kcuu1=\EA, kcud1=\EB, kcuf1=\EC, kcub1=\ED,
# Info:
#	Graphics CRT's.
#	clear screen also erases graphics
#
vt125|vt125 graphics terminal,
	clear=\E[;H\E[2J\EPpS(E)\E\\$<50>, use=vt100, 
gt40|dec gt40,
	cr=^M, cud1=^J, bel=^G,
	cub1=^H, cols#72, lines#30, os,
gt42|dec gt42,
	cr=^M, cud1=^J, bel=^G,
	cub1=^H, cols#72, lines#40, os,
# Info:
#	The gigi does standout with red!
#
gigi|vk100|dec gigi graphics terminal,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#84, lines#24, am,
	clear=\E[;H\E[2J, cub1=^H, cup=\E[%i%p1%d;%p2%dH, cuf1=\E[C,
	cuu1=\E[A, el=\E[K, ed=\E[J, smso=\E[7;31m, rmso=\E[m,
	smul=\E[4m, rmul=\E[m,
	is2=\E>\E[?3l\E[?4l\E[?5l\E[?20l\E[?7h\E[?8h, smkx=\E[?1h\E=,
	rmkx=\E[?1l\E>, kcuu1=\EOA,
	kcud1=\EOB, kcuf1=\EOC, kcub1=\EOD, khome=\E[H, kf1=\EOP,
	kf2=\EOQ, kf3=\EOR, kf4=\EOS, ht=^I, ri=\EM, xenl, cud=\E[%p1%dB,
	cuu=\E[%p1%dA, cub=\E[%p2%dD, cuf=\E[%p1%dC,
# Info:
#	Hard copy (decwriter) dec terminals.
#
dw1|decwriter I,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	cub1=^H, cols#72, hc, os,
dw2|decwriter|dw|decwriter II,
	cr=^M, cud1=^J, ind=^J, bel=^G, kbs=^H, cub1=^H, cols#132, hc, os,
# Info:
#	\E(B	Use U.S. character set (otherwise # => british pound !)
#	\E[20l	Disable "linefeed newline" mode (otherwise puts \r after \n,\f,\(vt )
#	\E[w	10 char/in pitch
#	\E[1;132	full width horizontal margins
#	\E[2g	clear all tab stops
#	\E[z	6 lines/in
#	\E[66t	66 lines/page (for \f)
#	\E[1;66r	full vertical page can be printed
#	\E[4g	clear vertical tab stops
#	\E>	disable alternate keypad mode (so it transmits numbers!)
#	\E[%i%du	set tab stop at column %d (origin == 1)
#		(Full syntax is \E[n;n;n;n;n;...;nu where each 'n' is 
#		a tab stop)
#	
#       The dw3 does standout with wide characters.
#
dw3|la120|decwriter III,
	cr=^M, cud1=^J, ind=^J, bel=^G, kbs=^h, cub1=^H, cols#132, hc,
	os, smso=\E[6w, rmso=\E[w, ht=^I,
	is1=\E(B\E[20l\E[w\E[0;132s\E[2g\E[z\E[66t\E[1;66r\E[4g\E>,
	is2=\E[9;17;25;33;41;49;57;65;73;81;89;97;105;113;121;129u\r,
dw4|decwriter IV,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, cols#132, hc, os, am,
	ht=^I, is2=\Ec, kf0=\EOP, kf1=\EOQ, kf2=\EOR, kf3=\EOS, kbs=^H,
vt220|dec vt220 8 bit terminal,
	am, mc5i, mir, msgr, xenl, xon,
	cols#80, it#8, lines#24,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[H\E[J,
	cr=\r, csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	dch=\E[%p1%dP, dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M,
	ech=\E[%p1%dX, ed=\E[J, el=\E[K, el1=\E[1K,
	enacs=\E)0, flash=\E[?5h$<200>\E[?5l, home=\E[H,
	ht=\t, hts=\EH, ich=\E[%p1%d@, il=\E[%p1%dL, il1=\E[L,
	ind=\ED, is2=\E[?7h\E[>\E[?1h\E\sF\E[?4l, kbs=\b,
	kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C, kcuu1=\E[A,
	kf1=\EOP, kf10=\E[21~, kf11=\E[23~, kf12=\E[24~,
	kf13=\E[25~, kf14=\E[26~, kf17=\E[31~, kf18=\E[32~,
	kf19=\E[33~, kf2=\EOQ, kf20=\E[34~, kf3=\EOR,
	kf4=\EOS, kf6=\E[17~, kf7=\E[18~, kf8=\E[19~,
	kf9=\E[20~, kfnd=\E[1~, khlp=\E[28~, kich1=\E[2~,
	knp=\E[6~, kpp=\E[5~, krdo=\E[29~, kslt=\E[4~,
	lf1=pf1, lf2=pf2, lf3=pf3, lf4=pf4, mc0=\E[i,
	mc4=\E[4i, mc5=\E[5i, nel=\EE, rc=\E8, rev=\E[7m,
	ri=\EM, rmacs=^O, rmam=\E[?7l, rmir=\E[4l,
	rmso=\E[27m, rmul=\E[24m, rs1=\E[?3l, sc=\E7,
	sgr0=\E[0m, smacs=^N, smam=\E[?7h, smir=\E[4h,
	smso=\E[7m, smul=\E[4m, tbc=\E[3g,


#	ATT:#ident	"terminfo:diablo.ti	1.6"	*/
	
#ident	"@(#)lib/terminfo:diablo.ti	25.1"

# # --------------------------------
#
# diablo: DAISY WHEEL PRINTERS
#
# Manufacturer:	Generic DAISY WHEEL PRINTERS
# Class:	II
# 
# Info:
#	The A manufacturer represents Diablo, DTC, Xerox, Qume, and 
#	other Daisy wheel terminals until such time as terminfo 
#	distinguishes between them enough to justify separate codes.
#
diablo|1620|1640|450|diablo 1620,
	cr=^M, cud1=^J, ind=^J, bel=^G, tbc=\E2, hts=\E1, hpa=\E\t%p1%{1}%+%c,
	kbs=^H, cub1=^H, cols#132, ff=^L, hc, hu=\EU, hd=\ED, os,
	ht=^I, cuu1=\E\n,
diablo-m8|1620-m8|1640-m8|diablo 1620 w/8 column left margin,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#124, is2=\r        \E9, use=1620,
# Info:
#	DTC 382 with VDU. Has no ed so we fake it with el. Standout 
#	works but won't go away without dynamite.  
#	
#	If no tab is set or the terminal's in a bad mood, it glitches 
#	the screen around all of memory. Note that return puts a blank 
#	("a return character") in the space the cursor was at, so we 
#	use ^P return (and thus ^P newline for newline). 
#	
#	I have been unable to get tabs set in all 96 lines -
#	it always leaves at least one line with no tabs in it, and 
#	once you tab through that line, it completely weirds out.
#
ps|dtc382|382|DTC 382,
	bel=^G, .cud1=^J, ind=^J, il1=^P^Z, am, cub1=^H,
	cols#80, el=^P^U, clear=^P^]$<20>, cup=^P^Q%p2%c%p1%c, dch1=^X,
	dl1=^P^S, rmir=^Pi, home=^P^R, smir=^PI, cnorm=^Pb, cvvis=^PB, pad=\177,
	rmcup=^P^]$<20>, lines#24, cuf1=^PR, .rmso=^P \200, .smso=^P \002^PF,
	smul=^P \020, rmul=^P \200, cuu1=^P^L, xhp, lm#96,
	da, db, cr=^P^M, ed=^P^U^P^S^P^S,
dtc300s|300|300s|dtc|dtc 300s,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G, kbs=^h,
	cub1=^H, cols#132, ff=^L, hc, hu=\EH, hd=\Eh, os, ht=^I, cuu1=^Z,
gsi,
	cub1=^H, cols#132, hc, hd=\Eh, hu=\EH, os, ht=^I, cuu1=^Z,
	cr=^M, cud1=^J, ind=^J, bel=^G,
aj830|aj832|aj|anderson jacobson,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	cub1=^H, hc, hd=\E9, hu=\E8, os, cuu1=\E7,
# Info:
#	This is incomplete, but it's a start.
#
5520|nec|spinwriter|nec 5520,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G,
	kbs=^h, cub1=^H, cols#132, ff=^L, hc, hu=\E]s\E9\E]W, hd=\E]s\n\E]W,
	os, ht=^I, cuu1=\E9,
qume5|qume|qume sprint 5,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G,
	kbs=^h, cub1=^H, cols#80, ff=^L, hc, hu=\EH, hd=\Eh, os, ht=^I, cuu1=^Z,
# Info:
#	I suspect the xerox1720 is the same as the diablo 1620.
#
x1720|x1700|1700|x1750|xerox 1720,
	cols#132, cub1=^H, ff=^L, hc, os, ht=^I,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	tbc=\E2, hts=\E1,
# Info:
#	This is an "experimental" entry for the SRI Agiles.
#	
#	It has been tried in a minimal way -- the Agile did not blow up!
#	However, it has not been exhaustively tested.
#
agile|agiles|sri agiles,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, hc, os, cols#132,
	ht=^I, kbs=^H, cuu1=\E\n, hu=\E0, hd=\E9, hts=\E1, tbc=\E2,
	is2=\EE\EF\EJ,

#	ATT:#ident	"terminfo:fortune.ti	1.3"	*/
	
#ident	"@(#)lib/terminfo:fortune.ti	25.1"

# Manufacturer:	FORTUNE
# Class:	III
# Info:
#	This is the original fortune entry, probably outdated
#
ofos|ofortune|fortune system,
	is2=^_..,
	lines#25, cols#80,
	am, bw,
	clear=^L$<20>, ed=^\Y$<3*>,
	ich1=^\Q$<5>, dch1=^\W$<5>,
	cup=^\C%p1%' '%+%c%p2%' '%+%c,
	ht=^Z,
	home=^^$<10>, cud1=^J$<3>, cuu1=^K$<3>, cub1=^H,
	kbs=^H, kcud1=^Ay\r, khome=^A?\r, kcub1=^Aw\r, kcuf1=^Az\r, kcuu1=^Ax\r,
	ind=^J$<5>,
	smso=^\H`, rmso=^\I`, xmc#0,
	smul=^\HP, rmul=^\IP,
	el=^\Z,
	rev=\EH, .sgr0=\EI,

# new entry to add which came from Jim Dyson (Orion Trading) via Ginger White
fos|FT|fortune|Fortune Terminal,
	am, bw, xon,
	cols#80, lines#25,
	acsc=+?\,>.108-0`5j*k(l\sm"n$q&t!u)v%w#x-, bel=^G,
	blink=\EN, bold=^\H`, civis=\E], clear=\f$<20>,
	cnorm=\E\\, cr=\r, cub1=\b, cud1=\n$<3>, cuf1=\t,
	cup=^\C%pl%'\s'%+%c%p2%'\s'%+%c, cuu1=^K$<3>,
	cvvis=\E[, dch1=^\W$<5>, dim=^\I?, dl1=^\r$<15>,
	ed=^\Y$<3*>, el=^\Z, enacs=\E)F, home=^^$<10>,
	ich1=^\Q$<5>, il1=^\e$<15>, ind=\n$<5>, invis=^\HD,
	is2=^.., is3=^\)F^\(B^O, kHLP=^Az\r, ka1=^A7\r,
	ka3=^A9\r, kbs=\b, kc1=^Al\r, kc3=^A3\r, kcan=^ ,
	kcub1=^Aw\r, kcud1=^Ay\r, kcuf1=^Az\r, kcuu1=^Ax\r,
	kdch1=^At\r, kel=^AT\r, kent=^Aq\r, kf0=^A@\r,
	kf1=^Aa\r, kf10=^Aj\r, kf11=^Ak\r, kf12=^Al\r,
	kf13=^Am\r, kf14=^An\r, kf15=^Ao\r, kf16=^Ap\r,
	kf17=^AA\r, kf18=^AB\r, kf19=^AC\r, kf2=^Ab\r,
	kf20=^AD\r, kf21=^AE\r, kf22=^AF\r, kf23=^AG\r,
	kf24=^AH\r, kf25=^AI\r, kf26=^AJ\r, kf27=^AK\r,
	kf28=^AL\r, kf29=^AM\r, kf3=^Ac\r, kf30=^AN\r,
	kf31=^AO\r, kf32=^AP\r, kf4=^Ad\r, kf5=^Ae\r,
	kf6=^Af\r, kf7=^Ag\r, kf8=^Ah\r, kf9=^Ai\r,
	khlp=^A@\r, khome=^A?\r, kick1=^Ar\r, knp=^Au\r,
	kpp=^As\r, lf0=Help, lf1=F1, lf10=f10, lf2=F2, lf3=F3,
	lf4=F4, lf5=F5, lf6=F6, lf7=F7, lf8=f8, lf9=f9,
	rep=%p1%c\EF%p2%'?'%+%c, rev=\EH, ri=^K\r$<5>,
	rmacs=^O, rmso=^\I$, rmul=\EZ, sgr0=^\I?^O, smacs=^N,
	smso=^\H$, smul=\EY,
# endken#0
#	ATT: ident	"terminfo:general.ti	1.7"

#ident	"@(#)lib/terminfo:general.ti	25.1"

# # --------------------------------
#
# general: GENERAL TERMINAL (formerly INFOTON)
#
# Manufacturer:	GENERAL TERMINAL
# Class:	I
# 
# Info:
#	Infoton is now called General Terminal Corp.
#
i100|gt100|gt100a|General Terminal 100A (formerly Infoton 100),
	cr=^M, cud1=^J, ind=^J, bel=^G, clear=^L, ed=\EJ, el=\EK,
	lines#24, cols#80, il1=\EL, dl1=\EM, cuu1=\EA, cuf1=\EC,
	home=\EH, cup=\Ef%p2%' '%+%c%p1%' '%+%c,
	flash=\Eb\Ea, am, cub1=^H, smso=\Eb, rmso=\Ea,
infoton,
	am,
	cols#80, lh#0, lines#24, lw#0, nlab#0,
	bel=^G, clear=\f, cr=\r, cub1=^Z, cud1=\n, cuf1=^Y,
	cuu1=^\, ed=^K, ind=\n, ll=\b^\,
# Info:
#	Looks like an ANSI terminal, but look at dch1! I bet smdc/rmdc
#	could be used.
#	
#	But you would think being ANSI they would do \E[P differently.
#
i400|400|infoton 400,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	il1=\E[L, am, cub1=^H, el=\E[N, clear=\E[2J, cup=\E[%i%p1%03d;%p2%03dH,
	cols#80, dl1=\E[M, lines#25, cuf1=\E[C, cuu1=\E[A,
	smir=\E[4h\E[2Q, rmir=\E[4l\E[0Q, dch1=\E[4h\E[2Q\E[P\E[4l\E[0Q,
addrinfo,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	lines#24, cols#80, clear=^L, home=^H, cuf1=^Y, ed=^K,
	cuu1=^\, am, cub1=^Z, cup=\037%i%p1%{1}%-%c%p2%{1}%-%c, ll=^H^\,
infotonKAS,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^Z,
	ed=^K, clear=^L, cols#80, lines#24, cuf1=^Y, cuu1=^\, ll=^H^\,
#	ATT:#ident	"terminfo:hardcopy.ti	1.5"	*/
	
#ident	"@(#)lib/terminfo:hardcopy.ti	25.1"

# # HARDCOPY - various hard copy terminals.
#
# Manufacturer:	Generic Hard copy Terminals
# Class:	I
# 
cdi|cdi1203|,
	am, cub1=^H, hc, os, cols#80,
	cr=^M$<200>, cud1=^J, ind=^J, bel=^G,
ep48|ep4080|execuport 4080,
	am, cub1=^H, os, cols#80, hu=\036, hd=\034,
	cr=^M, cud1=^J, ind=^J, bel=^G,
ep40|ep4000|execuport 4000,
	am, cub1=^H, os, cols#136, hu=\036, hd=\034,
	cr=^M, cud1=^J, ind=^J, bel=^G,
mw2|multiwriter 2,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#132, hc, os,
terminet1200|terminet300|tn1200|tn300|terminet|ge terminet 1200,
	cols#120, hc, os,
	cr=^M, cud1=^J, ind=^J, bel=^G,
#	ATT:#ident	"terminfo:hazeltine.ti	1.6"	*/
	
#ident	"@(#)lib/terminfo:hazeltine.ti	25.1"

# # --------------------------------
#
# hazeltine: HAZELTINE
#
# Manufacturer:	HAZELTINE
# Class:	II
# 
# Info:
#	Since cuf1 is blank, when you want to erase something you
#	are out of luck. You will have to do ^L's a lot to
#	redraw the screen. h1000 is untested. It doesn't work in
#	vi - (The code is there but it isn't debugged for this case.)
#
h1000|hazeltine 1000,
	cub1=^H, home=^K, clear=^L, cuf1= ,
	cols#80, lines#12, cr=^M, cud1=^J, ind=^J, bel=^G,
h1420|hazeltine 1420,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, am, lines#24, cols#80,
	il1=\E^Z, dl1=\E^S, ed=\E^X, clear=\E\034, cuu1=\E^L, cuf1=^P,
	el=\E^O, ht=^N, cup=\E^Q%p2%c%p1%' '%+%c, smso=\E\037, rmso=\E^Y,
h1500|hazeltine 1500,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=~^Z$<40>, hz, am,
	cub1=^H, ed=~^X$<10>,
	el=~^O, clear=~^\, cup=~^Q%p2%c%p1%c, cols#80, dl1=~^S$<40>,
	cud1=~^K, lines#24, cuf1=^P, smso=~^_, rmso=~^Y, cuu1=~^L,
# Info:
#	This is a Fluke special to work around the comm gear 
#	intercepting ^S
#
s1500|hazeltine 1500 thru comm system that see's ^S ,
	cr=^M, ind=^J, cud1=^J, bel=^G,
	il1=~^Z$<40>, am, cub1=^H, ed=~^X$<10>, el=~^O,
	clear=~^\, cup=~^Q%p2%c%p1%c, cols#80,
	cud1=~^K, hz, lines#24, cuf1=^P, cuu1=~^L, 
# Info:
#	h1510 assumed to be in escape mode. Else use h1510t.
#
h1510|hazeltine 1510 using escape escapes,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	il1=\E^Z, am, cub1=^H, ed=\E^X, el=\E^O, clear=\E^\,
	cup=\E^Q%p2%c%p1%c, cols#80, dl1=\E^S, cud1=\E^K,
	lines#24, cuf1=^P, .rmso=\E^_, .smso=\E^Y, cuu1=\E^L,
h1510t|Hazeltine 1510 with tilde escapes,
	am,
	home=~^R,
	khome=~^R,
	cuu1=~^L,
	kcuu1=~^L,
	cud1=~^K,
	kcud1=~^K,
	cub1=\b,
	bel=^G,
	cbt=~,
	clear=~,
	cols#80,
	cr=,
	cuf1=^P,
	cup=~^Q%p2%c%p1%c,
	dl1=~^S$<40>,
	ed=~^X$<10>,
	el=~^O,
	hz,
	il1=~^Z$<40>, 
	ind=^J,
	kbs=,
	kcbt=~,
	kclr=~,
	kcub1=\b,
	kcuf1=^P,
	kf0=~0\r,
	kf1=~1\r,
	kf2=~2\r,
	kf3=~3\r,
	kf4=~4\r,
	kf5=~5\r,
	kf6=~6\r,
	kf7=~7\r,
	kf8=~8\r,
	kf9=~9\r,
	ktbc=~.\r,
	lines#24,
	rmso=~^Y,
	sc=~^E,
	smso=~^_,


h1520|hazeltine 1520,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=~^Z, am, cub1=^H,
	ed=~^X, el=~^O, clear=~\034, cup=~^Q%p2%c%p1%c$<1>, cols#80,
	dl1=~^S, cud1=~^K, hz, lines#24, cuf1=^P,
	rmso=~^Y, smso=~\037, cuu1=~^L, home=~^R,
# Info:
#	The h1552 has tildes and backprimes and everything!
#	Be sure the auto lf/cr switch is set to cr.
#
h1552|hazeltine 1552,
	cols#80, it#8, lines#24,
	bel=^G, clear=\EH\EJ, cr=\r, cub1=\b, cud1=\n,
	cuf1=\EC, cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=\EA,
	dl1=\EO, ed=\EJ, el=\EK, ht=\t, il1=\EE, ind=\n,
	kbs=\b, kcub1=\ED, kcud1=\EB, kcuf1=\EC, kcuu1=\EA,
	kf1=\EP, kf2=\EQ, kf3=\ER, lf1=blue, lf2=red,
	lf3=green, ri=\EI,
h1552-rv|hazeltine 1552 reverse video,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	smso=\ES, rmso=\ET, use=h1552,
# Info:
#	h2000 won't work well because of a clash between upper case 
#	and ~'s.
#
h2000|hazeltine 2000,
	cud1=^J, ind=^J, bel=^G,
	il1=~^z$<6>, am, cub1=^H, clear=~^\$<6>, cup=~^q%p2%c%p1%c, cols#74,
	dl1=~^s$<6>, home=~^r, lines#27, pad=\177,
# Info:
#	Date: Fri Jul 23 10:27:53 1982
#	I tested this termcap entry for the Hazeltine Esprit with vi. It
#	seems to work ok. There is one problem though if one types a 
#	lot of garbage characters very fast vi seems not able to keep 
#	up and hangs while trying to insert. That's in insert mode 
#	while trying to insert in the middle of a line. It might be 
#	because the Esprit doesn't have insert char and delete char as 
#	a built in function. Vi has to delete to end of line and then 
#	redraw the rest of the line.
#
esprit|Hazeltine Esprit I,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\E^Z, am, cub1=^H,
	cbt=\E^T, bw, ed=\E^W, el=\E^O, clear=\E\034, cup=\E^Q%p2%c%p1%c,
	cols#80, dl1=\E^S, cud1=\E^K, home=\E^R, is2=\E\077,
	kf0=^B\060\n, kf1=^B\061\n, kf2=^B\062\n, kf3=^B\063\n,
	kf4=^B\064\n, kf5=^B\065\n, kf6=^B\066\n, kf7=^B\067\n,
	kf8=^B\070\n, kf9=^B\071\n, kbs=^H, kcud1=\E^K, rmkx=\E\076,
	khome=\E^R, kcub1=^H, kcuf1=^P, smkx=\E\074, kcuu1=\E^L, lf0=0,
	lf1=1, lf2=2, lf3=3, lf4=4, lf5=5, lf6=6, lf7=7, lf8=8, lf9=9,
	lines#24, cuf1=^P, rmso=\E^Y, smso=\E^_, cuu1=\E^L,
#	ATT: ident	"terminfo:hds.ti	1.9"

#ident	"@(#)lib/terminfo:hds.ti	25.1"

# # --------------------------------
#
# concept: (HUMAN DESIGNED SYSTEMS)
#
# Manufacturer:	HUMAN DESIGNED SYSTEMS
# Class:	III
# 
# Info:
#	There seem to be a number of different versions of the C108 PROMS
#	(with bug fixes in its Z-80 program).
#	
#	The first one that we had would lock out the keyboard of you
#	sent lots of short lines (like /usr/dict/words) at 9600 baud.
#	Try that on your C108 and see if it sends a ^S when you type it.
#	If so, you have an old version of the PROMs.
#	
#	You should configure the C108 to send ^S/^Q before running this.
#	It is much faster (at 9600 baud) than the c100 because the delays
#	are not fixed.
#	new status line display entries for c108-8p:
#	is3 - init str #3 - setup term for status display - 
#	set programmer mode, select window 2, define window at last 
#	line of memory, set bkgnd stat mesg there, select window 0.
#	
#	tsl - to status line - select window 2, home cursor, erase to 
#	end-of-window, 1/2 bright on, goto(line#0, col#?)
#	
#	fsl - from status line - 1/2 bright off, select window 0
#	
#	dsl - disable status display - set bkgnd status mesg with 
#	illegal window #
#	
#	There are probably more function keys that should be added but 
#	I don't know what they are.
#
c108|concept108|c108-8p|concept108-8p|concept 108 w/8 pages,
	is3=\EU\E z"\Ev^A\177 !p\E ;"\E z \Ev  ^A\177p\Ep\n,
	rmcup=\Ev  ^A\177p\Ep\r\n, use=c108-4p,
c108+acs|alternate charset defns for c108,
	acsc=l\\qLkTxUmMjE, rmacs=\Ej , smacs=\Ej!,
c108-4p-acs|c108-4p w/ acs,
	use=c108+acs, use=c108-4p,
c108-8p-acs|c108-8p w/ acs,
	use=c108+acs, use=c108-8p,
c108-rv-8p-acs|c108-rv-8p w/ acs,
	use=c108+acs, use=c108-rv-8p,
c108-4p|concept108-4p|concept 108 w/4 pages,
	hs, eslok, dch1=\E\s1$<16*>,
	tsl=\E z"\E?\E^E\EE\Ea %+ , fsl=\Ee\E z , dsl=\E ;\177,
	is3=\EU\E z"\Ev\177 !p\E ;"\E z \Ev  ^A p\Ep\n,
	xon, is1=\EK\E!\E F,
	smcup=\EU\Ev  8p\Ep\r\E^U, rmcup=\Ev  ^A p\Ep\r\n,
	cvvis=\EW, cnorm=\Ew,
# Info:
#	No delays needed on c108 because of ^S/^Q handshaking
#
	pb@, cr=^M, ind=^J,
	cup=\Ea%p1%?%p1%{95}%>%t^A%{96}%-%;%' '%+%c%p2%?%p2%{95}%>%t^A%{96}%-%;%' '%+%c,
	use=c100,
c108-rv|c108-rv-8p|concept 108 w/8 pages in reverse video,
	smcup=\EU\Ev  8p\Ep\r, rmcup=\Ev  ^B p\Ep\r\n, use=c108-rv-4p, 
c108-rv-4p|concept108-rv-|concept108rv4p|concept 108 w/4 pages in reverse video,
	flash=\EK$<50>\Ek, is1=\Ek, smso=\EE, rmso=\Ee,
	use=c108-4p, 
c108-rv-4p-acs|c108-rv-4p w/ acs,
	use=c108+acs, use=c108-rv-4p,
c108-na|c108-na-8p|c108-8p-na|concept108-na-|concept108na8p|concept 108 w/8 pages no arrows,
	kf7=\E;, kf8=\E<, kf9=\E=,
	smkx@, rmkx@, use=c108-8p,
c108-na-acs|c108-na w/ acs,
	use=c108+acs, use=c108-na,
c108-rv-na|c108-rv-na-8p|c108-8p-rv-na|concept 108 8 pages no arrows rev video,
	kf7=\E;, kf8=\E<, kf9=\E=,
	smkx@, rmkx@, use=c108-rv-8p,
c108-rv-na-acs|c108-na w/ acs,
	use=c108+acs, use=c108-rv-na,
c108-w|c108-w-8p|concept108-w-8|concept108-w8p|concept 108 w/8 pages in wide mode,
	is1=\E F\E",
	smcup=\EU\Ev  8^AD\Ep\r, rmcup=\Ev  ^A0^AD\Ep\r\n,
	cols#132, use=c108-8p,
c108-w-acs|c108-w w/ acs,
	use=c108+acs, use=c108-w,
# Info:
#	Concept 100:
#	These have only window relative cursor addressing, not screen 
#	relative. To get it to work right here, smcup/rmcup (which 
#	were invented for the # concept) lock you into a one page 
#	window for screen style programs.
#	
#	To get out of the one page window, we use a clever trick:
#	we set the window size to zero ("\Ev    " in rmcup) which the 
#	terminal recognizes as an error and resets the window to all 
#	of memory.
#	
#	This trick works on c100 but does not on c108, sigh.
#	
#	Some tty drivers use cr3 for concept, others use nl3, hence 
#	the delays on cr and ind below. This padding is only needed at 
#	9600 baud. One or the other is commented out depending on 
#	local conventions.
#	
#	2 ms padding on rmcup isn't always enough. 6 works fine. Maybe 
#	less than 6 but more than 2 will work.
#	
#	Note: can't use function keys f7-f10 because they are 
#	indistinguishable from arrow keys (!), also, del char and 
#	clear eol use xon/xoff so they probably won't work very well.
#	
#	Also note that we don't define insrt/del char/delline/eop/send 
#	because they don't transmit unless we reset them - I figured 
#	it was a bad idea to clobber their definitions.
#	
#	The mc5 sequence changes the escape character to ^^ so that 
#	escapes will be passed through to the printer. Only trouble 
#	is that ^^ won't be - ^^ was chosen to be unlikely. 
#	Unfortunately, if you're sending raster bits through to be 
#	plotted, any character you choose will be likely, so we lose.
#
c100|concept100|concept|c104|c100-4p|hds concept 100,
	is2=\EU\Ef\E7\E5\E8\El\ENH\E\0\Eo&\0\Eo'\E\Eo!\0\E^G!\E^HA@ \E4#:"\E:a\E4#;"\E:b\E4#<"\E:c,
	is1=\EK, is3=\Ev    $<6>\Ep\n,
#	cr=^M, ind=^J$<9>,
	cr=$<9>^M, ind=^J,
	bel=^G, cud1=^J, clear=\E?\E^E$<2*>,
	smcup=\EU\Ev  8p\Ep\r\E^U$<16>, rmcup=\Ev    $<6>\Ep\r\n,
	il1=\E^R$<3*>, am, cub1=^H, ed=\E^E$<16*>, el=\E^U$<16>,
	cup=\Ea%p1%' '%+%c%p2%' '%+%c, cols#80, dch1=\E^Q$<16*>, dl1=\E^B$<3*>,
	rmir=\E\s\s, eo, smir=\E^P, ip=$<16*>, lines#24, mir, cuf1=\E=,
	ht=\t$<8>, kbs=^h, ul, cuu1=\E;, smul=\EG, rmul=\Eg,
	xenl, flash=\Ek$<20>\EK, pb#9600, vt#8,
	smul=\EG, rmul=\Eg, smso=\ED, rmso=\Ed,
	dim=\EE, rev=\ED, blink=\EC, prot=\EI, invis=\EH, sgr0=\EN@,
	rep=\Er%p1%c%p2%' '%+%c$<.2*>, smkx=\EX, rmkx=\Ex,
	kcuu1=\E;, kcud1=\E<, kcub1=\E>, kcuf1=\E=, khome=\E?, kcbt=\E',
	kf1=\E5, kf2=\E6, kf3=\E7, kf4=\E8, kf5=\E9,
	kf6=\E:a, kf7=\E:b, kf8=\E:c,
	kich1=\E^P, krmir=\E\0, kdch1=\E^Q, kil1=\E^R, kdl1=\E^B,
	kel=\E^S, ked=\E^C, kpp=\E., knp=\E-, kind=\E[, kri=\E\\,
	khts=\E], kctab=\E_,
# Info:
#	\EQ"\EY(^W (send anything from printer to host, for xon/xoff) 
#	cannot be # in is2 because it will hang a c100 with no printer 
#	if sent twice.
#
	mc5=\EQ"\EY(^W\EYD\Eo ^^, mc4=^^o \E\EQ!\EYP^W,
c100-rv|c100-rv-4p|c100-rv-4p-pp|concept100-rv|c100 rev video,
	is1=\Ek, flash=\EK$<20>\Ek, cvvis@, cnorm@,
	smso=\EE, rmso=\Ee, use=c100,
c100-rv-na|c100-rv-4p-na|c100 with no arrows,
	smkx@, rmkx@, use=c100-rv,
oc100|oconcept|c100-1p|old 1 page concept 100,
	in, is3@, use=c100,
# Info:
#	
#	ht through el included to specify padding needed in raw mode.
#
avt-ns|concept avt with status lins disabled,
	am, eo, mir, ul, xenl, xon,
	cols#80, it#8, lines#24, lm#192,
	bel=^G, blink=\E[5m, bold=\E[1m, cbt=\E[Z,
	clear=\E[H\E[J$<38>, cnorm=\E[=119l, cr=\r,
	csr=\E[%i%p1%d;%p2%dr, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	cvvis=\E[=119h, dch1=\E[P, dim=\E[1!{,
	dl=\E[%p1%dM$<4*>, dl1=\E[M$<4>, ed=\E[J$<96>,
	el=\E[K$<6>, home=\E[H, hpa=\E[%p1%{1}%+%dG,
	ht=\t$<4>, hts=\EH, ich=\E[%p1%d@, ich1=\E[@,
	il=\E[%p1%dL$<4*>, il1=\E[L$<4>, ind=\n$<8>,
	invis=\E8m, ip=$<4>, is1=\E[=103l\E[=205l,
	is2=\E[1*q\E[2!t\E[7!t\E[=4;101;119;122l\E[=107;118;207h\E)1\E[1Q\EW\E[!y\E[!z\E>\E[0:0:32!r\E[0*w\E[w\E2\r\n\E[2;27!t,
	kbs=\b, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C,
	kcuu1=\E[A, kdch1=\E^B\r, ked=\E^D\r, kf1=\EOP,
	kf2=\EOQ, kf3=\EOR, kf4=\EOS, khome=\E[H,
	kich1=\E^A\r, kil1=\E^C\r, ll=\E[24H, mc0=\E[0i,
	mc4=\E[4i, mc5=\E[5i, pfloc=\E[%p1%d;0u#%p2%s#,
	pfx=\E[%p1%d;1u#%p2%s#, prot=\E[99m, rc=\E8,
	rep=%p1%c\E[%p2%{1}%-%db, rev=\E[7m, ri=\EM$<4>,
	rmacs=^N$<1>, rmcup=\E[w\E2\r\n, rmir=\E4l,
	rmkx=\E[!z\E[0;2u, rmso=\E[7!{, rmul=\E[4!{, sc=\E7,
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p6%t1;%;m,
	sgr0=\E[m, smacs=^O$<1>, smcup=\E[=4l\E[1;24w\E2\r,
	smir=\E1, smkx=\E[1!z\E[0;3u, smso=\E[7m, smul=\E[4m,
	tbc=\E[2g, vpa=\E[%p1%{1}%+%dd,
avt-rv-ns|concept avt in reverse video mode/no status line,
	is1=\E[=103l\E[=205h, flash=\E[=205l$<50>\E[=205h, use=avt-ns,
avt-w-ns|concept avt in 132 column mode/no status line,
	is1=\E[=103h\E[=205l, smcup=\E[H\E[1;24;1;132w, use=avt-ns,
avt-w-rv-ns|concept avt in 132 column mode/no status line,
	is1=\E[=103h\E[=205h, smcup=\E[H\E[1;24;1;132w,
	flash=\E[=205l$<50>\E[=205h, use=avt-ns,
# Info:
#	Concept AVT with status line. We get the status line using the
#	"Background status line" feature of the terminal. We swipe the
#	first line of memory in window 2 for the status line, keeping
#	191 lines of memory and 24 screen lines for regular use.
#	The first line is used instead of the last so that this works
#	on both 4 and 8 page AVT's. (Note the lm#191 or 192 - this
#	assumes an 8 page AVT but lm isn't currently used anywhere.)
#
avt+s|concept avt status line changes,
	is3=\E[2w\E[2!w\E[1;1;1;80w\E[H\E[2*w\E[1!w\E2\r\n,
	tsl=\E[2;1!w\E[;%p1%dH\E[2K, fsl=\E[1;1!w, eslok, hs,
	dsl=\E[0*w, lm#191, smcup=\E[2;25w\E2\r, rmcup=\E[2w\E2\r\n,
	.wind=\E[%i%p1%{1}%+%d;%p2%d;%p3%{01}%+%d;%p4%{01}%+%dw,
avt|c5|avt-s|conceptavt|concept-avt| avt w/4 or 8 pages/80 columns,
	use=avt+s, use=avt-ns,
avt-rv|avt-s-rv|avt-rv-s|concept avt in reverse video w/status line,
	is1=\E[=103l\E[=205h, flash=\E[=205l$<50>\E[=205h,
	use=avt+s, use=avt-ns,
avt-w|avt-w-s|concept avt in 132 column mode w/with status line,
	is1=\E[=103h\E[=205l, smcup=\E[H\E[1;24;1;132w,
	use=avt+s, use=avt-ns,
avt-w-rv|avt-rv-w|avt-w-s-rv|avt-w-rv-s|avt 132 cols w/status line,
	is1=\E[=103h\E[=205h, smcup=\E[H\E[1;24;1;132w,
	flash=\E[=205l$<50>\E[=205h,
	use=avt+s, use=avt-ns,
#	ATT:#ident	"terminfo:heath.ti	1.6"	*/
	
#ident	"@(#)lib/terminfo:heath.ti	25.1"

# # --------------------------------
#
# heath: HEATHKIT and ZENITH
#
# Manufacturer:	HEATHKIT and ZENITH
# Class:	I
h19-a|heath-ansi|heathkit-a|heathkit h19 ansi mode,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\E[1L$<1*>, am, cub1=^H, ed=\E[J,
	el=\E[K, clear=\E[2J, cup=\E[%i%p1%d;%p2%dH, cols#80,
	dch1=\E[1P, dl1=\E[1M$<1*>, cud1=\E[1B,
	rmir=\E[4l, home=\E[H, smir=\E[4h, lines#24, mir,
	cuf1=\E[1C, smacs=\E[10m, rmacs=\E[11m, msgr, ht=^I, it#8,
	rmso=\E[0m, smso=\E[7m, cuu1=\E[1A, cvvis=\E[>4h, cnorm=\E[>4l,
	kbs=^h, kcuu1=\E[1A, kcud1=\E[1B, kcub1=\E[1D, kcuf1=\E[1C,
	khome=\E[H,
	kf1=\EOS, kf2=\EOT, kf3=\EOU, kf4=\EOV, kf5=\EOW, lf6=blue,
	lf7=red, lf8=white, kf6=\EOP, kf7=\EOQ, kf8=\EOR,
	ri=\EM, is2=\E<\E[>1;2;3;4;5;6;7;8;9l\E[0m\E[11m\E[?7h,
h19-bs|heathkit w/keypad shifted,
	smkx=\Et, rmkx=\Eu, use=h19-b,
h19-smul|heathkit w/keypad shifted/underscore cursor,
	smkx=\Et, rmkx=\Eu, use=h19-u,
h19|heath|h19-b|heathkit|heath-19|z19|zenith|heathkit h19,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EL$<1*>, am, cub1=^H,
	ed=\EJ, el=\EK, clear=\EE, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80,
	dch1=\EN, dl1=\EM$<1*>, cud1=\EB, rmir=\EO, home=\EH, smir=\E@,
	lines#24, mir, cuf1=\EC, smacs=\EF, rmacs=\EG, msgr, ht=^I, it#8,
	ri=\EI, rmso=\Eq, smso=\Ep, cuu1=\EA, cvvis=\Ex4, cnorm=\Ey4,
	kbs=^h, kcuu1=\EA, kcud1=\EB, kcub1=\ED, kcuf1=\EC, khome=\EH,
	kf1=\ES, kf2=\ET, kf3=\EU, kf4=\EV, kf5=\EW,
	lf6=blue, lf7=red, lf8=white, kf6=\EP, kf7=\EQ, kf8=\ER,
	hs, eslok, tsl=\Ej\Ex5\EY8%p1%' '%+%c\Eo\Eo, fsl=\Ek\Ey5,
h19-u|heathkit with underscore cursor,
	cvvis@, cnorm@, use=h19-b,
# Info:
#	This still doesn't work right - something funny is going on 
#	with return # and linefeed in the reach program. Apparently 
#	cr acts like crlf and lf is ignored. There is a "literal end 
#	of line mode" which works right, but this will cause cr's to 
#	appear in files that are spooled. This description assumes 
#	"normal end of line mode".
#
reach|h89|h89 running reach,
	cr@, cud1=\EB, ind=\r\l, is2=\Ey3\Ev, use=h19-b,
alto-h19|altoh19|altoheath|alto-heath|alto emulating heathkit h19,
	lines#60, il1=\EL, dl1=\EM, use=h19,
# Info:
#	The major problem with the Z29 is that it requires more 
#	padding than the Z19. Once again, here's a little termcap 
#	entry for it that will do the trick. 
#	
#	The problem declaring an H19 to be synonomous with a Z29 is that
#	it needs more padding. It especially loses if a program attempts
#	to put the Z29 into insert mode and insert text at 9600 baud. It
#	even loses worse if the program attempts to insert tabs at 9600
#	baud. Adding padding to text that is inserted loses because in 
#	order to make the Z29 not die, one must add so much padding that
#	whenever the program tries to use insert mode, the effective 
#	rate is about 110 baud.
#	
#	What program would want to put the terminal into insert mode 
#	and shove stuff at it at 9600 baud you ask?  
#	
#	Emacs. Emacs seems to want to do the mathematically optimal 
#	thing in doing a redisplay rather than the practical thing.
#	When it is about to output a line on top of a line that is 
#	already on the screen, instead of just killing to the end of 
#	the line and outputing the new line, it compares the old line 
#	and the new line and if there are any similarities, it 
#	constructs the new line by deleting the text on the old line 
#	on the terminal that is already there and then inserting new
#	text into the line to transform it into the new line that is 
#	to be displayed. The Z29 does not act kindly to this.
#	
#	But don't cry for too long.... There is a solution. You can make
#	a termcap entry for the Z29 that says the Z29 has no insert mode.
#	Then Emacs cannot use it. "Oh, no, but now inserting into a 
#	line will be really slow", you say. Well there is a sort of a
#	solution to that too. There is an insert character option on 
#	the Z29 that will insert one character. Unfortunately, it 
#	involves putting the terminal into ansi mode, inserting the 
#	character, and changing it back to H19 mode. All this takes 12 
#	characters. Pretty expensive to insert one character, but it 
#	works. Either Emacs doesn't try to use its inserting hack when 
#	it's only given an insert character ability or the Z29 doesn't 
#	require padding with this (the former is probably more likely, 
#	but I haven't checked it out).
#
z29|zenith29|z29b|,
	cr=^M, cud1=^J, ind=^J, bel=^G, is2=\E<\E[?2h\Ev, il1=\EL$<1>, am,
	cub1=^H, ed=\EJ$<14>, el=\EK$<1>, clear=\EE$<14>,
	cup=\EY%p1%' '%+%c%p2%' '%+%c,
	cols#80, dch1=\EN$<0.1*>, dl1=\EM$<1>, cud1=\EB, home=\EH,
	ich1=\E<\E[1@\E[?2h$<1>, lines#24, cuf1=\EC,
	rmacs=\EF, smacs=\EG, ind=\n$<2>, msgr, ht=^I, ri=\EI$<2>, rmso=\Eq,
	smso=\Ep, cuu1=\E$<1>A, cvvis=\Ex4, cnorm=\Ey4, kbs=^h, kcuu1=\EA,
	kcud1=\EB, kcub1=\ED, kcuf1=\EC, khome=\EH, kf1=\ES,
	kf2=\ET, kf3=\EU, kf4=\EV, kf5=\EW, kf6=\EP, kf7=\EQ, kf8=\ER,
	kf9=\E0I, kf0=\E~, lf0=home,
	cbt=\E-, smul=\Es8, rmul=\Es0,
#	ATT:#ident	"terminfo:homebrew.ti	1.7"	*/
	
#ident	"@(#)lib/terminfo:homebrew.ti	25.1"

# # --------------------------------
#
# homebrew: HOME MADE TERMINALS
#
# Manufacturer:	HOME MADE TERMINALS
# Class:	III
# 
bc|bill croft homebrew,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=^Z, cols#96, home=^^, lines#72,
	cuf1=^L, cuu1=^K,
nucterm|rayterm|nuc|nuc homebrew,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, clear=^L$<1>,
	lines#24, cols#80, cuf1=^C, cuu1=^N, home=^B, ll=^K, el=^A, ed=^E,
carlock|klc|,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=^E, am, el=^U, clear=^Z$<100>,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, cols#80, dch1=\177, dl1=^D,
	rmir=^T, home=^^, smir=^T, lines#24, cuf1=^L, rmso=^V, smso=^V,
	cuu1=^K, flash=\EV\EV,
# Info:
#	EXIDY
#
ex3000,
	cr=^M, cud1=^J, ind=^J, bel=^G, lines#24, cols#80, home=^Q,
exidy|exidy2500|exidy sorcerer as dm2500,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=^P^J^X, am, cub1=^H,
	el=^W, clear=^^, cup=^L%p2%'`'%^%c%p1%'`'%^%c, cols#64,
	dch1=\b, dl1=^P^Z^X, smdc=^P, ed=^X, rmir=^X, home=^B, ich1=^\,
	smir=^P, lines#30, cuf1=^\, ht=^I, smso=^N, rmso=^X, cuu1=^Z,
sexidy|exidy smart,
	cr=^M, cud1=^J, ind=^J, bel=^G, lines#24, cols#64, clear=^L, home=^Q,
	cuf1=^S, cuu1=^W, cub1=^H, cub1=^A, kcud1=^S,
# Info:
#	netx and xitex are almost identical, except for the padding
#	on clear screen.  Hmm.
#
xitex|xitex sct-100,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=^F^E$<2000>, el=^E$<1600>,
	clear=^L$<400>, cup=\E=%p1%'@'%+%c%p2%'@'%+%c, cols#64, home=^D,
	lines#16, cuf1=\E+@A, ri=\E=@@^K, cuu1=^K,
# NETRONICS
netx|netronics|,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=^F^E$<2000>, el=^E$<1600>,
	clear=^L$<466>, cup=\E=%p1%'@'%+%c%p2%'@'%+%c, cols#64, home=^D,
	lines#16, cuf1=\E+@A, ri=\E=@@^K, cuu1=^K,
smartvid|Netronics Smartvid 80,
	cr=^M, cud1=^J, ind=^J, bel=^G, smacs=\EG@, am, rmacs=\EGB,
	cub1=^H, cbt=\EI, bw, ed=\EY, el=\ET, clear=^L,
	cup=\E=%p1%' '%+%c%p2%' '%+%c,
	cols#80, dch1=\EW, dl1=\ER, cud1=^J, rmir=\ED, eo, home=^Z,
	ich1=\EQ, smir=\EC, lines#24, ll=^Z^K, msgr, cuf1=^A,
	rmso=\EG@, xmc#1, smso=\EGC, ri=^K, ht=\Ei, rmcup=^Z^K,
	rmul=\EG@, cuu1=^K, smul=\EGA, cnorm=^Z^K, xhp,
smarterm|smarterm-s|netronics smarterm 80x24 naked terminal,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE, am, cub1=^H, cbt=\EI,
	ed=\EY, el=\ET, clear=^L, cup=\E=%p1%' '%+%c%p2%' '%+%c$<6>,
	cols#80, lines#24,
	dch1=\EW, dl1=\ER, cud1=^J, rmir=\ED, home=^Z, ich1=\EQ,
	smir=\EC, cuf1=^A, ht=^I, rmul=\EG@, xmc#1, ul,
	smul=\EGA,
ubell|ubellchar|,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, ht=^I, el=\Ed,
	clear=^Z, cup=\E=%p1%' '%+%c%p2%' '%+%c, cols#80, lines#24, cuf1=^L,
	cuu1=^K, home=^^,
ttywilliams,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#12,
	cub1=^Y, cud1=^K, cuu1=^Z, clear=^^, el=^_, am, home=^], cuf1=^X,
#ident	"@(#)terminfo:hp.ti	1.20"
# # --------------------------------
#
# hp: HEWLETT PACKARD
#
# Manufacturer:	HEWLETT PACKARD
# Class:	I
# 
# Info:
#	Generic HP terminal - this should (hopefully) work on any HP 
#	terminal.
#
hp|hewlett-packar|hewlettpackard,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EL, am,
	cub1=^H, ed=\EJ, el=\EK, hpa=\E&a%p1%dC, clear=\EH\EJ,
	cup=\E&a%p2%dc%p1%dY$<6>, cols#80, vpa=\E&a%p1%dY, lm#0, da, db,
	dch1=\EP, dl1=\EM, rmir=\ER, smir=\EQ, kbs=^H, lines#24, mir,
	cuf1=\EC, ht=^I, rmso=\E&d@, smso=\E&dJ,
	smul=\E&dD, rmul=\E&d@, cuu1=\EA, xhp, vt#6, kcbt=\Ei,

hp110|hewlett-packard model 110 portable,
	lines#16,use=hp,

hp+pfk+cr|hp function keys with CR,
	kf1=\Ep\r, kf2=\Eq\r, kf3=\Er\r, kf4=\Es\r,
	kf5=\Et\r, kf6=\Eu\r, kf7=\Ev\r, kf8=\Ew\r,

hp+pfk-cr|hp function keys w/o CR,
	kf1=\Ep, kf2=\Eq, kf3=\Er, kf4=\Es,
	kf5=\Et, kf6=\Eu, kf7=\Ev, kf8=\Ew,

# Info:
#	The 2621's use the same keys for the arrows and function keys, 
#	but not separate escape sequences. These definitions allow the 
#	user to use those keys as arrow keys rather than as function 
#	keys.
#
hp+pfk+arrows|hp alternate arrow definitions,
	khome=\Ep\r, kll=\Eq\r, kind=\Er\r, kri=\Es\r,
	kcuu1=\Et\r, kcub1=\Eu\r, kcuf1=\Ev\r, kcud1=\Ew\r,
	kf1@, kf2@, kf3@, kf4@, kf5@, kf6@, kf7@, kf8@,

hp+arrows|hp arrow definitions,
	kcuu1=\EA, kcud1=\EB, kcub1=\ED, kcuf1=\EC,
	khome=\Eh, kll=\EF, kind=\ES, kri=\ET,

# Info:
#	Generic stuff from the HP 262x series
#
hp262x,
	dch1=\EP$<2>, ip=$<2>, rmso=\E&d@, smso=\E&dB, ed=\ED\EJ$<500>\EC,
	rev=\E&dB, smul=\E&dD, blink=\E&dA, invis=\E&dS, sgr0=\E&d@, rmul=\E&d@,
	sgr=\E&d%'@'%?%p1%t%'B'%|%;%?%p2%t%'D'%|%;%?%p3%t%'B'%|%;%?%p4%t%'A'%|%;%c,
	khome=\Eh, kcuu1=\EA, kcub1=\ED, kcuf1=\EC, kcud1=\EB,
	smkx=\E&s1A, rmkx=\E&s0A, knp=\EU, kpp=\EV, kri=\ET,
	kind=\ES, kil1=\EL, kdl1=\EM, kich1=\EQ, kdch1=\EP,
	kel=\EK, ked=\EJ, krmir=\ER,
	ind=\ES, ht=^I$<2>, xhp,
	ed=\EJ,
# Info:
#	Note: no "home" on HP's since that homes to top of memory, not 
#	screen.
#	
#	The only way to get the arrow keys to transmit anything at all 
#	is to turn on the function key labels (f1-f8) with smkx, and 
#	even then the user has to hold down shift!
#	
#	The default 2621 turns off the labels except when it has to to 
#	enable the function keys. If your installation prefers labels 
#	on all the time, or off all the time (at the "expense" of the 
#	function keys) move the # 2621-nl or 2621-wl labels to the 
#	front using reorder.
#	
#	Note: there are newer ROM's for 2621's that allow you to set 
#	strap A so the regular arrow keys xmit \EA, etc, as with the 
#	2645. However, even with this strap set, the terminal stops 
#	xmitting if you reset it, until you unset and reset the strap!
#	Since there is no way to set/unset the strap with an escape 
#	sequence, we don't use it in the default.
#	
#	If you like, you can use 2621-ba (bad arrow keys).
#
hp2621-ba|2621-ba|2621 w/new rom and strap A set,
	smkx@, rmkx@,
	use=hp+arrows,
	use=hp2621,

# Info:
#	2621 with function labels. Most of the time they are off,
#	but inside vi, the function key labels appear. You have to
#	hold down shift to get them to xmit.
#
hp2621|hp2621a|hp2621A|2621|2621a|2621A|hp2621-wl|2621-wl|hp 2621 w/labels,
	is2=\E&jA\r, rmkx=\E&jA, use=hp2621-fl,

# Info:
#	2621 with function labels.  Most of the time they are off,
#	but inside vi, the function key labels appear.  You have to
#	hold down shift to get them to xmit.
#
hp2621-fl|2621-fl|hp 2621,
	is2=\E&j@\r, cbt=\Ei, cup=\E&a%p2%dc%p1%dY,
	dch1=\EP$<2>, ip=$<2>, pb#19200,
	smso=\E&dD, rmso=\E&d@, smul=\E&dD, rmul=\E&d@, sgr0=\E&d@, xhp@,
	use=hp+pfk+cr, smkx=\E&jB, rmkx=\E&j@, ht=^I$<2>, xon, use=hp,

# Info:
#	To use 2621p printer, setenv TERM=2621p, PRINTER=2612p
#
hp2621p|2621p|2621P|hp 2621 with printer,
	mc5=\E&p11C, mc4=\E&p13C, use=hp2621,

hp2621p-a|2621p-a|hp2621p with fn as arrows,
	use=hp+pfk+arrows, use=hp2621p,

# Info:
#	hp2621 with k45 keyboard
#
hp2621-k45|hp2621k45|2621k45|k45|hp 2621 with 45 keyboard,
	kbs=^H, kcuu1=\EA, kcud1=\EB, kcub1=\ED, kcuf1=\EC, khome=\Eh,
	smkx=\E&s1A, rmkx=\E&s0A, use=hp2621,

# Info:
#	This terminal should be used at 4800 baud or less. It needs 
#	padding for plain characters at 9600, I guessed at an 
#	appropriate cr delay.
#	
#	It really wants ^E/^F handshaking, but that doesn't work well 
#	even if you write software to support it.
#
2645|hp2645|hp45|hp 264x series,
	dim=\E&dH, rev=\E&dB, smul=\E&dD, blink=\E&dA, sgr0=\E&d@,
	sgr=\E&d%'@'%?%p1%t%'B'%|%;%?%p2%t%'D'%|%;%?%p3%t%'B'%|%;%?%p4%t%'A'%|%;%?%p5%t%'H'%|%;%?%p6%t%'B'%|%;%c,
	kcuu1=\EA, kcud1=\EB, kcub1=\ED, kcuf1=\EC, khome=\Eh,
	kctab=\E2, khts=\E1,
	smkx=\E&s1A, rmkx=\E&s0A, knp=\EU, kpp=\EV, kri=\ET, kind=\ES,
	kil1=\EL, kdl1=\EM, kich1=\EQ, kdch1=\EP,
	kel=\EK, ked=\EJ, krmir=\ER, pb#9600, cr=^M$<20>, use=hp,

# Info:
#	Hp 2624 B with 4 or 10 pages of memory.
#	
#	Some assumptions are made with this entry. These settings are 
#	NOT set up by the initialization strings.
#	
#	Port Configuration
#		RecvPace=Xon/Xoff
#		XmitPace=Xon/Xoff
#		StripNulDel=Yes
#	
#	Terminal Configuration
#		InhHndShk=Yes
#		InhDC2=Yes
#		XmitFnctn(A)=No
#		InhEolWrp=No
#	
#	Note: the 2624 DOES have a true "home," believe it or not!
#	
#	The 2624 has an "error line" to which messages can be sent. 
#	This is CLOSE to what is expected for a "status line". However,
#	after a message is sent to the "error line", the next carriage 
#	return is EATEN and the "error line" is turned back off again! 
#	So I guess we can't define hs, eslok, wsl, dsl, fsl, tsl
#	
#	This entry supports emacs (and any other program that uses raw 
#	mode) at 4800 baud and less. I couldn't get the padding right 
#	for 9.6.
#

hp2624|hp2624a|hp2624b|hp2624b-4p|2624-4p|2624|2624a|2624b|Hewlett Packard 2624 B,
	da, db, lm#96,
	flash=\E&w13F\200\200\200\200\E&w12F\200\200\200\200\E&w13F\200\200\200\200\E&w12F,
	use=hp+labels,
	use=scrhp,

# Info:
#	These attributes are not set above:
#	
#	civis, cmdch, cnorm, csr, cub, cud, cuf, cuu, cvvis, dch, dl, 
#	ech, eo, eslok, fsl, gn, hc, hd, hu, hz, ich, ich1, if, il, in,
#	indn, iprog, is2, is3, it, ka1, ka3, kb2, kc1, kc3, kclr, kf0, 
#	kf10, khts, km, ktbc, lf0, lf1, lf10, lf2, lf3, lf4, lf5, lf6, 
#	lf7, lf8, lf9, mc5p, os, pad, pfkey*, pfloc*, pfx*, prot, rc, 
#	rep, rin, rmcup, rmdc, rmm, rs2, rs3, sc, smcup, smdc, smm, tsl,
#	uc, ul, vt, wind, wsl, xenl, xmc, xsb, xt
#	
#	not needed if tset is used:
#		if=/usr/lib/tabset/std,
#	
#	This 2626 entry does not use any of the fancy windowing stuff 
#	of the 2626.
#	
#	Indeed, terminfo does not yet handle such stuff. Since changing 
#	any window clears memory, it is probably not possible to use 
#	this for screen opt.
#	
#	ed is incredibly slow most of the time - I am guessing at the 
#	exact padding. Since the terminal uses xoff/xon this is intended 
#	only for cost computation, so that the terminal will prefer el 
#	or even dl1 which is probably faster!
#	
#	\ED\EJ\EC hack for ed from Ed Bradford - apparently ed is only 
#	extra slow # on the last line of the window. 
#	
#	The padding probably should be changed.
#
hp2626|hp2626a|hp2626p|2626|2626a|2626p|2626A|2626P|hp 2626,
	ed=\ED\EJ$<500>\EC,
	ip=$<4>,
	is2=\E&j@\r,
	pb#19200,
	da, db, lm#0,
	indn=\E&r%p1%dD,
	rin=\E&r%p1%dU,
	use=hp+pfk+cr,
	use=hp+labels,
	use=scrhp,

# Info:
#	This entry is for sysline. It allocates a 23 line window with 
#	a 115 line workspace for regular use, and a 1 line window for 
#	the status line.
#	
#	This assumes port 2 is being used.
#	Turn off horizontal line, Create ws #1 with 115 lines,
#	Create ws #2 with 1 line, Create window #1 lines 1-23,
#	Create window #2 lines 24-24, Attach cursor to workspace #1.
#	Note that this clears the tabs so it must be done by tset before
#	it sets the tabs.
#
hp2626-s|2626-s|hp 2626 using only 23 lines,
	tsl=\E&w7f2p2I\E&w4f2I\r\EK\E&a%p1%dC,
	fsl=\E&d@\E&w7f2p1I\E&w4f1I, eslok, hs,
	is1=\E&q3t0{0H \E&w0f115n1I \E&w0f1n2I
	\E&w2f1i0d0u22l0S \E&w2f2i0d23u23l0S \E&w7f2p1I \r,
	lines#23, use=2626,
# Info:
#	Force terminal back to 24 lines after being 23.
#
hp2626-ns|2626-ns|hp 2626 using all 24 lines,
	is1=\E&q3t0{0H \E&w0f118n1I \E&w0f1n2I
	\E&w2f1i0d0u23l0S \E&w3f2I \E&w7f2p1I \r,
	use=2626,
# Info:
#	Various entries useful for small windows on 2626.
#
hp2626-12|2626-12,
	lines#12, use=2626,
hp2626-12x40|2626-12x40,
	cols#40, lines#12, use=2626,
hp2626-x40|2626-x40,
	cols#40, use=2626,
hp2626-12-s|2626-12-s,
	lines#11, use=2626-s,
# Info:
#	You should use this terminal at 4800 baud or less.
#
hp2648|hp2648a|2648a|2648A|2648|HP 2648a graphics terminal,
	clear=\EH\EJ$<50>, cup=\E&a%p2%dc%p1%dY$<20>,
	dch1=\EP$<7>, ip=$<5>, use=2645,

# Info:
#	2640a doesn't have the Y cursor addressing feature, and C is 
#	memory relative instead of screen relative, as we need.
#
2640|hp2640a|2640a|hp 2640a,
	cup@, smkx@, rmkx@, use=2645,

2640b|hp2640b|2644a|hp2644a|hp 264x series,
	smkx@, rmkx@, use=2645,

# Info:
#	2621 using all 48 lines of memory, only 24 visible at any time.  
#
hp2621-48|2621-48|48 line 2621,
	vpa=\E&a%p1%dR, lines#48, home=\EH, cup=\E&a%p2%dc%p1%dR, use=hp2621,

# Info:
#	2621 with no labels ever. Also prevents vi delays on escape.
#
hp2621-nl|2621-nl|hp 2621 with no labels,
	smkx@, rmkx@, khome@, kcuu1@, kcub1@, kcuf1@, kcud1@, use=hp2621-fl,

# Info:
#	Needed for UCB ARPAVAX console, since lsi-11 expands tabs 
#	(wrong).
#
hp2621-nt|2621-nt|hp 2621 w/no tabs,
	ht@, use=hp2621,

# Info:
#	The HP 150 terminal is a fairly vanilla HP terminal, with the 
#	clreol standout problem. It also has graphics capabilities and 
#	a touch screen, which we don't describe here.
#
hp150|Hewlett Packard Model 150,
	use=2622,

# Info:
#	Hp 2382a terminals, "the little ones." They don't have any 
#	alternate character set support and sending out ^N/^O will 
#	leave the screen blank.
#
hp2382a|hp2382|Hewlett Packard 2382a,
	da, db, lm#48,
	pln=\E&f0a%p1%dk%p2%l%Pa%?%ga%t%ga%d%e1%;d0L%?%ga%!%t %;%p2%s,
	lh#1, use=hp+labels,
	rmacs@, smacs@, acsc@,
	sgr0=\E&d@,
	sgr=\E&d%{0}%Pa%?%p4%t%{1}%ga%+%Pa%;%?%p1%p3%|%p6%|%t%{2}%ga%+%Pa%;%?%p2%p6%|%t%{4}%ga%+%Pa%;%?%p1%p5%|%t%{8}%ga%+%Pa%;%?%p7%t%?%ga%ts%ga%'@'%+%e%'S'%;%e%?%ga%t%ga%'@'%+%e%'@'%;%;%c,
	use=scrhp,

hp2621-a|hp2621a-a|2621-a|hp2621 with fn as arrows,
	use=hp+pfk+arrows, use=hp2621-fl,

# Info:
#	new Hewlett Packard terminals
#	
#	This entry supports emacs (and any other program that uses raw 
#	mode) at 4800 baud and less. I couldn't get the padding right 
#	for >=9.6.
#

newhpkeyboard|generic entry for HP extended keyboard,
	kbs=^H, kcbt=\Ei, kclr=\EJ,
	kcub1=\ED, kcud1=\EB, kcuf1=\EC, kcuu1=\EA,
	kdch1=\EP, kdl1=\EM, ked=\EJ, kel=\EK,
	use=hp+pfk-cr,
	khome=\Eh, kich1=\EQ, kil1=\EL, kind=\ET, kll=\EF,
	knp=\EU, kpp=\EV, kri=\ES, krmir=\ER,
	rmkx=\E&s0A, smkx=\E&s1A,

newhp|generic entry for new Hewlett Packard terminals,
	am, bw, mir, xhp, xon,
	cols#80, lines#24, pb#4800,
	acsc=T1R!U2S"W3O#V4P$t5u6w7v8:'9(LQKWlRkT5I3@2[MAJSmFjGdHQ;Y+Z*X:4>q\,x.n/,
	bel=^G, blink=\E&dA, bold=\E&dF, cbt=\Ei, cr=^M,
	cub1=^H, cud1=^J, cuf1=\EC, cuu1=\EA,
#	cub1=\ED, cud1=\EB,
	dch1=\EP$<2>, dim=\E&dH, dl1=\EM,
	ed=\EJ, el=\EK, ht=^I$<2>,
	hts=\E1, il1=\EL, ind=^J, invis=\E&dS, ip=$<2>, is1=\E&jB$<8>,
#	ind=\ES,
	nel=^M^J,
	pfkey=\E&f0a%p1%dk0d%p2%l%dL%p2%s,
	pfloc=\E&f1a%p1%dk0d%p2%l%dL%p2%s,
	pfx=\E&f2a%p1%dk0d%p2%l%dL%p2%s,
	rev=\E&dB, ri=\ET, rmacs=^O, rmir=\ER, rmso=\E&d@, rmul=\E&d@,
	rs1=\Eg,
	sgr0=\E&d@^O,
# Info:
#	sgr is figured out as follows:
#	    tparm parameters
#		1=standout, 2=underlining, 3=reverse video, 4=blinking, 5=dim,
#		6=bold, 7=blank, 8=protection, 9=alternate character set
#		The protection parameter is ignored.
#	    combination parameters
#		standout = reverse + half-intensity = 3 | 5.
#		bold = reverse + underline = 2 | 3.
#
	sgr=\E&d%{0}%Pa%?%p4%t%{1}%ga%+%Pa%;%?%p1%p3%|%p6%|%t%{2}%ga%+%Pa%;%?%p2%p6%|%t%{4}%ga%+%Pa%;%?%p1%p5%|%t%{8}%ga%+%Pa%;%?%p7%t%?%ga%ts%ga%'@'%+%e%'S'%;%e%?%ga%t%ga%'@'%+%e%'@'%;%;%c%?%p9%t^N%e^O%;,
	smacs=^N, smir=\EQ, smso=\E&dJ, smul=\E&dD,
	tbc=\E3,
	use=newhpkeyboard,

memhp|memory relative addressing for new HP ttys,
	vt#6,
	clear=\EH\EJ$<40>,
	cub=\E&a-%p1%dC, cud=\E&a+%p1%dR, cuf=\E&a+%p1%dC, cuu=\E&a-%p1%dR,
	cup=\E&a%p1%dr%p2%dC, mrcup=\E&a%p1%dr%p2%dC,
	home=\EH, hpa=\E&a%p1%dC, ll=\E&a23R^M, vpa=\E&a%p1%dR,
	use=newhp,

scrhp|screen relative addressing for new HP ttys,
	clear=\E&a0x0Y\EJ$<40>,
	cub=\E&a-%p1%dC, cud=\E&a+%p1%dR, cuf=\E&a+%p1%dC, cuu=\E&a-%p1%dR,
	cup=\E&a%p1%dy%p2%dX$<10>, mrcup=\E&a%p1%dr%p2%dC,
	home=\E&a0y0X, hpa=\E&a%p1%dC, ll=\E&a0y0X\EA, vpa=\E&a%p1%dY,
	use=newhp,

hp+labels|"standard" label info for new HP ttys,
	lh#2, lw#8, nlab#8,
	pln=\E&f0a%p1%dk%p2%l%Pa%?%ga%t%ga%d%e1%;d0L%?%ga%!%t %;%p2%s,
	smln=\E&jB,

hp+printer| "standard" printer info for HP ttys,
	ff=\E&p4u0C, mc0=\EH\E&p4dF, mc4=\E&p13C, mc5=\E&p11C,


# Info:
#	The new hp2621b is kind of a cross between the old 2621 and the
#	new 262x series of machines. It has dip-switched options. 
#	The firmware has a bug in it such that if you give it a null 
#	length label, the following character is eaten!
#

hp2621b|2621b|hp 2621b with old style keyboard,
	lm#48, lh#1, lw#8, nlab#8,
	pln=\E&f0a%p1%dk%p2%l%Pa%?%ga%t%ga%d%e1%;d3L%?%ga%!%t%' '%c%;%p2%s\E%'o'%p1%+%c\r,
	smln=\E&jB,
	khome=\Eh, kll=\EF, kri=\ES, kind=\ET,
	kcuu1=\EA, kcub1=\ED, kcuf1=\EC, kcud1=\EB,
	use=hp2621,

hp2621b-p|2621b-p|hp 2621b with printer,
	use=hp+printer,
	use=hp2621b,

# Info:
#	hp2621b - new 2621b's with new extended keyboard
#	these are closer to the new 26xx series than the other 2621b
#
hp2621b-kx|2621b-kx|hp 2621b with extended keyboard,
	use=newhpkeyboard,
	use=hp2621b,

hp2621b-kx-p|2621b-kx-p|hp 2621b with new keyboard & printer,
	use=hp+printer,
	use=hp2621b-kx,

# Info:
#	Some assumptions are made in the following entries.
#	These settings are NOT set up by the initialization strings.
#	
#    Port Configuration
#	RecvPace=Xon/Xoff	XmitPace=Xon/Xoff	StripNulDel=Yes
#	
#    Terminal Configuration
#	InhHndShk(G)=Yes	InhDC2(H)=Yes
#	XmitFnctn(A)=No		InhEolWrp=No
#
#	
# Hp 2622a & hp2623a display and graphics terminals
#
hp2622|hp2622a|2622|2622a|hp 2622,
	use=hp+pfk+cr,
	is2=\E&dj@\r,
	pb#19200,
	da, db, lm#0,
	use=hp+labels,
	use=scrhp,

# Info:
#	The 2623 is a 2622 with extra graphics hardware.
#
hp2623|hp2623a|2623|2623a|hp 2623,
	use=hp2622,


hp2624b-p|hp2624b-4p-p|Hewlett Packard 2624 B with printer,
	use=hp+printer,
	use=hp2624b,

# Info:
#	The Hewlett Packard B can have an optional extra 6 pages of 
#	memory.
#

hp2624-10p|hp2624a-10p|hp2624b-10p|2624-10p|2624a-10p|2624b-10p|Hewlett Packard 2624 B w/ 10 pages of memory,
	lm#240, use=hp2624b,

hp2624b-10p-p|Hewlett Packard 2624 B w/ extra memory & printer,
	lm#240, use=hp2624b-p,

# Info:
#	Color manipulations for HP terminals

hp+color|hp with colors,
	ccc,
	pairs#8, colors#16, ncv#17,
	scp=\E&v%p1%dS,
	initp=\E&v%?%p2%{1000}%=%t1%e.%p2%d%;a
		  %?%p3%{1000}%=%t1%e.%p3%d%;b
		  %?%p4%{1000}%=%t1%e.%p4%d%;c
		  %?%p5%{1000}%=%t1%e.%p5%d%;x
		  %?%p6%{1000}%=%t1%e.%p6%d%;y
		  %?%p7%{1000}%=%t1%e.%p7%d%;z
		  %p1%dI,
	oc=\E&v0m1a1b1c0I\E&v1a1I\E&v1b2I\E&v1a1b3I\E&v1c4I\E&v1a1c5I\E&v1b1c6I\E&v1x1y7I,
	op=\E&v0S,

# Info:
#	is2 disables the dispay, set screen to be 80 columns wide, 
#       set all function keys to transmit default strings, clears
#       the screen and then enables the display.
#

hp2397|2397|2397a|hp2397a|HP 2397A,
	is2=\E*dF\E&w6f80X\E&f0a1k2d2Lf1\Ep\E&f0a2k2d2Lf2\Eq\E&f0a3k2d2Lf3\Er\E&f0a4k2d2Lf4\Es\E&f0a5k2d2Lf5\Et\E&f0a6k2d2Lf6\Eu\E&f0a7k2d2Lf7\Ev\E&f0a8k2d2Lf8\Ew\EH\EJ$<40>\E*dE,
	use=scrhp, use=hp+labels, use=hp+color,
#	ATT:#ident	"terminfo:lsi.ti	1.5"	*/
	
#ident	"@(#)lib/terminfo:lsi.ti	25.1"

# # --------------------------------
#
# lsi: LEAR SIEGLER (ADM)
#
# Manufacturer:	LEAR SIEGLER
# Class:	III
# 
adm1a|adm1|lsi adm1a,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=\E;$<1>,
	cols#80, home=^^, lines#24, cuf1=^L, cuu1=^K,
adm2|lsi adm2,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE, am, cub1=^H, ed=\EY, el=\ET,
	clear=\E;, cup=\E=%p1%' '%+%c%p2%' '%+%c, cols#80, dch1=\EW, dl1=\ER,
	home=^^, ich1=\EQ, kcud1=^J, khome=^^, kcub1=^H, kcuf1=^L, kcuu1=^K,
	lines#24, cuf1=^L, cuu1=^K,
adm3|lsi adm3,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	am, cub1=^H, clear=^Z, lines#24, cols#80,
adm3a|3a|lsi adm3a,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=^Z$<1>,
	cols#80, home=^^, lines#24, cuf1=^L, cuu1=^K,
adm3a+|3a+|adm3aplus|lsi adm3a+,
	kcub1=^H, kcud1=^J, kcuu1=^K, kcuf1=^L, use=adm3a,
adm5|lsi adm5,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	ed=\EY, el=\ET, cud1=^J, kbs=^H, khome=^^,
	rmso=\EG, xmc#1, smso=\EG, use=adm3aplus,
adm21|lear siegler adm21,
	cr=^M, cud1=^J, ind=^J, bel=^G, ed=\EY, el=\ET, il1=30*\EE,
	dl1=30*\ER, ich1=\EQ, dch1=\EW, smul=\EG8,
	rmul=\EG0, xmc#1, smso=\EG4, rmso=\EG0, kbs=^H, kcub1=^H,
	kcuf1=^L, kcuu1=^K, kcud1=^J, khome=^^, use=adm3a,
# Info:
#	If the adm31 gives you trouble with standout mode, check the 
#	DIP switch in position 6, bank @c11, 25% from back end of pad.
#	Should be OFF.
#	
#	If there is no such switch, you have an old adm31 and must use 
#	oadm31
#
adm31|31|lsi adm31,
	is2=\Eu\E0, cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE, am, cub1=^H,
	el=\ET, cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=\E*, ed=\EY, cols#80,
	dch1=\EW, dl1=\ER, rmir=\Er, home=^^, smir=\Eq,
	kf0=^A0\r, kf1=^A1\r, kf2=^A2\r, kf3=^A3\r, kf4=^A4\r,
	kf5=^A5\r, kf6=^A6\r, kf7=^A7\r, kf8=^A8\r, kf9=^A9\r,
	kcud1=^J, kcub1=^H, kcuf1=^L, kcuu1=^K,
	lines#24, mir, cuf1=^L,
	rmso=\EG0, smso=\EG1, cuu1=^K, smul=\EG1, rmul=\EG0,
oadm31|o31|old adm31,
	smso=\EG4, smul@, rmul@, use=adm31,
# Info:
#	I had an ADM36 at home for a month and setup the following 
#	termcap entry for it. The entry is not fancy (doesn`t set tabs,
#	doesn't implement Highlighting or reverse video, etc.), but 
#	works well with vi. It uses the terminal in ADM36 mode not the 
#	alternate vt52 emulation mode.
#
36|adm36|lsi adm36,
	el=\E[0K, ed=\E[0J, cup=\E[%i%p1%d;%p2%dH,
	cuf1=\E[D, cuu1=\E[A, cols#80, lines#24, am, cub1=^H,
	clear=\E[H\E[2J, il1=\E[1L$<100>, dl1=\E[1M,
	smir=\E[4h, rmir=\E[4l, mir,
	kcuu1=\E[A, kcud1=\EB, kcuf1=\EC, kcub1=\ED, 
	is2=\E[6;?7h\E[4;20;?1;?3;?6;?4l\E(B\E)B\E>,
adm42|42|lsi adm42,
	cvvis=\EC\E3 \E3(, cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE$<270>,
	am, cub1=^H, ed=\EY, el=\ET, clear=\E;, cup=\E=%p1%' '%+%c%p2%' '%+%c,
	cols#80, dch1=\EW, dl1=\ER, rmir=\Er, smir=\Eq, ip=$<6*>, lines#24,
	cbt=\EI, cuf1=^L, rmso=\EG0, smso=\EG4, ht=\t, cuu1=^k,
	pad=\177, kcud1=^J, kcuf1=^L, kcuu1=^K, kcub1=^H, khome=^^,
# Info:
#	The following termcap for the Lear Siegler ADM-42 leaves the 
#	"system line" at the bottom of the screen blank (for those who 
#	find it distracting otherwise)
#
adm42-nl|42-nl|lsi adm-42 with no system line,
	il1=\EE\EF ^I, cbt=\EI\EF ^I, ed=\EY\EF ^I, el=\ET\EF ^I, clear=\E;\EF ^I,
	cup=\E=%p1%' '%+%c%p2%' '%+%c$<6>\EF ^I, dch1=\EW\EF ^I, dl1=\ER\EF ^I,
	rmir=\Er\EF ^I, smir=\Eq\EF ^I, use=adm42,
#	ATT:#ident	"terminfo:microterm.ti	1.6"	*/
	
#ident	"@(#)lib/terminfo:microterm.ti	25.1"

# # --------------------------------
#
# microterm: MICROTERM
#
# Manufacturer:	MICROTERM
# Class:	III
microterm|act4|microterm act iv,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, ed=^_, el=^^, clear=^L,
	cup=^T%p1%c%p2%c, cols#80, lines#24, cuf1=^X, cuu1=^Z, home=^],
# Info:
#	The padding on cuf1 for act5 and mime is a guess and not final.
#	The act5 has hardware tabs, but in cols 8, 16, 24, 32, 41 (!), 49, ...
#
microterm5|act5|microterm act v,
	uc=\EA, ri=\EH$<3>, kcuu1=^Z, kcud1=^K, kcub1=^H, kcuf1=^X, use=act4,
# Info:
#	Act V in split screen mode. act5-s is not tested and said not 
#	to work.
#	Could have been because of the funny tabs - it might work now.
#
act5-s|act5s|act 5 in split screen mode,
	smcup=\EP, rmcup=\EQ, lines#48, cols#39, use=act5,
# Info:
#	These mime1 entries refer to the Microterm Mime I or Mime II.
#	The default mime is assumed to be in enhanced act iv mode.
#	There is a ^Q in is2 to unwedge any lines that wedge on ^S.
#
mime|mime1|mime2|mimei|mimeii|microterm mime1,
	cup=^T%p1%{24}%+%c%p2%?%p2%{32}%>%t%{48}%+%;%{80}%+%c, cols#80,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=^A$<80>, am, cub1=^H,
	ed=^_, el=^^, clear=\035^C, dl1=^W$<80>, ht=^I, lines#24,
	cuf1=^X, it#8, uc=^U, cuu1=^z, home=\035, cud1=^K, is2=\E^S^Q,
	kcuu1=^Z, kcud1=^K, kcub1=^H, kcuf1=^X, ri=^R$<3>, vt#9,
mime-na|mime with no arrow keys,
	kcuu1@, kcud1@, kcuf1@, use=mime,
mime-3a|mime-adm3a|mime1 emulating adm3a,
	cols#80, lines#24,
	bel=^G, clear=^Z$<1>, cr=\r, cub1=\b, cud1=\n,
	cuf1=\f, cup=\E=%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=^K,
	home=^^, ind=\n, kcub1=\b, kcud1=^K, kcuf1=^X,
	kcuu1=^Z,
mime-3ax|mime-adm3ax|mime1 emulating enhanced adm3a,
	il1=^A$<80>, dl1=^W$<80>, ht=^I$<3>, it#8, el=^X, ed=^_, use=mime-3a,
# Info:
#	Mimes using brightness for standout. Half bright is very dim 
#	unless you turn up the brightness so far that lines show up on 
#	the screen.
#
mime-fb|full bright mime1,
	smso=^Y, rmso=^S, is2=^S\E^Q, use=mime,
mime-hb|half bright mime1,
	smso=^S, rmso=^Y, is2=^Y\E, use=mime,
# Info:
#	These entries (for mime 2a) put the terminal in low intensity 
#	mode since high intensity mode is so obnoxious.
#	This is the preferred mode (but ^X can't be used as a kill 
#	character (?))
#
mime2a|mime2a-v|microterm mime2a (emulating an enhanced vt52),
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=^A$<20*>, cub1=^H, ed=\EQ$<20*>,
	cols#80, el=\EP, clear=\EL, cup=\EY%p1%' '%+%c%p2%' '%+%c, is2=^Y,
	dch1=^N, dl1=^W$<20*>, ip=$<2>, rmir=^Z, home=\EH, smir=^O, cuu1=\EA,
	ri=\EA, kcud1=\EB, kcub1=\ED, kcuf1=\EC, kcuu1=\EA, lines#24,
	cuf1=\EC, ht=^I, it#8, rmso=\E9, smso=\E8, smul=\E4, rmul=\E5,
mime2a-s|microterm mime2a (emulating an enhanced soroc iq120),
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=^A$<20*>, am, cub1=^H, ed=\EJ$<20*>,
	el=\EK, clear=\EL, cup=\E=%p1%' '%+%c%p2%' '%+%c, cols#80, dch1=\ED,
	dl1=^W$<20*>, kcub1=^H, kcuf1=^L, kcuu1=^K, kcud1=^J, home=^^, is2=\E),
	ri=\EI, smir=\EE, rmir=^Z, ip=$<2>, lines#24, cuf1=^L, cuu1=\EI,
	smso=\E:, rmso=\E;, smul=\E6, rmul=\E7,
# Info:
#	Wed Mar  9 18:53:21 1983
#	We run our terminals at 2400 Baud, so there might be some timing
#	problems at higher speeds.
#	The major improvements in this mod are the terminal now 
#	scrolls down and insert mode works without redrawing the rest 
#	of the line to the right of the cursor. This is done with a 
#	bit of a kludge using the exit graphics mode to get out of 
#	insert, but it does not appear to hurt anything when using 
#	vi at least. If you have some users using act4's with programs 
#	that use curses and graphics mode this could be a problem.
#
mm3|mime314|mm314|mime 314,
	am, cub1=^H, ht=^I, ed=^_, el=^^, clear=^L, cup=^T%p1%c%p2%c,
	cols#80, lines#24, cuf1=^X, cuu1=^Z,
	home=^], kcud1=^K, kcub1=^H, kcuf1=^X, kcuu1=^Z,
	il1=^A, dch1=^D, dl1=^W, smir=^S, rmir=^V, 
# Info:
#	Fri Aug  5 08:11:57 1983
#	this entry works for ergo 4000's with the following setups:
#	ansi,wraparound,newline disabled, xon/xoff disabled in both
#	setup a & c    
#	
#	WARNING!!! There are multiple versions of ERGO 4000 microcode
#	Be advised that very early versions DO NOT WORK RIGHT !!  
#	Microterm does have a ROM exchange program- use it or lose big
#
m8|ergo4000|microterm ergo 4000,
	cr=^M, cud1=^J, ind=^J, bel=^G, ed=\E[0J$<15>, el=\E[0K$<13>,
	clear=\E[H\E[2J$<80>, cub1=^H, cuf1=\E[C, cuu1=\E[A, cud1=\E[B,
	cup=\E[%i%p1%d;%p2%dH, cols#80, lines#66, da, db, dch1=\E[1P$<80>,
	il=\E[1L$<5*>, dl1=\E[1M$<5*>, smir=\E[4h$<6>, rmir=\E[4l,
	is2=\E<\E=\E[?1l\E[?4l\E[?5l\E[?7h\E[?8h$<300>, kf1=\EOP,
	kf2=\EOQ, kf3=\EOR, kf4=\EOS, kcud1=\E[B, rmkx=\E=$<4>,
	kcub1=\E[D, kcuf1=\E[C, smkx=\E=$<4>, kcuu1=\E[A, lf1=pf1,
	lf2=pf2, lf3=pf3, lf4=pf4, msgr, ht=^I, rmso=\E[0m$<20>,
	smso=\E[7m$<20>, ri=\EM$<20*>, ind=\ED$<20*>,
#ident	"@(#)terminfo:misc.ti	1.18"
# # --------------------------------
#
# misc: MISCELLANEOUS TERMINALS
#
# Manufacturer:	MISCELLANEOUS TERMINALS
# Class:	III
# 
# Info:
#	This file is for manufacturers with only a few terminals.
#	They are included alphabetically by manufacturer. Hard copy
#	terminals, personal computers, special "made up" terminals
#	and homemade terminals go in separate files.
#
aed512|aed|AED 512,
	cr=^M, cud1=^J, bel=^G,
	cols#64, lines#40, clear=^L,
	cub1=^H, cuf1=\Ei0800\001,
	cnorm=\E\072004=000200??\001,
	flash=\EK0001??0000K0001202080\001,
	smso=\E\07200>8000140[80C00\001, rmso=\E[00C80\001,
	smul=\E\07200>8000140\001, rmul=\E\07200>8000100\001,
	uc=\Ei???>l0800i0102\001,
	smcup=\E\07200>8000140{<04<0??00001010L<0\072004=0002??00\001,
	rmcup=\E\07200>8000100{804<0??00001000L80\072004=000200??\001,
	ind=\E;1100\072004=000200??;1300\047\200\001\n\E\072004=0002??00;1200\001\n,
	cuu1=^K, .cup=\E;1300%p1%c%p2%c\001,
ampex|d80|dialogue|dialogue80|ampex dialogue 80,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G,
	is2=\EA, ul, smul=\El, rmul=\Em,
	am, bw, cub1=^H, ht=^I, clear=\E*$<75>, cup=\E=%p1%' '%+%c%p2%' '%+%c,
	il1=\EE$<5*>, cbt=\EI, ich1=\EQ, dl1=\ER$<5*>, dch1=\EW,
	el=\Et, ed=\Ey, smso=\Ej, rmso=\Ek, lines#24, cols#80, cuf1=^L, cuu1=^K,
# Info:
#	Tue Aug  9 20:11:37 1983
#	No backspace key in the main QWERTY cluster. Fortunately,
#	it has a NEWLINE/PAGE key just above RETURN that sends a strange
#	single-character code. Given a suitable Unix (one that lets you
#	set an echo-erase-as-BS-SP-BS mode), this key can be used as 
#	the erase key; I find I like this. Because some people and 
#	some systems may not, there is another termcap ("ax175e") that 
#	suppresses this little eccentricity by omitting the relevant 
#	capability.
#	
#	Problems:
#	 	- I haven't done tab-setting yet.
#	 	- The initialization sequence doesn't use the terminal's
#	 	  reset-everything code because it would require a delay
#	 	  in the middle of the is sequence.
#
ampex175|ampex d175,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE, am, cub1=^H,
	ed=\Ey, el=\Et, clear=\E+, cup=\E=%p1%' '%+%c%p2%' '%+%c,
	cols#80, dch1=\EW, dl1=\ER,
	home=\036, ich1=\EQ, is2=\EX\EA\EF,
	kcud1=^J, khome=\036, kcub1=^H, kcuf1=^L,
	kcuu1=^K, kil1=\EE, kdl1=\ER, kich1=\EQ, kdch1=\EW,
	lines#24, ll=\036^K, cuf1=^L,
	rmso=\Ek, smso=\Ej, rmcup=\EF, smcup=\EN, rmul=\Em, cuu1=^K,
	smul=\El,
ampex175-b|ampex d175 using left arrow for erase,
	kbs=^_, use=ampex175,
# Info:
#	Below are the termcap entries I've been using. The problem 
#	with scrolling in vi can only be fixed by getting BBN to put 
#	smarter scroll logic in the terminal or changing vi or padding 
#	scrolls with about 500 ms delay.
#	
#	I always thought the problem was related to the terminal 
#	counting newlines in its input buffer before scrolling and 
#	then moving the screen that much. Then vi comes along and 
#	paints lines in on the bottom line of the screen, so you get 
#	this big white gap.
#	 
#	We have not had sufficient demand for vi (most use emacs or 
#	rand) here to fix this problem.
#	
#	[Sounds like the BitGraph should stop looking ahead when it 
#	sees escape - ]
#
bitgraph|bbn bitgraph,
	use=bg3.10rv,
bg3.10rv|bgrv|bbn bitgraph (reverse video),
	use=bg2.0rv,
bg3.10nv|bgnv|bbn bitgraph (normal video),
	use=bg2.0nv,
bg3.10|bgn|bbn bitgraph (no init),
	use=bg2.0,
bg2.0rv|bbn bitgraph (reverse video),
	is2=\E>\E[?5h\E[?7h, flash=\E[?5l\E[?5h, use=bg2.0,
bg2.0nv|bbn bitgraph (normal video),
	is2=\E>\E[?5l\E[?7h, flash=\E[?5h\E[?5l, use=bg2.0,
bg2.0|bbn bitgraph (no init),
	cr=^M, cud1=^J, bel=^G,
	il1=\E[L$<2*>, cub1=^H, ed=\E[J$<150>, el=\E[K$<2>,
	clear=\E[H\E[J$<150>, cup=%i\E[%p1%d;%p2%dH, cols#85, csr=\E[%i%p1%d;%p2%dr,
	dl1=\E[M$<2*>, cud1=\E[B, kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS,
	kcud1=\E[B, rmkx=\E>, kcub1=\E[D, kcuf1=\E[C, smkx=\E=,
	kcuu1=\E[A, lf1=PF1, lf2=PF2, lf3=PF3, lf4=PF4, lines#64,
	cuf1=\E[C,  ht=^I, rc=\E8, sc=\E7, rmso=\E[0m, ind=\n$<280>,
	smso=\E[7m, cuu1=\E[A, xenl,
bg1.25rv|bbn bitgraph (reverse video),
	flash=\E[?5l\E[?5h, is2=\E>\E[?5h\E[?7h, use=bg1.25,
bg1.25nv|bbn bitgraph (normal video),
	is2=\E>\E[?5l\E[?7h, flash=\E[?5h\E[?5l, use=bg1.25,
bg1.25|bbn bitgraph,
	cr=^M, cud1=^J, bel=^G, il1=\E[L$<2*>, cub1=^H,
	ed=\E[J$<150>, el=\E[K$<2>, clear=\E[H\E[J$<150>, cup=%i\E[%p1%d;%p2%dH,
	cols#85, dl1=\E[M$<2*>, cud1=\E[B, kf1=\EP, kf2=\EQ, kf3=\ER,
	kf4=\ES, kcud1=\EB, rmkx=\E>, kcub1=\ED, kcuf1=\EC, smkx=\E=,
	kcuu1=\EA, lines#64, ll=\E[64;1H, lf1=PF1, lf2=PF2, lf3=PF3,
	lf4=PF4, cuf1=\E[C, ht=^I, rmso=\E[0m, ind=\n$<280>,
 	smso=\E[7m, cuu1=\E[A,
ca22851|computer automation 22851,
	cr=^M, cud1=^J, ind=^J, bel=^G, cup=\02%i%p1%c%p2%c, cols#80,
	lines#24, clear=^L$<8>, am, cub1=\025, cuu1=\026, home=\036,
	el=\035, ed=\034, cuf1=\011, kcub1=\025, kcuu1=\026,
	kcud1=\027, khome=\036,
# Info:
#	CHROMATICS
#	Following is revised version. As I mentioned, I recompiled 
#	curses in order to accomadate the large amount of definition.
#	I have put the long strings in ti/te. Ti sets up a window 
#	that is smaller than the screen, and puts up a warning message 
#	outside the window. Te erases the warning message, puts the 
#	window back to be the whole screen, and puts the cursor at just
#	below the small window. A defined vs and ve to really turn 
#	the cursor on and off, but I have taken this out since I don't 
#	like the cursor being turned off when vi exits.   
#
cg7900|chromatics|chromatics 7900,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#40, am,
	clear=^L, cub1=^H, cup=^AM%p2%d\,%p1%d\,, cuf1=\035, cuu1=^K,
	home=\034, ll=^A|, el=^A`, ed=^Al, il1=^A>2, dl1=^A<2,
	ich1=^A>1, dch1=^A<1,
	smso=^AC4\,^Ac7\,, rmso=^AC1\,^Ac2\,, uc=^A^A_^A\0,
	smcup=^AP0^AO1^AR1^AC4\,^Ac0\,^L^AM0\,42\,WARNING DOUBLE ENTER ESCAPE and ^U^AC1\,^Ac2\,^AW0\,0\,79\,39\,,
	rmcup=^AW0\,40\,85\,48\,^L^AW0\,0\,85\,48\,^AM0\,40\,,
cops10|cops|cops-10|,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, bw, ed=^w, el=^v,
	clear=30^x, cup=^p%p1%' '%+%c%p2%' '%+%c, cols#80, cud1=\n, kbs=^h, kcud1=\n,
	khome=^y, kcub1=^h, kcuf1=^l, kcuu1=^k, lines#24, cuf1=^l,
	cuu1=^k,
# Info:
#	CYBERNEX
#	We recently discovered (it wasn't clearly documented) that the 
#	Cybernex XL-83 terminal has a reverse-scroll capability; I 
#	enclose a revised termcap entry with "sr" added.
#
xl83|cybernex XL-83,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, ed=^P$<62>, el=^O$<3>,
	clear=^L$<62>, cup=^W%p1%' '%+%c%p2%' '%+%c, cols#80, home=^K,
	kcud1=^J, kcub1=^H, kcuf1=^I, kcuu1=^N,
	lines#24, cuu1=^N, cuf1=^I, ri=^N,
mdl110|cybernex mdl-110,
	cup=^P%p1%' '%+%c%p2%' '%+%c, cols#80, lines#24, am, clear=^X$<70>,
	cub1=^H, cr=^M, cud1=^J, ind=^J, bel=^G, cuf1=^U, cuu1=^Z, home=^Y,
	el=^N@^V$<145>, ed=^NA^W$<145>, il1=^NA^N^]$<65>, dl1=^NA^N^^$<40>,
	ich1=^NA^]$<3.5>, dch1=^NA^^$<3.5>, smso=^NF, rmso=^NG,
	ht=\t$<43>, ed=^N@^V$<6>,
# Info:
#	DATA GENERAL
#	
#	It has one or two quirks, though; in vi you have to use <cr> to
#	advance to the next line instead of just hitting the big NEWLINE
#	key (which is cursor down to vi).
#	 
#	One pain with using the dasher on unix though is the fact 
#	that they use # ^H for home cursor. This causes problems with 
#	reading news and help files on the system that assume ^H is 
#	backspace.
#	
#	The trouble with this terminal is that you can't give it a 
#	linefeed without having it add a carriage return. And there 
#	isn't any switch that will turn off auto carriage return 
#	on receipt of linefeed.
#	
#	Is there any way around this? [I used cud1=^Z to try to 
#	describe this -]
#
d200|d100|data general dasher 200,
	am, bel=^G, bw, clear=^L, cols#80, cr=^M,
	cub1=^Y, cud1=^Z, cuf1=^X, cup=^P%p2%c%p1%c, cuu1=^W,
	el=^K, home=^H, ind=^J, kcub1=^Y, kcud1=^Z, kcuf1=^X, kcuu1=^W,
	kf0=^^z, kf1=^^q, kf2=^^r, kf3=^^s, kf4=^^t, kf5=^^u, kf6=^^v, kf7=^^w,
	kf8=^^x, kf9=^^y, khome=^H, lf0=f10,
	lines#24, nel=^J, rmso=^^E, rmul=^U, smso=^^D, smul=^T,
dg|dg6053|data general 6053,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	am, cub1=^H, cup=^P%p2%c%p1%c, clear=^L, home=^H, cuf1=^S,
	cuu1=^W, el=^K, cols#80, lines#24,
d132|datagraphix|datagraphix 132a,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	cols#80, lines#30, clear=^l, home=\Et, da, db, ind=\Ev, ri=\Ew,
	cuu1=\Ek, cuf1=\El, cvvis=\Ex, cnorm=\Em\En,
	il1=\E3, ich1=\E5, dch1=\E6, in, ich1=\E5,
# Info:
#	DATAPOINT (see also pc)
#
datapoint|dp3|dp3360|datapoint 3360,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	ed=^_, el=^^, clear=^]^_, cols#82, home=^], lines#25, cuf1=^x, cuu1=^z,
# Info:
#	DELTA DATA
#	This is untested. The cup sequence is hairy enough that it 
#	probably needs work. The idea is ctrl(O), dd(row), dd(col), 
#	where dd(x) is x - 2*(x%16) + '9'
#
delta|dd5000|delta data 5000,
	cud1=^J, ind=^J, bel=^G, am, cub1=^H, clear=^NR,
	cup=^O%p1%p1%{16}%m%{2}%*%-%'9'%+%c%p2%p2%{16}%m%{2}%*%-%'9'%+%c,
	cols#80, lines#27, home=^NQ, cuf1=^Y, cuu1=^Z, el=^NU, dch1=^NV,
digilog|333|digilog 333,
	cub1=^H, cols#80, el=\030, home=^n, lines#16, cuf1=^i, cuu1=^o,
	cr=^M, cud1=^J, ind=^J, bel=^G,
# Info:
#	DIRECT
#	I think the direct is supposed to be vt100 compatible, so all 
#	this should probably be replaced by a use=vt100, but I can't 
#	test it.
#
d800|direct|direct800|direct 800/a,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, am,
	clear=\E[1;1H\E[2J, cub1=^H, cup=\E[%i%p1%d;%p2%dH,
	cuf1=\E[C, cuu1=\E[A, el=\E[K, ed=\E[J, smso=\E[7m, rmso=\E[0m,
	smul=\E[4m, rmul=\E[0m, xhp, cvvis=\E[>12l, cnorm=\E[>12h,
	ind=\ED, ri=\EM, da, db, smacs=\E[1m, rmacs=\E[0m, msgr, ht=^I,
	kcub1=\E[D, kcuf1=\E[C, kcuu1=\E[A, kcud1=\E[B,
	kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS,
	kf5=\EOT, kf6=\EOU, kf7=\EOV, kf8=\EOW,
env230|envision230|envision 230 graphics terminal,
	am, mir, msgr, xon,
	cols#80, it#8, lines#24, vt#3,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>,
	clear=\E[H\E[J$<50>, cr=\r, csr=\E[%i%p1%d;%p2%dr,
	cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cud1=\n,
	cuf=\E[%p1%dC, cuf1=\E[C$<2>,
	cup=\E[%i%p1%d;%p2%dH$<5>, cuu=\E[%p1%dA,
	cuu1=\E[A$<2>, ed=\E[J$<50>, el=\E[K$<3>,
	el1=\E[1K$<3>, enacs=\E(B\E)0, home=\E[H, ht=\t,
	hts=\EH, ind=\n, ka1=\EOq, ka3=\EOs, kb2=\EOr, kbs=\b,
	kc1=\EOp, kc3=\EOn, kcub1=\EOD, kcud1=\EOB,
	kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, kf1=\EOP,
	kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt,
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, mc0=\E[0i,
	mc4=\E[4i, mc5=\E[5i, rc=\E8, rev=\E[7m$<2>,
	ri=\EM$<5>, rmacs=^O, rmkx=\E[?1l\E>, rmso=\E[0m<2>,
	rmul=\E[m$<2>, rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h,
	sc=\E7,
	sgr=\E[%?%p1%t;1%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p6%t;1%;m,
	sgr0=\E[m^O$<2>, smacs=^N, smkx=\E[?1h\E=, smso=\E[1m<2>,
	smul=\E[4m$<2>, tbc=\E[3g,
falco|ts1|ts-1|falco ts-1,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, ht=^I,
	is2=\Eu\E3, il1=\EE, am, el=\ET\EG0^H, cup=\E=%p1%' '%+%c%p2%' '%+%c,
	clear=\E*, ed=\EY, dch1=\EW, cub1=^H, dl1=\ER, rmir=\Er, smir=\Eq,
	home=^^, kf0=^A0\r, kcud1=^J, kcub1=^H, kcuf1=^L, kcuu1=^K, cuf1=^L,
	rmso=\Eg0, smso=\Eg1, cuu1=^K, smul=\Eg1, rmul=\Eg0,
# Info:
#	For falcos with the paging option (very nice it turns out - 
#	they can store several hundred lines of text, as well as have 
#	a separate screen for vi and other such programs usage)...
#
falco-p|falco-tsl-1sp|falco with paging option,
	cr=^M, cud1=^J, ind=^J, bel=^G, is2=\EZ\E3\E_c, il1=\EE, am,
	cub1=^H, el=\ET\EG0^H\Eg0, clear=\E*, ed=\EY, cols#80,
	dch1=\EW, dl1=\ER, kcud1=\E[B, kcub1=\E[D, rmir=\Er, smir=\Eq,
	ht=^I, db, kcuf1=\E[C, kcuu1=\E[A, lines#24, cuf1=\E[C,
	rmso=\Eg0, smso=\Eg4, cuu1=\E[A, smul=\Eg1, smcup=\E_d,
	rmcup=\E_b, rmul=\Eg0, cud1=\E[B, cup=\E=%p1%' '%+%c%p2%' '%+%c,
	msgr, ul, khome=\E[H, da, mir, cbt=\EI,
ts100|ts100-sp|falco ts100-sp,
	am, mir, msgr, xenl, xon,
	cols#80, it#8, lines#24, vt#3,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>,
	clear=\E[H\E[J$<50>, cr=\r, csr=\E[%i%p1%d;%p2%dr,
	cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cud1=\n,
	cuf=\E[%p1%dC, cuf1=\E[C$<2>,
	cup=\E[%i%p1%d;%p2%dH$<5>, cuu=\E[%p1%dA,
	cuu1=\E[A$<2>, dch1=\E~W, dl1=\E~R, ed=\E[J$<50>,
	el=\E[K$<3>, el1=\E[1K$<3>, enacs=\E(B\E)0, home=\E[H,
	ht=\t, hts=\EH, ich1=\E~Q, il1=\E~E, ind=\n,
	is1=\E~)\E~ea, ka1=\EOq, ka3=\EOs, kb2=\EOr, kbs=\b,
	kc1=\EOp, kc3=\EOn, kcub1=\EOD, kcud1=\EOB,
	kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, kf1=\EOP,
	kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt,
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, rc=\E8,
	rev=\E[7m$<2>, ri=\EM$<5>, rmacs=^O, rmkx=\E[?1l\E>,
	rmso=\E[m$<2>, rmul=\E[m$<2>,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7,
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O$<2>, smacs=^N, smkx=\E[?1h\E=,
	smso=\E[1;7m$<2>, smul=\E[4m$<2>, tbc=\E[3g,
ts100-ctxt|falco ts-100 saving context,
	smcup=\E~_d\E[2J, rmcup=\E~_b, use=ts100,
# Info:
#	FLUKE
#	The 1720a differences from ANSI: no auto margin, destructive 
#	tabs, # of lines, funny highlighting and underlining
#
f1720|f1720a|fluke 1720A,
	cr=^M, ind=^J, cud1=^J, bel=^G,
	is2=\E[;H\E[2J, cols#80, lines#16,
	cuu1=\E[A, cud1=\E[B, cuf1=\E[C, cub1=^H, cup=\E[%i%p1%d;%p2%dH,
	ind=\ED, ri=\EM,
	kcuu1=\034, kcud1=\035, kcuf1=\036, kcub1=\037,
	smso=\E[7m, rmso=\E[m, xmc#1,
	smul=\E[4m, rmul=\E[m,
	el=\E[K, ed=\E[J,
	xt, clear=\E[;H\E[2J, 
# Info:
#	INTERTEC
#	Intertec: I can't tell if these are the same terminal or not.
#	the cup entries are different. The it2 looks suspiciously 
#	like an an Adds Regent 100, complete with the bug [mrh].
#
it|intertube|intertec|Intertec InterTube,
	cr=^M, ind=^J, cud1=^J, bel=^G, cub1=^H, am,
	clear=^L, home=^A, cuu1=^Z, cuf1=^F,
	cup=\EY%p1%' '%+%c%p2%' '%+%c$<50>,
	smso=\E0P, rmso=\E0@, cols#80, lines#25,
# Info:
#	The intertube 2 has the "full duplex" problem like the tek 
#	4025: if you are typing and a command comes in, the keystrokes 
#	you type get interspersed with the command and it messes up. 
#
it2|intertube2|intertec data systems intertube 2,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	clear=^L, cols#80, home=^A, lines#25, cuu1=^Z, el=\EK,
	hpa=^P%p1%{10}%/%{16}%*%p1%{10}%m%+%c, vpa=^K%p1%c,
	cup=^N%p1%c^P%p2%{10}%/%{16}%*%p2%{10}%m%+%c,
	cuf1=^F, cud1=\n, ll=^K^X\r, smso=\E0P, rmso=\E0@,
superbrain|intertec superbrain,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, ed=\E~k<10*>,
	el=\E~K$<15>, bw, clear=\f$<5*>,
	cup=\EY%p1%' '%+%c%p2%' '%+%c$<20>, cols#80,
	kcud1=^J, kcub1=^U, kcuf1=^F, kcuu1=^K, lines#24,
	cuf1=^F, ht=^I, rmcup=\f, smcup=\f, cuu1=^k,
# FREEDOM 100 by Liberty Electronics USA, SF.
f100|freedom|freedom100|freedom model 100,
	am, bw, hs, mir, msgr, xon,
	cols#80, lines#24,
	acsc=+.'\,.-jHkGlFmEqKxJ, bel=^G, cbt=\EI, clear=^Z,
	cr=\r, cub1=\b, cud1=\n, cuf1=\f,
	cup=\E=%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=^K, dch1=\EW,
	dl1=\ER$<11.5*>, dsl=\Eg\Ef\r, ed=\EY, el=\ET,
	flash=\Eb$<50>\Ed, fsl=\r, home=^^,
	hpa=\E]%p1%'\s'%+%c, ht=\t, hts=\E1, il1=\EE$<8.5*>,
	ind=\n, ip=$<6>, is2=\Eg\Ef\r\Ed, kbs=\b, kcub1=\b,
	kcud1=^V, kcuf1=\f, kcuu1=^K, kf0=^AI\r, kf1=^A@\r,
	kf2=^AA\r, kf3=^AB\r, kf4=^AC\r, kf5=^AD\r, kf6=^AE\r,
	kf7=^AF\r, kf8=^AG\r, kf9=^AH\r, khome=^^, ri=\Ej,
	rmacs=\E%, rmir=\Er, rmso=\EG0, rmul=\EG0, smacs=\E$,
	smir=\Eq, smso=\EG4, smul=\EG8, tbc=\E3, tsl=\Eg\Ef,
	vpa=\E[%p1%'\s'%+%c,
f100-rv|freedom-rv|freedom 100 in reverse video,
	is2=\Eg\Ef\r\Eb, flash=\Ed$<50>\Eb, use=f100,
#	
#	Problem with vi(1). Liberty terminals use the ^V
#	code for the down cursor key. When kcud1 is defined in terminfo
#	as ^V, the Control Character Quoting capability (^V in insert mode)
#	is lost! It cannot be remapped in vi because it is necessary to enter
#	a ^V to to quote the ^V that is being remapped!!!
#	
#	f110 users will have to decide whether
#	to lose the down cursor key or the quoting capability. We will opt
#	initially for leaving the quoting capability out, since use of VI
#	is not generally applicable to most interactive applications
#	
#	The same applies to f200 users, except that another option exists.
#	This option has been chosen locally. It will not be distributed unless
#	a user runs into this problem and requests assistance. Very few users,
#	if any, should run into this problem. The local solution is in
#	vifix.local.ti. The f200 has the ability to reprogram the down cursor
#	key. The key is reprogrammed to ^J (linefeed). This value is remembered
#	in non-volatile RAM, so powering the terminal off and on will not cause
#	the change to be lost. The terminfo definition for the f200 is changed
#	to identify kcud1 as ^J instead of ^V.
#	
#
f110|freedom110|Liberty Freedom 110,
	am, bel=^G, cols#80, lines#24, cr=^M, hs, mir, msgr,
	eslok, xon, it#8, wsl#80, cbt=\EI,
	tbc=\e3, clear=^Z,
	el=\ET, ed=\EY, hpa=\E]%p1%' '%+%c, vpa=\E[%p1%' '%+%c,
	cup=\e=%p1%' '%+%c%p2%' '%+%c, cud1=^V, home=^^,
	cub1=\b, cuf1=^L, cuu1=^K, dch1=\eW,
	dl1=\eR, dsl=\ef\r, smacs=\e$, rmacs=\e%%, blink=\eG2,
	bold=\eG0, dim=\EG@, rev=\EG4, rmul=\eG0,
	invis=\eG1, smso=\eG<, smul=\eG8, rmso=\eG0, sgr0=\eG0,
	flash=\Eb\0\0\0\0\Ed, fsl=\r,
	il1=\eE, kbs=\b, kclr=^^, kdch1=\eW, kdl1=\eR,
	kel=\eT, ked=\eY, kf1=^A@\r, kf2=^AA\r, kf3=^AB\r, kf4=^AC\r,
	kf5=^AD\r, kf6=^AE\r, kf7=^AF\r, kf8=^AG\r, kf9=^AH\r,
	kf0=^AI\r, kich1=\eQ, kil1=\eE, kcub1=\b, kcuf1=^L, kcuu1=^K,
	mc4=\ea, mc5=\e`, hts=\e1, tsl=\ef, ind=\n, ri=\eJ
	smir=\eO\eq, rmir=\er\eO, kcud1=^V,
	cnorm=\e.2, cvvis=\e.2, civis=\e.1,
f110-14|Liberty Freedom 110 14inch,
	dch1@,use=f110,
f110-w|Liberty Freedom 110 - 132 cols,
	cols#132, use=f110,
f110-14w|Liberty Freedom 110 14in/132 cols,
	cols#132, dch1@, use=f110,
f200|freedom200|Liberty Freedom 200,
	am, bel=^G, cols#80, lines#24, cr=^M, hs, mir, msgr,
	eslok, xon, it#8, wsl#80, cbt=\EI,
	csr=\em0%p1%' '%+%c%p2%' '%+%c, tbc=\e3, clear=^Z,
	el=\ET, ed=\EY, hpa=\E]%p1%' '%+%c, vpa=\E[%p1%' '%+%c,
	cup=\e=%p1%' '%+%c%p2%' '%+%c, cud1=^V, home=^^, civis=\e.0,
	cub1=\b, cnorm=\e.1, cuf1=^L, cuu1=^K, cvvis=\e.1, dch1=\eW,
	dl1=\eR, dsl=\ef\r, smacs=\e$, rmacs=\e%%, blink=\eG2,
	bold=\eG0, dim=\EG@, smir=\eq, rmir=\er, rev=\EG4, rmul=\eG0,
	invis=\eG1, smso=\eG<, smul=\eG8, rmso=\eG0, sgr0=\eG0,
	flash=\Eo\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\en, fsl=\r,
	il1=\eE, kbs=\b, kclr=^^, kdch1=\eW, kdl1=\eR, kcud1=^V,
	kel=\eT, ked=\eY, kf1=^A@\r, kf2=^AA\r, kf3=^AB\r, kf4=^AC\r,
	kf5=^AD\r, kf6=^AE\r, kf7=^AF\r, kf8=^AG\r, kf9=^AH\r,
	kf0=^AI\r, kich1=\eQ, kil1=\eE, kcub1=\b, kcuf1=^L, kcuu1=^K,
	mc4=\ea, mc5=\e`, hts=\e1, tsl=\ef, ind=\n, ri=\eJ,
f200-w|Liberty Freedom 200 - 132 cols,
	cols#132, use=f200,
f200vi|Liberty Freedom 200 for vi,
	am, bel=^G, cols#80, lines#24, cr=^M, hs, mir, msgr,
	eslok, xon, it#8, wsl#80, cbt=\EI,
	csr=\em0%p1%' '%+%c%p2%' '%+%c, tbc=\e3, clear=^Z,
	el=\ET, ed=\EY, hpa=\E]%p1%' '%+%c, vpa=\E[%p1%' '%+%c,
	cup=\e=%p1%' '%+%c%p2%' '%+%c, cud1=^V, home=^^, civis=\e.0,
	cub1=\b, cnorm=\e.1, cuf1=^L, cuu1=^K, cvvis=\e.1, dch1=\eW,
	dl1=\eR, dsl=\ef\r, smacs=\e$, rmacs=\e%%, blink=\eG2,
	bold=\eG0, dim=\EG@, smir=\eq, rmir=\er, rev=\EG4, rmul=\eG0,
	invis=\eG1, smso=\eG<, smul=\eG8, rmso=\eG0, sgr0=\eG0,
	flash=\Eb\0\0\0\0\Ed, fsl=\r,
	il1=\eE, kbs=\b, kclr=^^, kdch1=\eW, kdl1=\eR, kcud1=^J,
	kel=\eT, ked=\eY, kf1=^A@\r, kf2=^AA\r, kf3=^AB\r, kf4=^AC\r,
	kf5=^AD\r, kf6=^AE\r, kf7=^AF\r, kf8=^AG\r, kf9=^AH\r,
	kf0=^AI\r, kich1=\eQ, kil1=\eE, kcub1=\b, kcuf1=^L, kcuu1=^K,
	mc4=\ea, mc5=\e`, hts=\e1, tsl=\ef, ind=\n, ri=\eJ,
f200vi-w|Liberty Freedom 200 - 132 cols for vi,
	cols#132, use=f200vi,
omron|omron 8025AG,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EL, am, cub1=^H, ed=\ER,
	cols#80, el=\EK, clear=\EJ, da, db, dch1=\EP, dl1=\EM, home=\EH,
	lines#24, cuf1=\EC, rmso=\E4, ind=\ES, smso=\Ef, ri=\ET,
	cuu1=\EA, cvvis=\EN,
plasma|plasma panel,
	am, cub1=^H, clear=^L, cols#85, home=^^, lines#45, cuf1=\030,
	cuu1=\026, cr=^M, cud1=^J, ind=^J, bel=^G,
ramtek|ramtek 6000,
	cr=^M, cud1=^J, ind=^J, bel=^G, lines#24, cols#78, am,
	clear=[alpha]\n[erase]\n, cub1=^H,
soroc|iq120|soroc 120,
	am,
	cols#80, lines#24,
	bel=^G, clear=\E*$<2>, cr=\r, cub1=\b, cud1=\n,
	cuf1=\f, cup=\E=%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=^K,
	ed=\EY, el=\ET, home=^^, ind=\n, kcub1=\b, kcud1=\n,
	kcuf1=\f, kcuu1=^K,
# Info:
#	Note standout and underline are really sg#1, but when you 
#	backspace up the whole screen does standout or underline! 
#	The solution is to not specify sg#1 and live with it.
#	
#	iq140 standout and underline are confused. What we have 
#	included here are reasonable possiblities for these two.
#	Neither are really correct.
#
iq140|soroc 140,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, am,
	clear=\E+, cub1=^H, cup=\E=%p1%' '%+%c%p2%' '%+%c, cuf1=^L, cuu1=^K,
	home=^^, ll=^^^K, el=\Et, ed=\Ey, il1=\Ee$<1*>, dl1=\Er$<.7*>,
	smir=\E9, cbt=\EI, rmir=\E8, mir, dch1=\Ew, smso=\E\177, rmso=\E\177,
	kbs=^H, kcuf1=^L, khome=^^, kcuu1=^K, kf0=^A0\r,
	kf1=^A@\r, kf2=^AA\r, kf3=^AB\r, kf4=^AC\r, kf5=^AD\r,
	kf6=^AE\r, kf7=^AF\r, kf8=^AG\r, kf9=^AH\r, smul=\E^A,
	rmul=\E^A,
swtp|ct82|southwest technical products ct82,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, il1=^\^y,
	ed=^v, el=^F, clear=^L, cup=^k%p2%c%p1%c, cols#82, lines#20, dl1=^z,
	cuf1=^s, cuu1=^a, smso=^^^v, rmso=^^^F, dch1=^\^h, ich1=^\^x, home=^p,
	ind=^n, ri=^o, ll=^c,
	is2=^\^r^^^s^^^d^]^w^i^s^^^]^^^o^]^w^r^i,
# Info:	
#	Another new terminal, tested, seems to work fine with vi.
#
synertek|ktm|380|Synertek KTM 3/80 tubeless terminal,
	am, cub1=^H, cols#80, lines#24, ed=\EJ, el=\EK, clear=^Z,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, cuu1=^K, cuf1=^L, 
# Info:
#	TAB
#	The tab 132 uses xon/xoff, so no padding needed.
#	smkx/rmkx have nothing to do with arrow keys.
#	is2 sets 80 col mode, normal video, autowrap on (for am).
#	Seems to be no way to get rid of status line.
#
tab132|tab|tab 132/15,
	am, da, db, mir, msgr, xenl, xon,
	cols#80, it#8, lines#24, lm#96, vt#3,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>,
	clear=\E[H\E[J$<50>, cr=\r, csr=\E[%i%p1%d;%p2%dr,
	cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cud1=\n,
	cuf=\E[%p1%dC, cuf1=\E[C$<2>, cup=\E[%i%p1%d;%p2%dH,
	cuu=\E[%p1%dA, cuu1=\E[A$<2>, dch1=\E[P, dl1=\E[M,
	ed=\E[J$<50>, el=\E[K$<3>, el1=\E[1K$<3>,
	enacs=\E(B\E)0, home=\E[H, ht=\t, hts=\EH, il1=\E[L,
	ind=\n, is2=\E[?7h\E[?3l\E[?5l, ka1=\EOq, ka3=\EOs,
	kb2=\EOr, kbs=\b, kc1=\EOp, kc3=\EOn, kcub1=\E[D,
	kcud1=\E[B, kcuf1=\EOC, kcuu1=\E[A, kent=\EOM,
	kf0=\EOy, kf1=\EOP, kf10=\EOx, kf2=\EOQ, kf3=\EOR,
	kf4=\EOS, kf5=\EOt, kf6=\EOu, kf7=\EOv, kf8=\EOl,
	kf9=\EOw, rc=\E8, rev=\E[7m$<2>, ri=\EM$<5>, rmacs=^O,
	rmir=\E[4l, rmso=\E[m$<2>, rmul=\E[m$<2>,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7,
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O$<2>, smacs=^N, smir=\E[4h,
	smso=\E[1;7m$<2>, smul=\E[4m$<2>, tbc=\E[3g,
tab132-w,
	cols#132, is2=\E[?7h\E[?3h\E[?5l, use=tab132,
tab132-rv,
	is2=\E[?7h\E[?3l\E[?5h, use=tab132,
tab132-w-rv,
	is2=\E[?7h\E[?3h\E[?5h, use=tab132-w,
# Info:
#	TEC (various terminals labelled "tec" - manufacturers unknown)
#	tec is untested, and taken from CB/Unix virtual terminal driver.
#	Upper case terminal, uses lower case for control sequences!!!
#	The driver shows the C ~ operator used on CM coordinates.
#
tec400|tec scope,
	cr=^M, cud1=^J, ind=^J, bel=^G, cup=l%p2%~%c%p1%~%c,
	cuu1=x, cud1=h, cuf1=g, cub1=w, home=i, smso={, rmso=|,
	xmc#1, clear=f, il1=e, dl1=u, ich1=d, dch1=t, el=c, ed=s,
tec500|tec 500,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=^Z$<20>,
	cols#80, home=^^, lines#24, cuf1=^L, cuu1=^K, smso=^], rmso=^\,
tec,
	lines#24, cols#80, clear=^l, cuu1=^k, cuf1=\037, am,
	cub1=^H, home=\036, cr=^M, cud1=^J, ind=^J, bel=^G,
teletec|teletec datascreen,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	am, cub1=^H, cols#80, clear=^l, home=^^, lines#24, cuf1=^_, cuu1=^k,
vc404|volker-craig 404,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, ed=^W$<40>, el=^V$<20>,
	clear=^X$<40>, cup=^P%p1%' '%+%c%p2%' '%+%c, cols#80, home=^Y$<40>,
	kcud1=^J, kcub1=^H, kcuf1=^U, kcuu1=^Z, lines#24, cuf1=^U, cuu1=^Z,
vc404-s|volker-craig 404 w/standout mode,
	rmso=^O, smso=^N, use=vc404,
vc404-na|volker-craig 404 w/no arrow keys,
	kcuf1@, kcuu1@, use=vc404,
vc404-s-na|volker-craig 404 w/standout mode and no arrow keys,
	rmso=^O, smso=^N, use=vc404-na,
vc415|volker-craig 415,
	clear=^L, use=vc404,
# Info:
#	Missing in vc303a and vc303 descriptions: they scroll 2 lines 
#	at a time every other linefeed.
#
vc303-a|vc403a|volker-craig 303a,
	cr=^M, cud1=^J, bel=^G, am, cub1=^H, el=^V$<20>, clear=^X$<40>,
	cols#80, home=^Y$<40>, kcud1=^J, kcub1=^H, kcuf1=^U,
	kcuu1=^Z, lines#24, ll=^P^@W, cuf1=^U, cuu1=^Z,
vc303|vc103|vc203|volker-craig 303,
	cr=^M, cud1=^J, bel=^G, am, cub1=^H, clear=^L$<40>, cols#80,
	home=^K$<40>, kcud1=^J, kcub1=^H, kcuf1=^I, kcuu1=^N, lines#24,
	ll=^O$<1>W, cuf1=^I, cuu1=^N,
wy100|100|wyse 100,
	cr=^M, cud1=^J, ind=^J, bel=^G, is2=\Eu\E0, il1=\EE, cub1=^H,
	el=\ET, cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=\E;, cols#80, dch1=\EW,
	dl1=\ER, rmir=\Er, smir=\Eq, lines#24, mir, cuf1=^L, ed=\EY, cuu1=^K,
	cbt=^D, smul=\EG8, rmul=\EG0, rmso=\EG0, smso=\EG4, kf1=@,
	kf2=^AA^M, kf3=^AB^M, kf4=^AC^M, kf5=^AD^M, kf6=^AE^M, kf7=^AF^M,
	kf8=^AG^M,	kf9=^AH^M,
	kf10=^AI^M,	kf11=^AJ^M,		kf12=^AK^M,
	kf13=^AL^M,	kf14=^AM^M,		kf15=^AN^M,
	kf16=^AO^M,
	kcub1=^H, kcud1=^J,
	kbs=^H, kcuu1=^K, kcuf1=^L, hs, is2=\EA30,
	tsl=\EF, fsl=\004, dsl=\EA31,
zen30|z30|zentec 30,
	cr=^M, cud1=^J, ind=^J, bel=^G, mir, cols#80, lines#24,
	ul, il1=\EE$<1.5*>, cub1=^H, el=\ET$<1.0*>,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=\E*, home=^^, cuf1=^L,
	rmso=\EG0, smso=\EG6, cuu1=^K, smir=\Eq, rmir=\Er,
	am, dch1=\EW, dl1=\ER$<1.5*>, ed=\EY,
# Info:	
#	COMPUCOLOR, ISC, INTECOLOR (?)
#	These compucolors appear similar, but they at least have 
#	different sized screens. I don't know what's going on here.
#	
#	There is further confusion since intecolor seems to call 
#	themselves isc too.
#	
#	The following termcap for the Intelligent Systems Corporation 
#	8001 color terminal with lower-case and 48-line options 
#	disallows global motion to get around the 2-lines-at-a-time 
#	scrolling problem. It has been tested and works fine except 
#	when indented lines are scrolled in from the bottom of the 
#	screen. The latter problem originates with firmware which 
#	interprets NL as NL-CR when the cursor is on the bottom line 
#	of the screen.
#
8001|isc|isc8001|compucolor 8001,
	cr=^M$<1>, cud1=^J$<1>, ind=^J$<1>, bel=^G, am, cols#80, lines#47,
	il1=\EU$<5*>, dl1=\EV^\$<5*>, clear=^L$<31>, smir=^S\EQ$<1>,
	rmir=^R\EK$<1>, kcub1=^Z, kcuf1=^Y, kcuu1=^\, kcud1=^J, khome=^H,
	cub1=^Z$<1>, cuf1=^Y$<1>, cuu1=^\$<1>, smul=^Q$<1>, rmul=^R$<1>,
#	cup=^C%p2%c%p1%c,
compucolor2|compucoloriicompucolor 2,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	ht=^I, am, cup=^C%p2%c%p1%c, cub1=^Z, lines#32, cols#64,
	clear=^L, home=^H, cuf1=^Y, cuu1=^\,
# Info:
#	INTERACTIVE SYSTEMS
#	smkx/rmkx from dgc, to make insert mode key work in Rand Editor.
#	probably needs more keys defined.
#
intext|Interactive Systems Corporation modified owl 1200,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\020$<5.5*>, am, cub1=^_,
	cub1=^H, cbt=^Y, ed=\026J$<5.5*>, el=^K\160^R,
	clear=\014$<132>, cup=\017%p1%' '%+%c%p2%' '%+%c, cols#80,
	dch1=\022$<5.5*>, dl1=\021$<5.5*>, rmir=\026\074,
	smir=\026\073, ip=$<5.5*>, lines#24, cuf1=\036, ht=^I,
	cuu1=\034, rmso=^V# , xmc#1, smso=^V$\054,
	smkx=\036\072\264\026%, rmkx=\269,
	kcub1=^_, kcud1=^J, kcuf1=^^, kcuu1=\034, kbs=^H, khome=^Z,
	kf1=^VA\r, kf2=^VB\r, kf3=^VC\r, kf4=^VD\r, kf5=^VE\r,
	kf6=^VF\r, kf7=^VG\r, kf8=^VH\r, kf9=^VI\r, kf0=^VJ\r,
intext2|intextii|INTERACTIVE modified owl 1251,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\E[L, am, cbt=\E[Z,
	bw, ed=\E[J, el=\E[K, hpa=\E[%p1%{1}%+%dG, clear=\E[H\E[2J,
	cup=\E[%i%p1%d;%p2%dH, cols#80, dch1=\E[P, dl1=\E[M,
	cud1=\E[B, ich1=\E[@, kf0=\E@\r,
	lf0=REFRSH, kf1=\EP\r, lf1=DEL CH, kf2=\EQ\r, lf2=TABSET,
	kf3=\ES\r, lf3=GOTO, kf4=\ET\r, lf4=+PAGE, kf5=\EU\r,
	lf5=+SRCH, kf6=\EV\r, lf6=-PAGE, kf7=\EW\r, lf7=-SRCH,
	kf8=\EX\r, lf8=LEFT, kf9=\EY\r, lf9=RIGHT, kbs=^h, kcud1=\EB\r,
	khome=\ER\r, kcub1=\ED\r, kcuf1=\EC\r, kcuu1=\EA\r, lines#24,
	cuf1=\E[C, ht=^I, rmso=\E[2 D, ind=\E[S, smso=\E[6 D, ri=\E[T,
	rmul=\E[2 D, xmc#0, ul, cuu1=\E[A, smul=\E[18 D,
	flash=\E[;;;;;;;;;2;;u\E[;;;;;;;;;1;;u,
# Info:
#	Wyse-50 termcap is a modified version of the Televideo 920 
#	termcap.
#
wyse50|wy50|wyse-50|wy-50|Wyse WY-50,
	am,		bel=^G,			cbt=\EI,
	civis=\E`0,	clear=\E(^Z,		cols#80,
	cnorm=\E`1,	cr=^M,			cub1=^H,
	cud1=^J,	cuf1=^L,		cup=\E=%p1%' '%+%c%p2%' '%+%c,
	cuu1=^K,				dch1=\EW,
	dl1=\ER,	ed=\EY,			el=\ET,
	home=^^,	ht=^I,			ich1=\EQ,
	il1=\EE,	ind=\n,			is1=\E'\E(,
	kbs=^H,		kcub1=^H,		kcud1=^J,
	kcuf1=^L,	kcuu1=^K,
#	kdl1=\ER,	ked=\EY,		kel=\ET,
#	kil1=\EE,	knp=\EK,		kpp=\EJ,
#	kich1=\EQ, 	kdch1=\EW,		khome=^^,
	kf1=^A@^M,	kf2=^AA^M,		kf3=^AB^M,
	kf4=^AC^M,	kf5=^AD^M,		kf6=^AE^M,
	kf7=^AF^M,	kf8=^AG^M,		kf9=^AH^M,
	kf10=^AI^M,	kf11=^AJ^M,		kf12=^AK^M,
	kf13=^AL^M,	kf14=^AM^M,		kf15=^AN^M,
	kf16=^AO^M,
	lines#24,	mc0=\EP,		mc4=^T,
	mc5=^R,		nel=^M^J,		rmso=\E(,
	smso=\E`6\E),	tbc=\E0,		xon,

wy50w| wyse 50 in 132 mode,

	am,		bel=^G,			cbt=\EI,
 	civis=\E`0,	clear=\E(^Z,		cols#132,
 	cnorm=\E`1,	cr=^M,			cub1=^H,
 	cud1=^J,	cuf1=^L,	cup=\Ea%p1%{1}%+%2dR%p2%{1}%+%3dC, 
 	cuu1=^K,				dch1=\EW,
 	dl1=\ER,	ed=\EY,			el=\ET,
 	home=^^,	ht=^I,			ich1=\EQ,
 	il1=\EE,	ind=\n,			is1=\E'\E(,
 	kbs=^H,		kcub1=^H,		kcud1=^J,
 	kcuf1=^L,	kcuu1=^K,
#	kdl1=\ER,	ked=\EY,		kel=\ET,
#	kil1=\EE,	knp=\EK,		kpp=\EJ,
#	kich1=\EQ, 	kdch1=\EW,		khome=^^,
	kf1=^A@^M,	kf2=^AA^M,		kf3=^AB^M,
 	kf4=^AC^M,	kf5=^AD^M,		kf6=^AE^M,
	kf7=^AF^M,	kf8=^AG^M,		kf9=^AH^M,
	kf10=^AI^M,	kf11=^AJ^M,		kf12=^AK^M,
	kf13=^AL^M,	kf14=^AM^M,		kf15=^AN^M,
	kf16=^AO^M,
	lines#24,	mc0=\EP,		mc4=^T,
	mc5=^R,		nel=^M^J,		rmso=\E(,
	smso=\E`6\E),	tbc=\E0,		xon,
 			       
# ncr: NCR
#
# The 7900 model 1 is the default 7900 type terminal, so ``7900'' refers to it.
# 7900 is not used by other terminals, so there is no name clash.
ncr7900i|7900i|ncr7900|7900|ncr 7900 model 1,
	am, bel=^G, bw, clear=^L, cols#80, cr=^M,
	cub1=^H, cud1=^J, cuf1=^F, cuu1=^Z,
	ind=^J, ll=^A,
	cup=\E1%p2%c%p1%c,
	ed=\Ek, el=\EK,
	kcud1=^J, kcub1=^U, kcuf1=^F, kcuu1=^Z, khome=^A,
	is2=\E0@\E3\E4, lines#24,
	rmso=\E0@, xmc#1, smso=\E0Q,
	blink=\E0B, dim=\E0A, rev=\E0P,
	smul=\E0`, rmul=\E0@, ul, sgr0=\E0@,
# Since each attribute paramter is 0 or 1, we shift each attribute (standout,
# reverse, blink, dim, and underline) the appropriate number of bits (by
# multiplying the 0 or 1 by a coorect factor to shift) so the bias character,
# '@' is (effectively) "or"ed with each attribute to generate the proper third
# character in the <ESC>0 sequence.  The "sgr" string implements the following
# equation:
#
# ((((('@' + P5) | (P4 << 1)) | (P3 << 3)) | (P2 << 4)) | (p1 * 17))    =>
# ((((('@' + P5) + (P4 << 1)) + (P3 << 3)) + (P2 << 4)) + (p1 * 17))
#
#	Where:  P1 <==> Standout attribute parameter
#		P2 <==> Underline attribute parameter
#		P3 <==> Reverse attribute parameter
#		P4 <==> Blink attribute parameter
#		P5 <==> Dim attribute parameter
	sgr=\E0%p5%'@'%+%p4%{2}%*%+%p3%{16}%*%+%p2%{32}%*%+%p1%{17}%*%+%c,
	mc4=^T, mc5=^R,
# It seem users have a couple odd problems with ``vi'' when we define arrows,
# since the arrow character has an otherwise special meaning to ``vi''.
7900i-na|ncr7900i-na|ncr7900-na|7900-na|ncr 7900 model 1 with no arrows,
	kcud1@,   kcub1@,   kcuf1@,   kcuu1@,   use=ncr7900i,
# The entry for the model 4 is mostly untested.  People seem to prefer
# other models.  This is a pretty outdated model.
7900iv|ncr7900iv|ncr 7900 model 4,
	am,	bw,	hs,	eslok,
	cols#80,	lines#24,
	bel=^G,	cr=\r,	clear=\f,
	cup=^K%p1%'@'%+%c\E^E%p2%02d,	cud1=\n,	home=^K@\E^E00,
	cub1=\b,	dl1=\E^O,	dsl=\Ey1,
	fsl=\Ek\Ey5,	il1=\E^N,	kbs=\b,
	kcud1=\EB,	kf1=\ES,	kf2=\ET,
	kf3=\EU,	kf4=\EV,	kf5=\EW,
	kf6=\EP,	kf7=\EQ,	kf8=\ER,
	khome=\EH,	kcub1=\ED,	kcuf1=\EC,
	kcuu1=\EA,	lf6=blue,	lf7=red,
	lf8=white,	nel=\r\n,	ind=\n,
	tsl=\Ej\Ex5\Ex1\EY8%p1%' '%+%c\Eo,
	ind=^J,
# Warning: This terminal will lock out the keyboard when it receives a CTRL-D.
#	   The user can enter a CTRL-B to get out of this locked state.
ncr7901|7901|ncr 7901 model,
	cols#80, lines#24,
	am, bel=^G, bw, clear=^L, cr=^M,
	cub1=^H, cud1=^J, cuf1=^F, cuu1=^Z,
	ind=^J, ll=^A,
	ed=\Ek, el=\EK,
	civis=^W, cnorm=^X,
	mc4=^T, mc5=^R,
	kcud1=^J, kcub1=^U, kcuf1=^F, kcuu1=^Z, kclr=^L, khome=^A,
	is2=^X,
	.is2=\E4^O^X,
	cup=\EY%p1%' '%+%c%p2%' '%+%c,
	vpa=^K%p1%'@'%+%c,
# We want to output the character given by the formula:
#		((col / 10) * 16) + (col % 10)		where "col" is "p1"
	hpa=^P%p1%{10}%/%{16}%*%p1%{10}%m%+%c,
	sgr=\E0%p5%'@'%+%p4%{2}%*%+%p3%{16}%*%+%p2%{32}%*%+%p1%{17}%*%+%c^N,
	blink=\E0B, dim=\E0A, rev=\E0P,
	smso=\E0Q^N, rmso=^O, .msgr,
	smul=\E0`^N, rmul=^O, sgr0=^O, ul,
#ident	"@(#)terminfo:pc.ti	1.14"
# # PC - Personal Computers and Workstations emulating terminals.
#
# Manufacturer:	PERSONAL COMPUTER TERMINALS
# Class:	III
# 
# Info:
#	This category is strange. The typical personal computer offers 
#	a program to emulate a "terminal" without documenting any 
#	escape sequences.
#	
#	I don't have any direct personal experience with these, but 
#	my impression is that the terminal emulator emulates an 
#	ultra-dumb terminal, with the cursor cemented to the bottom 
#	line, and no escape sequences.
#	
#	Many of the entries below were found in random places with 
#	no indication of who they came from or how. In many cases, I 
#	believe what has happened is that someone wrote their own 
#	terminal emulator program, which understood some control 
#	characters or escape sequences, and made their own entries.
#	
#	GENERIC PERSONAL COMPUTER
#
pc|any personal computer emulating a terminal,
	am,
	cols#40,
	bel=^G, cr=\r, cud1=\n, ind=\n,
apple-soroc|apple emulating soroc 120,
	am,
	cols#80, lines#24,
	bel=^G, clear=\E*$<300>, cr=\r, cub1=\b, cud1=\n,
	cuf1=\f, cup=\E=%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=^K,
	ed=\EY, el=\ET, home=^^, ind=\n, kcub1=\b, kcud1=\n,
	kcuf1=\f, kcuu1=^K,
# Info:
#	For those of you with either Programma's Pie or Hayden's Pie, 
#	I'm including a patch for DOS which allows them to function 
#	interactively as a terminal, with data transfer.
#	 
#	The following termcap entry works only with an Apple ][+ that is
#	equipped with a Videx 80 collumn card in slot 3. A special 
#	routine must be installed at the apple end to enable scroll 
#	down, here indicated with a ^U. The Videx card must have 
#	inverse char set.
#
apple|apple-v80|Apple][+ w/Videx80 & custom scroll down,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, cub1=^H$<10>,
	smacs=^z2, rmacs=^z3, cup=\015\036%r%p1%' '%+%c%p2%' '%+%c$<6>,
	el=\035$<6>, home=\031$<50>, smso=^z3, rmso=^z2,
	cuf1=\034, cud1=\012, cuu1=\037, clear=\014$<40*>,
	xenl, am, ri=\020, ed=\013$<20*>,
# Info: 
#	--------------------------------------------------------------
#	 
#	Pieterm is written using Lisa 2.5. If any of the opcodes used 
#	are confusing, refer to hex values in the left most column.
#	 
#	 
#     1           TTL "PIETERM 1.0
#     2           NLS
#     3  ;
#     4  ; PIETERM: A program which patches 48k DOS 3.3 to allow
#     5  ;          Programma Pie, and Hayden Pie to function in
#     6  ;          a terminal mode.
#     7  ;
#     8  ; ASSUMES: Videx 80 collumn Videoterm in slot 3.
#     9  ;          1200 baud Serial Card in slot 2.
#    10  ;          DOS 3.3 unmodified at $9D00 (master or slave)
#    11  ;
#    12  ; TO USE:  Either from the Command level of Pie, or in a
#    13  ;          "HELLO" program, "BRUN PIETERM,A$6000".
#    14  ;          To enter terminal mode, from the Command level
#    15  ;          of Pie, enter "TERM" or "TERM ".
#    16  ; "TERM"   Sends a carriage return before entering terminal
#    17  ;          mode. Best for reentering csh.
#    18  ; "TERM "  Sends a ^D character before entering
#    19  ;          terminal mode. For example, "TERM " should be
#    20  ;          entered if returning to a cat>filename.
#    21  ;
#    22  ; RETURN:  To return to the command level of Pie from the
#    23  ;          terminal mode, enter "^@". With an upper case
#    24  ;          locked keyboard, that is control-shift-P. With
#    25  ;          and Enhanser II lower case keyboard, that is ^0.
#    26  ;
#    27  ; SENDING: From the Command level of Pie, indicated by
#    28  ;          "Command:" (csh indicated by %), enter:
#    29  ;
#    30  ;                 Command:TERM
#    31  ;                 % stty -echo;cat>filename;stty echo
#    32  ;                 % ^@
#    33  ;                 Command:>#2
#    34  ;                 Command:TERM 
#    35  ;                             ^__space
#    36  ;
#    37  ; RECEIVING:      % wc filename
#    38  ;                 46 123 4567 filename
#    39  ;                 % sleep 20;cat filename
#    40  ;                 ^@
#    41  ;                 Command:(1,46)<#2
#    42  ;
#    43  ; BUGS:    Extra linefeeds are sent both ways. A filter program
#    44  ;          at the UN*X end is required to strip every other \n.
#    45  ;          Arg "^J" Arg "" ^W^X will globally illiminate them
#    46  ;          within Pie.
#    47  ;
#    48  ;          Since the Patch program overwrites the INIT portion
#    49  ;          of DOS, it must be brun every boot. A zap utility
#    50  ;          may be used to modify DOS directly on the disk.
#    51  ;
#    52  ;          Pie gives no indication of what is going on. This
#    53  ;          takes a little getting used to. It is possible to
#    54  ;          get so involved with what you are doing in Pie, that
#    55  ;          you forget you are logged on.
#    56  ;
#    57  ;          Because of the limitation of Pie's buffer, large
#    58  ;          file need to be transfered in chunks.
#    59  ;
#    60  ;          --------------------------------
#    61  ;
#    62  ;
# 0800             63  ;
# 06F8             64  NO       EQU $6F8            ; address specific to videx
# 0638             65  START    EQU NO-$C0          ; card in slot 3. See
# C080             66  DEV0     EQU $C080           ; reference manual.
# C081             67  DEV1     EQU $C081
# 03B8             68  BASEL    EQU $478-$C0
# CA2E             69  BASCLC1  EQU $CA2E
# 0438             70  BASEH    EQU $4F8-$C0
# 0800             71  ;
# C0AE             72  STATUS   EQU $C0AE           ; Serial card specific to
# C0AF             73  DATAPORT EQU $C0AF           ; slot 2. Adjust as needed.
# 0800             74  ;
# FDED             75  COUT     EQU $FDED           ; Stdout
# 0800             76  ;
# A884             77  PUTNAME  EQU $A884           ; DOS patch addresses
# A909             78  PUTTOKEN EQU $A909
# 9D1E             79  PUTADR   EQU $9D1E
# AE8E             80  PUTPATCH EQU $AE8E
# 0800             81  ;
# 6000             82           ORG $6000
# 6000             83           OBJ $800
# 6000             84  ;
# 6000 4C 0B 60    85           JMP MAIN
# 6003             86  ;
# 6003 54 45 52    87  NAME     DCI 'TERM'          ; hi-bit off except last
# 6006 CD 
# 6007 40 70       88  TOKEN    HEX 4070            ; need-filename optional
# 6009 8D AE       89  ADRESS   ADR PUTPATCH-1
# 600B             90  ;
# 600B             91  MAIN:
# 600B A2 04       92           LDX 4
# 600D BD 02 60    93  ^1       LDA NAME-1,X
# 6010 9D 83 A8    94           STA PUTNAME-1,X
# 6013 CA          95           DEX 
# 6014 D0 F7       96           BNE <1
# 6016 E8          97           INX 
# 6017 BD 07 60    98  ^2       LDA TOKEN,X
# 601A 9D 09 A9    99           STA PUTTOKEN,X
# 601D BD 09 60   100           LDA ADRESS,X
# 6020 9D 1E 9D   101           STA PUTADR,X
# 6023 CA         102           DEX 
# 6024 10 F1      103           BPL <2
# 6026 A2 73      104           LDX #ENDPATCH-PATCH+1
# 6028 BD 32 60   105  ^3       LDA PATCH,X
# 602B 9D 8E AE   106           STA PUTPATCH,X
# 602E CA         107           DEX 
# 602F 10 F7      108           BPL <3
# 6031 60         109           RTS 
# 6032            110  ;
# 6032            111  PATCH:
# 6032            112           PHS PUTPATCH
# AE8E            113  ;
# AE8E A2 8D      114           LDX #$8D
# AE90 AD 04 02   115           LDA INBUFF+4
# AE93 C9 A0      116           CMP #" "
# AE95 D0 02      117           BNE >0
# AE97 A2 84      118           LDX #$84
# AE99 8A         119  ^0       TXA 
# AE9A 4C BD AE   120           JMP SENDIT
# AE9D AD AE C0   121  RECEIVE  LDA STATUS
# AEA0 29 01      122           AND #$01
# AEA2 F0 0C      123           BEQ SEND
# AEA4 AD AF C0   124           LDA DATAPORT
# AEA7 29 7F      125           AND #$7F
# AEA9 C9 10      126           CMP #$10
# AEAB F0 1F      127           BEQ SCROLLD
# AEAD 20 ED FD   128  PRINTIT  JSR COUT
# AEB0 AD 00 C0   129  SEND     LDA $C000
# AEB3 10 E8      130           BPL RECEIVE
# AEB5 8D 10 C0   131           STA $C010
# AEB8 29 7F      132           AND #$7F
# AEBA D0 01      133           BNE SENDIT
# AEBC 60         134           RTS 
# AEBD 48         135  SENDIT   PHA 
# AEBE AD AE C0   136  S0       LDA STATUS
# AEC1 29 02      137           AND #$02
# AEC3 F0 F9      138           BEQ S0
# AEC5 68         139           PLA 
# AEC6 8D AF C0   140           STA DATAPORT
# AEC9 4C 9D AE   141           JMP RECEIVE
# AECC 38         142  SCROLLD  SEC 
# AECD A2 C3      143           LDX #$C3            ; for slot 3
# AECF AC F8 06   144           LDY NO
# AED2 BD 38 06   145           LDA START,X
# AED5 E9 05      146           SBC #$05
# AED7 29 7F      147           AND #$7F
# AED9 9D 38 06   148           STA START,X
# AEDC 20 2E CA   149           JSR BASCLC1
# AEDF A9 0D      150           LDA #$0D
# AEE1 99 80 C0   151           STA DEV0,Y
# AEE4 BD B8 03   152           LDA BASEL,X
# AEE7 99 81 C0   153           STA DEV1,Y
# AEEA A9 0C      154           LDA #$0C
# AEEC 99 80 C0   155           STA DEV0,Y
# AEEF BD 38 04   156           LDA BASEH,X
# AEF2 99 81 C0   157           STA DEV1,Y
# AEF5 A9 19      158           LDA #$19            ; home cursor
# AEF7 20 ED FD   159           JSR COUT
# AEFA A9 1D      160           LDA #$1D            ; ceol
# AEFC 20 ED FD   161           JSR COUT
# AEFF 4C 9D AE   162           JMP RECEIVE
# AF02            163  ;
# AF02            164           DPH 
# 60A6            165           ORG $6000+*-$800
# 60A6            166           OBJ *
# 60A6            167  ;
# 60A6            168  ENDPATCH:
# 60A6            169           END 
# ATT
#
# Info:
#	The official PC terminal emulator program of the AT&T Product 
#	Centers.
#	
#	Note - insert mode commented out - doesn't seem to work on 
#	AT&T PC.
#
simterm|attpc running simterm,
	am,
	cols#80, lines#24,
	bel=^G, clear=\EH\EJ, cr=\r, cub1=\b, cud1=\EB,
	cuf1=\EC, cup=\E=%p1%' '%+%c%p2%' '%+%c, cuu1=\EA,
	dch1=\ER, dl1=\EM, ed=\EJ, el=\EK, home=\EH, il1=\EL,
	ind=\n, rmcup=\EVE, .rmir=\EE, .rmso=\E&d@, smcup=\EVS,
	smir=\EQ, smso=\E&dB,
# Info:
#
vic20|vic|vic Personal Computer,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, clear=^K^L, home=^L,
	lines#20, cuu1=^^, cuf1=^\, cols#22,
# Info:
#	(Dan Ingold)
#	
#	Following is a TERMCAP entry for the Datapoint UNITRM18 
#	asynchronous terminal emulation program. It has only been 
#	tested out at 1200 baud, however, so I don't know if the 
#	delays are correct.
#	
#	[what is control "="?  keys send different codes from functions? - mrh]
#
unitrm18|datapoint 'UNITRM18' terminal emulator,
	cr=^M, ind=^J, cud1=^J, bel=^G, am, cub1=^y,
	ed=^?, el=^>, clear=^=^?$<12.5>, cols#80, cud1=^k, home=^=,
	kcuu1=^x, kcud1=^r, kcub1=^t, kcuf1=^v, lines#24, cuf1=^x, cuu1=^z, 
# Info:
#	FLORIDA COMPUTER GRAPHICS
#	Florida Computer Graphics Beacon System, using terminal emulator
#	program "host.com", as provided by FCG.  Entry provided by
#	David Bryant (cbosg!djb) 1/7/83.
#	This description is for an early release of the "host" program.
#	Known bug: ed clears the whole screen, so it's commented out.
#
beacon|FCG Beacon System,
	cr=^M, cud1=^J, ind=^J, cols#80, lines#32, clear=\EZ$<10>,
	cub1=^H, cup=\E=%p1%' '%+%c%p2%' '%+%c$<20>, cuf1=\EV, cuu1=\EU, el=\ET,
	.ed=\EY, dch1=\EW, ich1=\EQ, dl1=\ER, il1=\EE,
	smcup=\ESTART^M\E2\0540^M\E12^M\EEND^M$<10>,
	bel=\ESTART^M\E37^M\EEND^M$<1>, home=\EH$<10>,
	am, da, db, 
	rev=\ESTART^M\E59\0541^M\EEND^M,
	smso=\ESTART^M\E70\0546^M\EEND^M$<20>,
	rmso=\ESTART^M\E70\0540^M\EEND^M$<20>,
	smul=\ESTART^M\E60\0541^M\EEND^M, 
	rmul=\ESTART^M\E60\0540^M\EEND^M, 
	blink=\ESTART^M\E61\0541^M\EEND^M, 
	sgr0=\ESTART^M\E78^M\E70\0540^M\EEND^M$<20>,
# Info:
#	This doesn't work because the cursor position isn't saved 
#	with the window.
#
beacon-s|FCG Beacon System with status line,
	lines#31, eslok, hs,
	tsl=\ESTART^M\E45\0541^M\E41\054%p1%d\0541^M\EEND^M$<10>,
	fsl=\ESTART^M\E45\0540^M\EEND^M$<10>,
	is2=\ESTART^M\E45\0540^M\E65\05431^M\E66\05445^M\E45\0541^M\E65\0541^M\E66\0541^M\E45\0540^M\EEND^M$<30>,
	use=beacon,
# Info:
#	Here is the xtalk termcap. I mostly use the terminfo (curses) 
#	version myself since I am working at BTL where they have a 
#	certain bias. I am sending the terminfo version too, so that 
#	you can compare them if there are any undiscovered glitches 
#	in the termcap version due to insufficient testing.
#	
#	First the termcap version --
#	
#	d0|vt100|vt100-am|vt100|dec vt100:\
#		:cr=^M:do=^J:nl=^J:bl=^G:co#80:li#24:cl=50\E[;H\E[2J:\
#		:le=^H:bs:am:cm=5\E[i2252;787036H:nd=2\E[C:up=2\E[A:\
#		:ce=3\E[K:cd=50\E[J:so=2\E[7m:se=2\E[m:us=2\E[4m:ue=2\E[m:\
#		:md=2\E[1m:mr=2\E[7m:mb=2\E[5m:me=2\E[m:is=\E[1;24r\E[24;1H:\
#		:rs=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h:ks=\E[?1h\E=:ke=\E[?1l\E>:\
#		:rf=/usr/lib/tabset/vt100:ku=\EOA:kd=\EOB:kr=\EOC:kl=\EOD:kb=^H:\
#		:ho=\E[H:k1=\EOP:k2=\EOQ:k3=\EOR:k4=\EOS:ta=^I:pt:sr=5\EM:vt#3:xn:\
#		:sc=\E7:rc=\E8:cs=\E[i2252;787036r:
#	d1|xtalk|IBM PC with xtalk:\
#		:sc@:rc@:cs@:am@:xn@:al=99\E[L:dl=99\E[M:tc=vt100-am:
#	
#	The problem is in the "xtalk" entry. The "am" auto-margin 
#	flag should not be turned off as shown above. The following 
#	is the corrected "xtalk" entry.
#	
#	d1|xtalk|IBM PC with xtalk:\
#		:sc@:rc@:cs@:xn@:al=99\E[L:dl=99\E[M:tc=vt100-am:
#	
#	This is the shell script that I execute from my profile when I 
#	login from xtalk --
#	
#	# set auto margins
#	echo '\033[?7h\c'
#	#set up tab stops
#	stty -tabs
#	echo '\033[3g'
#	for i in 1 2 3 4 5 6 7 8 9
#	do
#	echo '        \033H\c'
#	done
#	stty tabs
#	echo
#	
#	
#	Now the terminfo version (This is the input to the 'tic' 
#	compiler) --
#	
#	Vanilla vt100 definitions.
#	vt100|vt100-am|dec vt100,
#		cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24, it#8,
#		clear=\E[H\E[2J$<50>, cub1=^H, am, cup=\E[ip12252;p2787036H$<5>,
#		cuf1=\E[C$<2>, cuu1=\E[A$<2>, el=\E[K$<3>, ed=\E[J$<50>,
#		cud=\E[p12252B, cuu=\E[p1787036A, cub=\E[p1787088D, cuf=\E[p1787036C, 
#		smso=\E[7m$<2>, rmso=\E[m$<2>, smul=\E[4m$<2>, rmul=\E[m$<2>,
#		bold=\E[1m$<2>, rev=\E[7m$<2>, blink=\E[5m$<2>, sgr0=\E[m$<2>,
#		sgr=\E[?p1t;7;?p2t;4;?p3t;7;?p4t;5;?p6t;1;m,
#		rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, smkx=\E[?1h\E=, rmkx=\E[?1l\E>,
#		tbc=\E[3g, hts=\EH, home=\E[H,
#		kcuu1=\EOA, kcud1=\EOB, kcuf1=\EOC, kcub1=\EOD, kbs=^H,
#		kf1=\EOP, kf2=\EOQ, kf3=\EOR, kf4=\EOS, ht=^I, ri=\EM$<5>,
#		vt#3, xenl, xon, sc=\E7, rc=\E8, csr=\E[ip12252;p2787036r,
#	
#	
#	ibm xtalk terminal simulator -- similar to but dumber than 
#	vanilla vt100
#			Enjoy!
#			Rick Thomas
#			ihnp4!btlunix!rbt
#			(201)-522-6062
#			
#	PS -- I just got word that there is a new revision of xtalk 
#	(3.5 I think they said) that is supposed to fix the vt100 
#	emulation problems.
#
xtalk|IBM PC with xtalk communication program,
	am, mir, msgr, xon,
	cols#80, it#8, lines#24, vt#3, xmc#1,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, clear=\E[H\E[J$<50>, cr=\r, cub=\E[%p1%dD,
	cub1=\b, cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC,
	cuf1=\E[C$<2>, cup=\E[%i%p1%d;%p2%dH$<5>,
	cuu=\E[%p1%dA, cuu1=\E[A$<2>, dl1=\E[M$<99>,
	ed=\E[J$<50>, el=\E[K$<3>, el1=\E[1K$<3>,
	enacs=\E(B\E)0, home=\E[H, ht=\t, hts=\EH,
	il1=\E[L$<99>, ind=\n, ka1=\EOq, ka3=\EOs, kb2=\EOr,
	kbs=\b, kc1=\EOp, kc3=\EOn, kcub1=\EOD, kcud1=\EOB,
	kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, kf1=\EOP,
	kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt,
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, ri=\EM$<5>,
	rmacs=^O, rmkx=\E[?1l\E>, rmso=\E[m\s,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, smacs=^N,
	smkx=\E[?1h\E=, smso=\E[7m\s, tbc=\E[3g,
#	
# Info: 
#	\EI gets you out of inverse video mode.
#
# Info:
#	IBM
#	Thu May  5 19:35:27 1983
#
ibmpc|ibm-pc|ibm5051|5051|IBM Personal Computer,
	cud1=^J, ind=^J$<10>, bel=^G, smir=\200R, am, cub1=^],
	kcud1=^_, clear=^L^K, cr=^M^^, home=^K, lines#24, cuu1=^^,
	cuf1=^\, cols#80,
# Info:
#	According to the Coherent 2.3 manual, the PC console is similar
#	to a z19. The differences seem to be (1) 25 lines, (2) no status
#	line, (3) standout is broken, (4) ins/del line is broken, (5)
#	has blinking and bold.
#
pc-coherent|pcz19|coherent|IBM PC console running Coherent,
	cr=^M, cud1=^J, ind=^J, bel=^G, .il1=\EL$<1*>, am, cub1=^H,
	ed=\EJ, el=\EK, clear=\EE, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80,
	dch1=\EN, .dl1=\EM$<1*>, cud1=\EB, rmir=\EO, home=\EH, smir=\E@,
	lines#25, mir, cuf1=\EC, ht=^I, it#8,
	ri=\EI, rmso=\Eq, smso=\Ep, cuu1=\EA,
	kbs=^h, kcuu1=\EA, kcud1=\EB, kcub1=\ED, kcuf1=\EC, khome=\EH,
# Info:
#	According to the Venix 1.1 manual, the PC console is similar
#	to a DEC vt52. Differences seem to be (1) arrow keys send 
#	different strings, (2) enhanced standout, (3) added 
#	insert/delete line.
#	
#	Note in particular that it doesn't have automatic margins (ick).
#	There are other keys (f1-f10, pgup, pgdn, backtab, insch,delch)
#	which I don't have time to add now.
#
pc-venix|venix|IBM PC console running Venix,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=\EJ, el=\EK,
	clear=\EH\EJ, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80, lines#25,
	cuf1=\EC, ht=^I, it#8, ri=\EI, cuu1=\EA,
	kcuu1=\EH, kcud1=\EP, kcuf1=\EM, kcub1=\EK, kbs=^H,
	il1=\EL, dl1=\EM, khome=\EG,
ibm|ibm3101|3101|i3101|IBM 3101-10,
	am,
	cols#80, lines#24,
	bel=^G, clear=\EK, cr=\r, cub1=\b, cud1=\n, cuf1=\EC,
	cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=\EA, ed=\EJ,
	el=\EI, home=\EH, ht=\t, hts=\E0, tbc=\EH,
	ind=\n, kcub1=\ED, kcud1=\EB, kcuf1=\EC, kcuu1=\EA,
ibm-system1|system1|ibm system/1 computer,
	ind=^J, bel=^G, xt, am, cub1=^H,
	cup=^E%p1%' '%+%c%p2%' '%+%c, clear=^Z,
	cols#80, home=^K, lines#24, cuf1=^\, cuu1=^^, 
megatek|Pegasus Work Station Terminal Emulator,
	cols#83, lines#60, os, am,
# Info:
#	sol and Microkit are for Corey - 6/11/82 - NS
#
microkit|mkt|microkit terminal computer,
	cr=^M, ind=^J, cud1=^J, bel=^G,
	il1=\El, am, cub1=^H, ed=\Ej, el=\Ek, clear=\Ee,
	cup=\Ey%p1%' '%+%c%p2%' '%+%c, cols#40, dch1=\En, dl1=\Em,
	rmir=\Eo, home=\Eh, smir=\E@, lines#23, mir,
	cuf1=\Ec, cuu1=\Ea, ht=^I, cvvis=^N^Lzv, cnorm=\Ex,
	kcuu1=\Eu, kcud1=\Ed, kcub1=\El, kcuf1=\Er, khome=\Eh, xenl, 
# Info:
#	OSBORNE
#	Thu Jul  7 03:55:16 1983
#	
#	As an aside, be careful; it may sound like an anomaly on the 
#	Osborne, but with the 80-column upgrade, it's too easy to 
#	enter lines >80 columns!
#	
#	I've already had several comments...
#	The Osborne-1 with the 80-col option is capable of being 
#	52,80, or 104 characters wide; default to 80 for compatibility 
#	with most systems.
#	
#	The tab is destructive on the Ozzie; make sure to 'stty -tabs'.
#
ozzie|osborne|osborne1|osborne 1,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE, cub1=^H, el=\ET,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=^Z, cols#104, dch1=\EW, dl1=\ER,
	kcuu1=^K, kcud1=^J, kcub1=^H, kcuf1=^L, cud1=^J, cuf1=^L,
	ich1=\EQ, lines#24, cuu1=^K, msgr, smso=\E), rmso=\E(,
	ul, smul=\El, rmul=\Em, xt,
# Info:
#	SOL
#	I don't know which, if either, of these sol's to believe.
#	^S is an arrow key!  
#
sol|sol1|,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, cup=\E^1%p1%c\E^2%p2%c,
	clear=^K, home=^N, cols#64, lines#16, cuf1=^S, cuu1=^W,
	kcub1=^A, kcuf1=^S, kcuu1=^W, kcud1=^Z,
# Info:
#	sol and Microkit are for Corey - 6/11/82 - NS
#
sol2|sol terminal computer,
	cr=^M, ind=^J$<20>, cud1=^J, bel=^G,
	il1=20\EL, am, cub1=^H, ed=20\EJ, el=\EK, clear=20\EE,
	cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#64, dch1=\EN, dl1=20\EM,
	rmir=\EO, home=\EH, smir=\E@, lines#16, mir, cuf1=\EC,
	cuu1=\EA, ht=^I, cvvis=^N^Lv, cnorm=\EX,
	kcuu1=\EU, kcud1=\ED, kcub1=\EL, kcuf1=\ER, khome=\EH, xenl, 
# Info:
#	SUN
#	smcup/rmcup control # lines scrolled on linefeed. The sun 2 
#	seems to handle this well with it set to 1, so both force this. 
#	rmcup could use 0 or 3 just as well, I suppose.
#
sun|sun1|sun2|sun microsystems inc workstation,
	cr=^M, cud1=\E[B, ind=^J, bel=^G, am, km, cub1=^H, clear=^L,
	lines#34, cols#80, cup=\E[%i%p1%d;%p2%dH, cuf1=\E[C, cuu1=\E[A,
	el=\E[K, ed=\E[J, smcup=\E[1r, rmcup=\E[1r, kcud1=\E[B,
	kcub1=\E[D, kcuu1=\E[A, kcuf1=\E[C, khome=\E[H, kf1=\EOP,
	kf2=\EOQ, kf3=\EOR, kf4=\EOS, ht=^I, il1=\E[L, dl1=\E[M,
	smso=\E[7m, rmso=\E[m, msgr, ich1=\E[@, mir, dch1=\E[P,
terak|Terak emulating Datamedia 1520,
	am, xenl,
	cols#80, lines#24,
	bel=^G, clear=\f, cr=\r, cub1=\b, cud1=\n, cuf1=^\,
	cup=^^%p2%'\s'%+%c%p1%'\s'%+%c, cuu1=^_, ed=^K, el=^],
	home=^Y, ht=\t, ind=\n, kcub1=\b, kcud1=\n, kcuf1=^\,
	kcuu1=^_, khome=^Y,
trs80|trs-80|trs80-1|Radio Shack TRS-80 model I,
	cr=^M, cud1=^J, ind=^J, bel=^G,
	am, cub1=^H, cols#64, lines#16,
# Info:
#
trs16|trs80-16|trs-80 model 16 console,
	cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EL, am, cub1=^H, ed=\EJ,
	el=\EK, clear=^L, cup=\EY%p1%' '%+%c%p2%' '%+%c, cuu1=\EA,
	cols#80, dch1=\EQ, dl1=\EM,
	cud1=\EB, ich1=\EP, home=\EH, kbs=^H, kcud1=\EB,
	kcub1=\ED, kcuf1=\EC, kcuu1=\EA, kf0=^A, kf1=^B,
	lines#24, cuf1=\EC, ht=^I, rmso=\ER@, xmc#0, smso=\ERD,
	kf2=^D, kf3=^L, kf4=^U, kf5=^P, kf6=^N, kf7=^S,
# Info:
#	Radio Shack model 100 running standard TELCOM Rom program 
#	hacking by <and flames to> Yerazuws@RPI, Bownesrm@RPI 1/8/84
#	tested at 300 baud (foneline), remember to set the 100's RS-232
#	to ignore parity (eg. config to 37I1N) if you want to
#	run Emacs (which this termcap description will, quite nicely!)
#	
#	 From: jgc@sunrise.UUCP Mon, 11-Jul-83 17:33:49 EDT
#	   esc A  - cursor up
#	   esc B  - cursor down
#	   esc C  - cursor right
#	   esc D  - cursor left
#	   esc E  - clear screen and home cursor
#	   esc H  - home cursor
#	   esc J  - erase to end of screen
#	   esc K  - erase to end of line
#	   esc L  - insert line
#	   esc M  - delete line
#	   esc P  - turn on cursor
#	   esc Q  - turn off cursor
#	   esc T  - sets system line (?)
#	   esc U  - resets system line (?)
#	   esc V  - turn off LCD (?)
#	   esc W  - turn on LCD (?)
#	   esc Y row column - cursor motion (:cm=\EY%+ %+ :)
#	   esc j  - clear screen, don't move cursor
#	   esc l  - erase line, don't move cursor
#	   esc p  - begin reverse video
#	   esc q  - end reverse video
#	   esc del - change char under cursor to space
#
trs80-100|trs100|trs-100|MZ|m-100|m100| Radio Shack Model 100,
	cr=^M, cud1=^J, ind=^J, bel=^G, ed=\EJ, el=\EK, cub1=^H, am,
	dl1=\EM, il1=\EL, cuu1=\EA, cuf1=\EC, cup=\EY%p1%' '%+%c%p2%' '%+%c,
	lines#8, cols#40, smso=\Ep, rmso=\Eq,
	kcuu1=^^, kcud1=^_, kcub1=^], kcuf1=^\, kbs=^H,
	home=\EH, clear=\EE, xt,
	civis=\EQ, cnorm=\EP,
# XEROX
x820|Xerox 820,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	cup=\E=%p1%' '%+%c%p2%' '%+%c,
	clear=1^Z, ed=^Q, el=^X, cols#80, home=^^, lines#24,
	cuf1=^L, cuu1=^K,

# COLOR EMULATORS

gs6300|emots|AT&T PC6300 with EMOTS Terminal Emulator,

# background color erase

	am, msgr, xon, bce,
	cols#80, it#8, lines#24, colors#8, pairs#64,
	acsc=\,\,..--++``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[H\E[J,
	cr=\r, cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cud1=\n,
	cuf=\E[%p1%dC, cuf1=\E[C, cup=\E[%i%p1%d;%p2%dH,
	cuu=\E[%p1%dA, cuu1=\E[A, dch=\E[%p1%dP, dch1=\E[P,
	dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K, .el1=\E[1K,
	home=\E[H, ht=\t, ich=\E[%p1%d@, ich1=\E[@,
	il=\E[%p1%dL, il1=\E[L, ind=\n, is2=\E[0m, kbs=\b,
	kcbt=^R\t, kcub1=\E[D, kcud1=\E[B, kcuf1=\E[C,
	kcuu1=\E[A, kf1=\E[0s, kf2=\E[24s, kf3=\E[1s,
	kf4=\E[23s, kf5=\E[2s, kf6=\E[22s, kf7=\E[3s,
	kf8=\E[21s, khome=\E[H, mc4=\E[4i, mc5=\E[5i,
	rev=\E[7m, ri=\E[L, rmacs=\E[10m, rmln=\E|, rs1=\Ec,
	sgr0=\E[m\E[10m, smacs=\E[11m, smso=\E[1m, smul=\E[4m,

#	color information.  blue foreground is simulated with cyan

	op=\E[?;m,
	setf=\E[?%?%p1%{0}%=%t0
		 %e%p1%{1}%=%t2
		 %e%p1%{1}%-%d%;m,
	setb=\E[?;%p1%dm,


pc52|dec vt52 for PC,

#	background color erase

	am, msgr, bce,
	cols#80, it#8, lines#25,

# 	bold means: white on black bold, so it not allowed with colors
# 	rev meand: black on white, also not allowed
#	smso and dim are simulated with colors, ditto
#	smul is allowed, even though it always means white foreground:
#	it is too important.

	colors#8, pairs#64, ncv#53,
	bel=^G, blink=\Eo, bold=\Ebo\Ec0, clear=\EH\EJ, cr=\r,
	cub1=\b, cud1=\n, cuf1=\EC,
	cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=\EA,
	dim=\Eb3\Ec0, dl1=\EM, ed=\EJ, el=\EK, ht=\t, il1=\EL,
	ind=\n, kbs=\b, kcub1=\EL, kcud1=\ED, kcuf1=\ER,
	kcuu1=\EU, kf1=\Ea, kf10=\Ej, kf2=\Eb, kf3=\Ec,
	kf4=\Ed, kf5=\Ee, kf6=\Ef, kf7=\Eg, kf8=\Eh, kf9=\Ei,
	rev=\Ep, ri=\EI, rmso=\Eb7\Ec0, sgr0=\Eb7\Ec0\Et, smso=\Eb6\Ec4,
	smul=\Es,

#	color information.  blue foreground is simulated with cyan

	op=\Eb7\Ec0,
	setf=\Eb%?%p1%{1}%=%t3
	        %e%p1%d%;,
	setb=\Ec%p1%d,


# CTRM terminal emulator

ctrm|C terminal emulator,

	am, xon,

# back_color_erase
# underlining is not allowed with colors: first, is is simulated by 
# black on white, second, it disables background color manipulations.

	bce,
	cols#80, lh#0, lines#24, lm#0, lw#0, nlab#0, colors#8, pairs#64,
	pb#19200, vt#6, ncv#2,
	bel=^G, cbt=\Ei, clear=\EH\EJ, cr=\r, cub1=\b,
	cud1=\n, cuf1=\EC, cup=\E&a%p2%dc%p1%dY, cuu1=\EA,
	dch1=\EP$<2>, dl1=\EM, ed=\EJ, el=\EK, hpa=\E&a%p1%dC,
	ht=\t$<2>, hts=\E1, il1=\EL, ind=\n, ip=$<2>,
	is2=\E&jA\r, kbs=\b, kcub1=\Eu\r, kcud1=\Ew\r,
	kcuf1=\Ev\r, kcuu1=\Et\r, kf1=\Ep\r, kf2=\Eq\r,
	kf3=\Er\r, kf4=\Es\r, kf5=\Et\r, kf6=\Eu\r, kf7=\Ev\r,
	kf8=\Ew\r, khome=\Ep\r, rmir=\ER, rmkx=\E&jA, smir=\EQ,
	smkx=\E&jB, smso=\E&dD, smul=\E&dD, tbc=\E3,
	vpa=\E&a%p1%dY,

# BLINKING, REVERSE and BOLD are allowed with colors,
# so we have to save their status in the static registers A, B and H
# respectively, to be able to restore them when color changes
# (because any color change turns off ALL attributes)

	blink=\E&dA%{1}%PA,

# "enter_bold_mode" and "enter_reverse_mode" sequences alternates modes,
# rather then simply  entering them.  Thus we have to check the
# static register B and H to determine the status, before sending the 
# escape sequence.

	rev=%?%gB%{0}%=%t\E&dB%{1}%PB%;,
	bold=%?%gH%{0}%=%t\E&dH%{1}%PH%;,

	smul=\E&dD,

# sgr0 now must set the status of all 3 register (A,B,H) to zero
# and then reset colors

	sgr0=\E&d@%{0}%PA%{0}%PB%{0}%PH,

# implementation of the protect mode would badly penalize the performance.
# we would have to use \E&bn sequence to turn off colors (as well as all
# other attributes), and keep the status of protect mode in yet another
# static variable.  If someone really need this mode, they would have to
# create another terminfo entry.

	sgr=\E&d@%{0}%PA%{0}%PB%{0}%PD%{0}%PH
		 %?%p1%p3%p5%|%|%t\E&dB%{1}%PB%;
		 %?%p4%t\E&dA%{1}%PA%;
		 %?%p6%t\E&dH%{1}%PH%;
		 %?%p2%t\E&dD%;,

# original color-pair: white on black.
# store the information about colors into static registers

	op=\E&bn\E&bB\E&bG\E&bR
	    %{0}%PX%{0}%PY%{0}%PZ
	    %{1}%PW%{1}%PV%{1}%PU,

# set foreground color.  it performs the following steps.
#   1) turn off all attributes
#   2) turn on the background and video attribues that have been turned
#      on before (this information is stored in static registers X,Y,Z,A,B,H,D).
#   3) turn on foreground attributes
#   4) store information about foreground into U,V,W static registers

	setf=\E&bn
		%?%gA%t\E&dA%;
		%?%gB%t\E&dB%;
		%?%gH%t\E&dH%;
		%?%gX%t\E&br%;
		%?%gY%t\E&bg%;
		%?%gZ%t\E&bb%;

		%?%p1%{1}%&%t\E&bB%{1}%e%{0}%;%PW
		%?%p1%{2}%&%t\E&bG%{1}%e%{0}%;%PV
		%?%p1%{4}%&%t\E&bR%{1}%e%{0}%;%PU,

# turn on background: similar to turn on foreground above

	setb=\E&bn
		%?%gA%t\E&dA%;
		%?%gB%t\E&dB%;
		%?%gH%t\E&dH%;
		%?%gU%t\E&bR%;
		%?%gV%t\E&bG%;
		%?%gW%t\E&bB%;

		%?%p1%{1}%&%t\E&bb%{1}%e%{0}%;%PZ
		%?%p1%{2}%&%t\E&bg%{1}%e%{0}%;%PY
		%?%p1%{4}%&%t\E&br%{1}%e%{0}%;%PX,
#	ATT:#ident	"terminfo:perkinelmer.ti	1.10"	*/
#	ATT:#ident	"terminfo:perkinelmer.ti	1.7"	*/
	
#ident	"@(#)lib/terminfo:perkinelm.ti	25.1"

# # --------------------------------
#
# perkinelmer: PERKIN ELMER
#
# Manufacturer:	PERKIN ELMER
# Class:	II
# 
#	Following this message is a copy of our TERMINFO file for 
#	Perkin-Elmer terminals. Please be aware that we are in the 
#	process of revising it and will supply you a new version as 
#	soon as its ready. In the mean time, though, this should get 
#	you started.
#	
#	
# perkinelmer: PERKIN ELMER
#
bantam|pe550|pe6100|perkin elmer 550,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, cols#80, el=\EI$<20>,
	clear=\EK$<20>, cup=\EX%p1%' '%+%c\EY%p2%' '%+%c, home=\EH,
	lines#24, ll=\EH\EA, cuf1=\EC, cuu1=\EA,
fox|pe1100|perkin elmer 1100,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H,
	ed=\EJ$<5.5*>, el=\EI, clear=\EH\EJ$<132>, cols#80, home=\EH, lines#24,
	ll=\EH\EA, cuf1=\EC, cup=\EX%p1%' '%+%c\EY%p2%' '%+%c,
	cuu1=\EA, flash=^P^B^P^C,
owl|pe1200|perkin elmer 1200,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EL$<5.5*>,
	am, cub1=^H, ed=\EJ$<5.5*>, el=\EI$<5.5>, clear=\EH\EJ$<132>, home=\EH,
	ll=\EH\EA, cup=\EX%p1%' '%+%c\EY%p2%' '%+%c, cols#80, dch1=\EO$<5.5*>,
	dl1=\EM$<5.5*>, ich1=\EN, ip=$<5.5*>, kbs=^h, in, lines#24,
	cuf1=\EC, cuu1=\EA, rmso=\E!\200, smso=\E!^H, flash=^P^B^P^C,
	kf1=\ERA, kf2=\ERB, kf3=\ERC, kf4=\ERD, kf5=\ERE, kf6=\ERF,
	kf7=\ERG, kf8=\ERH, kf9=\ERI, kf0=\ERJ,
pe1251|pe6300|pe6312|perkin elmer 1251,
	am, cols#80, it#8, lines#24, xmc#1, pb#300, vt#8,
	bel=^G, cr=^M, clear=\EK$<332>, el=\EI$<10*>, ed=\EJ$<20*>,
	cud1=\EB, home=\EH, cub1=\ED, cuf1=\EC, cuu1=\EA, 
	cup=\EX%p1%' '%+%c\EY%p2%' '%+%c, ind=^J, hts=\E1, kf0=\ERA,
	kf1=\ERB, kf2=\ERC, kf3=\ERD, kf4=\ERE, kf5=\ERF, kf6=\ERG,
	kf7=\ERH, kf8=\ERI, kf9=\ERJ, kf10=\ERK, tbc=\E3,
pe7000m|perkin elmer 7000 series monochrome monitor,
	am,	cols#80,    lines#24,
	bel=^G, cr=^M,	clear=\EK, el=\EI,   ed=\EJ,
	cud1=\EB,  home=\EH, cub1=\ED, cuf1=\EC, cuu1=\EA,
	cup=\ES%p1%' '%+%c%p2%' '%+%c,ind=^J,
	is1=\E!\0\EW  7o\Egf\ES7 ,
	smso=\E!\010, rmso=\E!\0,
	cbt=\E!Y,
	kf0=\E!\0, kf1=\E!\001, kf2=\E!\002, kf3=\E!\003,
	kf4=\E!\004, kf5=\E!\005, kf6=\E!\006, kf7=\E!\007,
	kf8=\E!\010, kf9=\E!\011, kf10=\E!\012,
	kbs=^H, kcud1=\E!U, khome=\E!S, kcub1=\E!V, kcuf1=\E!W,
	kcuu1=\E!T, ll=\ES7 , ri=\ER, 
	rmul=\E!\0, smul=\E!\040, 
pe7000c|perkin elmer 7000 series colour monitor,
	am,	cols#80,    lines#24,
	bel=^G, cr=^M,	clear=\EK, el=\EI,   ed=\EJ,
	cud1=\EB,  home=\EH, cub1=\ED, cuf1=\EC, cuu1=\EA,
	cup=\ES%p1%' '%+%c%p2%' '%+%c,ind=^J,
	is1=\E!\0\EW  7o\Egf\Eb0\Ec7\ES7 ,
	smso=\Eb2, rmso=\Eb0,
	cbt=\E!Y,
	kf0=\E!\0, kf1=\E!\001, kf2=\E!\002, kf3=\E!\003,
	kf4=\E!\004, kf5=\E!\005, kf6=\E!\006, kf7=\E!\007,
	kf8=\E!\010, kf9=\E!\011, kf10=\E!\012,
	kbs=^H, kcud1=\E!U, khome=\E!S, kcub1=\E!V, kcuf1=\E!W,
	kcuu1=\E!T, ll=\ES7 , ri=\ER, 
	rmul=\E!\0, smul=\E!\040, 



#	ATT:#ident	"terminfo:print.ti	1.9"	*/
#	ATT:#ident	"terminfo:print.ti	1.6"	*/
	
#ident	"@(#)lib/terminfo:print.ti	25.1"

# # --------------------------------
#
# print: PRINTERS
#
# Manufacturer:	GENERIC LINE PRINTERS
# Class:	III
# 
# Info:
#	Generic line printer. We assume it can backspace, since even 
#	those line printers that can't have this hidden by UNIX lpr 
#	driver.
#
lpr|lp|printer|print|printing|line printer,
	cr=^M, cud1=^J, ind=^J, ff=^L, bel=^G, cub1=^H,
	lines#66, cols#132, hc, os,
# Info:
#	The 'S' beginning mc4 and mc5 is checked for by lp, which 
#	sleeps 5 seconds.
#
pbox|printerbox|box with print mode switch,
	mc5=Set printer switch to "print"\r\n,
	mc4=Set printer switch to "terminal"\r\n,
2621-pb|hp2621-pb|2621 with printer box,
	am, da, db, mir, xon,
	cols#80, lines#24, lm#0, pb#19200, vt#6,
	bel=^G, cbt=\Ei, clear=\EH\EJ, cr=\r, cub1=\b,
	cud1=\n, cuf1=\EC, cup=\E&a%p2%dc%p1%dY, cuu1=\EA,
	dch1=\EP$<2>, dl1=\EM, ed=\EJ, el=\EK, hpa=\E&a%p1%dC,
	ht=\t$<2>, hts=\E1, il1=\EL, ind=\n, ip=$<2>,
	is2=\E&jA\r, kbs=\b, kcbt=\Ei, kf1=\Ep\r, kf2=\Eq\r,
	kf3=\Er\r, kf4=\Es\r, kf5=\Et\r, kf6=\Eu\r, kf7=\Ev\r,
	kf8=\Ew\r,
	mc4=Set\sprinter\sswitch\sto\s"terminal"\r\n,
	mc5=Set\sprinter\sswitch\sto\s"print"\r\n, rmir=\ER,
	rmkx=\E&jA, rmso=\E&d@, rmul=\E&d@, sgr0=\E&d@,
	smir=\EQ, smkx=\E&jB, smso=\E&dD, smul=\E&dD, tbc=\E3,
	vpa=\E&a%p1%dY,
	cols#87, it#8, lines#72,
	bel=^G, clear=\f, cr=\r, cub1=\ED, cud1=\n, cuf1=\EC,
	cup=\EY%p2%'\s'%+%c%p1%'\s'%+%c, cuu1=\EA,
	dch=\Ee%p1%'\s'%+%c, dch1=\Ee!, dl=\EE%p1%'\s'%+%c,
	dl1=\EE!, el=\EK, ht=\t, ich=\Ef%p1%'\s'%+%c,
	ich1=\Ef!, il=\EF%p1%'\s'%+%c, il1=\EF!, ind=\n,
	kbs=\b, kcub1=\ED, kcud1=\EB, kcuf1=\EC, kcuu1=\EA,
	kf1=\Ex, kf2=\Ey, kf3=\Ez,
	mc4=Set\sprinter\sswitch\sto\s"terminal"\r\n,
	mc5=Set\sprinter\sswitch\sto\s"print"\r\n,
h19-pb|heathkit h19 with printer box,
	am, eslok, hs, mir, msgr,
	cols#80, it#8, lines#24,
	bel=^G, clear=\EE, cnorm=\Ey4, cr=\r, cub1=\b,
	cud1=\n, cuf1=\EC, cup=\EY%p1%'\s'%+%c%p2%'\s'%+%c,
	cuu1=\EA, cvvis=\Ex4, dch1=\EN, dl1=\EM$<1*>, ed=\EJ,
	el=\EK, fsl=\Ek\Ey5, home=\EH, ht=\t, il1=\EL$<1*>,
	ind=\n, kbs=\b, kcub1=\ED, kcud1=\EB, kcuf1=\EC,
	kcuu1=\EA, kf1=\ES, kf2=\ET, kf3=\EU, kf4=\EV,
	kf5=\EW, kf6=\EP, kf7=\EQ, kf8=\ER, khome=\EH,
	lf6=blue, lf7=red, lf8=white,
	mc4=Set\sprinter\sswitch\sto\s"terminal"\r\n,
	mc5=Set\sprinter\sswitch\sto\s"print"\r\n, ri=\EI,
	rmacs=\EG, rmir=\EO, rmso=\Eq, smacs=\EF, smir=\E@,
	smso=\Ep, tsl=\Ej\Ex5\EY8%p1%'\s'%+%c\Eo\Eo,
mime-pb|mime with printer box,
	am,
	cols#80, it#8, lines#24, vt#9,
	bel=^G, clear=^]^C, cr=\r, cub1=\b, cud1=\n, cuf1=^X,
	cup=^T%p1%{24}%+%c%p2%?%p2%{32}%>%t%{48}%+%;%{80}%+%c,
	cuu1=^Z, dl1=^W$<80>, ed=^_, el=^^, home=^], ht=\t,
	il1=^A$<80>, ind=\n, is2=\E^S^Q, kcub1=\b, kcud1=^K,
	kcuf1=^X, kcuu1=^Z,
	mc4=Set\sprinter\sswitch\sto\s"terminal"\r\n,
	mc5=Set\sprinter\sswitch\sto\s"print"\r\n, ri=^R$<3>,
	uc=^U,
citoh|ci8510|8510|c.itoh 8510a,
	cols#80, ri=\Er, bold=\E!, smul=\EX, rmul=\EY, sgr0=\E"\EY, it#8,
	is2=\E(009\054017\054025\054033\054041\054049\054057\054065\054073.,
	rep=\ER%p2%03d%p1%c, cub1@, use=lpr,
citoh-pica|citoh in pica,
	is1=\EN, use=citoh,
citoh-elite|citoh in elite,
	is2=\E(009\054017\054025\054033\054041\054049\054057\054065\054073\054081\054089.,
	is1=\EE, cols#96, use=citoh,
citoh-comp|citoh in compressed,
	is2=\E(009\054017\054025\054033\054041\054049\054057\054065\054073\054081\054089\054097\054105\054113\054121\054129.,
	is1=\EQ, cols#136, use=citoh,
# Info:
#	Infinite cols because we don't want lp ever inserting \n\t**.
#
citoh-prop|citoh-ps|ips|citoh in proportional spacing mode,
	is1=\EP, cols#32767, use=citoh,
citoh-6lpi|citoh in 6 lines per inch mode,
	is3=\EA, use=citoh,
citoh-8lpi|citoh in 8 lines per inch mode,
	is3=\EB, lines#88, use=citoh,
qms-diablo|diablo simulated by qms,
	smul=\EE, rmul=\ER, smso=\EW, rmso=\E&, use=lpr,
qume101|q101,
	am, bel=^G, 
#	blank=\EG1,
	blink=\E.1, cbt=\EI, clear=^Z,
	cols#80, cr=^M, cub1=^H, cud1=^J, cuf1=^L,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, cuu1=^K,
	dim=\E),  ed=\EY,
	el=\ET,
	home=^^,  ht=^I, hts=\E1,
	ind=^J, kbs=^h,
	kbs=^h, kcuu1=^K, kcud1=^J, kcub1=^H, kcuf1=^L,
	lines#24,
	rev=\EG4, rmso=\EG0, smso=\EG4,
	tbc=\E3,
	xmc#1,
#
#	ATT:#ident	"terminfo:special.ti	1.5"	*/
	
#ident	"@(#)lib/terminfo:special.ti	25.1"

# # --------------------------------
#
# special: SPECIALS
#
# Manufacturer:	SPECIAL GENERIC TERMINALS
# Class:	III
# Info:
#	Generic "terminals". These are used to label tty lines when 
#	you don't # know what kind of terminal is on it. The 
#	characteristics of an unknown terminal are the lowest common 
#	denominator - they look about like a ti 700.
#
arpanet|network|net|,
	use=unknown,
bussiplexer,
	use=unknown,
dialup,
	use=unknown,
ethernet,
	use=unknown,
plugboard|patch|patchboard|,
	use=unknown,
dumb,
	am, bel=^G, cols#80, cr=^M, cud1=^J, ind=^J,
unknown,
	gn, use=dumb,
switch|intelligent switch,
	use=unknown,
#	ATT:#ident	"terminfo:sperry.ti	1.8"	*/
#	ATT:#ident	"terminfo:sperry.ti	1.5"	*/
	
#ident	"@(#)lib/terminfo:sperry.ti	25.1"

# # --------------------------------
#
# sperry: SPERRY
#
# Manufacturer:	SPERRY
# Class:	III
# Info:
#	This is a terminal that is (going to be) used with increasing 
#	frequency here, internally at sperry. It is also similar, i 
#	believe, to the terminal that comes with the sperry pcs that 
#	have recenty made an entry into the micro market.
#	It doesn't have everything that the uts30 has to offer, i'm 
#	sure (read hope), but its a start.
#	
#	
#	This entry is for the Sperry UTS30 terminal running the TTY 
#	utility under control of CP/M Plus 1R1. The functionality 
#	provided is comparable to the DEC vt100.
#	
#
uts30|sperry uts30 with cp/m@1R1,
	am, bw, hs,
	cols#80, lines#24, wsl#40,
	bel=^G, blink=\E[5m, bold=\E[1m, civis=\ER, clear=\f, cnorm=\ES,
	cr=\r, csr=\EU%p1%' '%+%c%p2%' '%+%c, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=\EB, cuf=\E[%p1%dC, cuf1=\EC,
	cup=\E[%i%p1%d;%p2%dH,
	cuu=\E[%p1%dA, cuu1=\E[A, dch=\E[%p1%dP, dch1=\EM, dl=\E[%p1%dM,
	dl1=\EL, 
	ed=\E[J, el=\E[K, fsl=\r, home=\E[H, ht=\t, ich=\E[%p1%d@, ich1=\EO,
	il=\E[%p1%dL, il1=\EN,
	kbs=\b, kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA, khome=\E[H,
	ind=\l, indn=\E[%p1%dB,
	is2=\E[U 7\E[24;1H, rc=\EX, rev=\E[7m,
	rf=/usr/lib/tabset/vt100, ri=\EI, rin=\E[%p1%dA, rmacs=\Ed, rmso=\E[m,
	rmul=\E[m, rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h,
	sc=\EW, sgr0=\E[m, smacs=\EF, smso=\E[7m, smul=\E[4m,
	tsl=\E], uc=\EPB,
#ident	"@(#)terminfo:tektronix.ti	1.14"
# # --------------------------------
#
# tektronix: TEKTRONIX
#
# Manufacturer:	TEKTRONIX
# Class:	III
tek4107|tek4109|4107|4109|tektronix terminals 4107 4109,
	am, mir, msgr, ul, xenl, xt, 
	cvvis=\E%!3,
	cnorm=\E%!0,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=\EJ, el=\EK,
	clear=\ELZ, cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#79, lines#29,
	cuf1=\EC, ht=^I, it#8, ri=\EI, cuu1=\EA,
	kcuu1=\EA, kcud1=\EB, kcuf1=\EC, kcub1=\ED, kbs=^H,
	smso=\E%!1\E[7;5m$<2>\E%!0,
	rmso=\E%!1\E[m$<2>\E%!0,
	smul=\E%!1\E[4m$<2>\E%!0,
	rmul=\E%!1\E[m$<2>\E%!0,
	bold=\E%!1\E[1m$<2>\E%!0,
	rev=\E%!1\E[7m$<2>\E%0,
	blink=\E%!1\E[5m$<2>\E%!0,
	dim=\E%!1\E[<0m$<2>\E%!0,
	sgr0=\E%!1\E[m$<2>\E%!0,
	sgr=\E%%!1\E[%?%p1%t;7%;%?%p2%t;4%;%?%p3%t;7%;%?%p4%t;5%;%?%p6%t;1%;m\E%%!0,
tek4105|4105|tektronix 4105,
	am, il1=\E[1L, ed=\E[J, el=\E[K, clear=\E[2J\E[H,
	cup=\E[%i%p1%2d;%p2%2dH,
	cols#79, lines#29,
	dch1=\E[1P, dl1=\E[1M,
	home=\E[H, smir=\E[4h, rmir=\E[4l, mir,
	cuf1=\E[1C, cud1=\E[1B, cuu1=\E[1A,
	smacs=\E[1m, rmacs=\E[0m, msgr,
	rmso=\E[=0;<1m, smso=\E[=2;<3m,
	ul, smul=\E[=5;<2m, rmul=\E[=0;<1m,
	is1=\E%!1\E[0m,
	rev=\E[=1;<3m, bold=\E[=7;<4m, invis=\E[=6;<5, dim=\E[=1;<6m,
	blink=\E[=3;<7m, sgr0=\E[=0;<1m,
	smcup=\E%!1\E[?6l\E[2J, xenl, xt,
	msgr, mir, kbs=^h, kcuu1=\E[1A, kcud1=\E[1B,
	kcub1=\E[1D, kcuf1=\E[1C,
	is2=\E%!1\E[?6141\E[0m,
	cbt=\E[Z, cr=^M, ri=\E[T, ind=\E[S, it#8,
	tbc=\E[1g, ht=^I, bel=^G,

tek|tek4012|4012|tektronix 4012,
	cr=^M, cud1=^J, bel=^G, ff=^L$<1000>,
	is2=\E^O, cub1=^H, clear=\E^L$<1000>, cols#75, lines#35, os,
tek4013|4013|tektronix 4013,
	smacs=\E^N, rmacs=\E^O, use=4012,
tek4014|4014|tektronix 4014,
	is2=\E^O\E9, cols#81, lines#38, use=tek4012,
tek4015|4015|tektronix 4015,
	smacs=\E^N, rmacs=\E^O, use=4014,
tek4014-sm|4014-sm|tektronix 4014 in small font,
	is2=\E^O\E\072, cols#121, lines#58, use=tek4014,
tek4015-sm|4015-sm|tektronix 4015 in small font,
	smacs=\E^N, rmacs=\E^O, use=4014-sm,
tek4023|4023|tex|tektronix 4023,
	cr=^M, cud1=^J, ind=^J, bel=^G, smso=^_P, rmso=^_@,
	cup=\034%p2%' '%+%c%p1%' '%+%c, cuf1=\t, cub1=^H,
	clear=\E^L$<4>, cols#80, lines#24, am, vt#4,
# Info:
#	It is recommended that you run the 4025 at 4800 baud or less;
#	various bugs in the terminal appear at 9600.  It wedges at the
#	bottom of memory (try "cat /usr/dict/words"); ^S and ^Q typed
#	on keyboard don't work.  You have to hit BREAK twice to get
#	one break at any speed - this is a documented feature.
#	Can't use cursor motion because it's memory relative, and 
#	because it only works in the workspace, not the monitor.  
#	Same for home. Likewise, standout only works in the workspace.
#	
#	el was commented out since vi and rogue seem to work better 
#	simulating it with lots of spaces!
#	
#	il1 and il had 145ms of padding, but that slowed down vi's ^U 
#	and didn't seem necessary.
#
4025|4027|4024|tek4025|tek4027|tek4024|4025cu|4027cu|tektronix 4024/4025/4027,
	cr=^M, ind=^F^J, cud1=^F^J, bel=^G, am, da, db, ht=^I, it#8,
	cub1=^H, lm#0, lines#34, cols#80, clear=^_era\r\n\n,
	is2=\41com 31\r\n^_sto 9 17 25 33 41 49 57 65 73\r,
	smkx=^_lea p4 /h/\r^_lea p8 /k/\r^_lea p6 / /\r^_lea p2 /j/\r^_lea f5 /H/\r,
	rmkx=^_lea p2\r^_lea p4\r^_lea p6\r^_lea p8\r^_lea f5\r,
	cuu1=^K, cuf1=^_rig\r,
	ed=^_dli 50\r, cmdch=^_,
	dch1=^_dch\r, ich1=^_ich\r ^H,
	il1=^_up\r^_ili\r, dl1=^_dli\r^F,
	il=^_up\r^_ili %p1%d\r, dl=^_dli %p1%d\r^F,
	cuu=^_up %p1%d\r, cud=^_dow %p1%d\r,
	cub=^_lef %p1%d\r, cuf=^_rig %p1%d\r,
tek4025-17|4025-17|4027-17|tek 4025 17 line window,
	lines#17, use=4025,
tek4025-17-ws|4025-17-ws|4025-17ws|4027-17-ws|tek 4025 17 line window in workspace,
	is2=\41com 31\r\n^_sto 9 17 25 33 41 49 57 65 73\r^_wor 17\r^_mon 17\r,
	smcup=^_wor h\r, rmcup=^_mon h\r, smso=^_att e\r, rmso=^_att s\r, use=4025-17,
tek4025-ex|4025-ex|4025ex|4027-ex|tek 4025 w/!,
	smcup=\41com 31\r, rmcup=^_com 33\r,
	is2=^_com 33\r\n\41sto 9 17 25 33 41 49 57 65 73\r, use=4025,
tek4105-30|4105-30|4015 emulating 30 line vt100,
	am, mir, msgr, xenl, xon,
	cols#80, it#8, lines#30, vt#3,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m$<2>, bold=\E[1m$<2>,
	clear=\E[H\E[J$<50>, cr=\r, csr=\E[%i%p1%d;%p2%dr,
	cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cud1=\n,
	cuf=\E[%p1%dC, cuf1=\E[C$<2>,
	cup=\E[%i%p1%d;%p2%dH$<5>, cuu=\E[%p1%dA,
	cuu1=\E[A$<2>, ed=\E[J$<50>, el=\E[K$<3>,
	el1=\E[1K$<3>, enacs=\E(B\E)0, home=\E[H, ht=\t,
	hts=\EH, ind=\n, ka1=\EOq, ka3=\EOs, kb2=\EOr, kbs=\b,
	kc1=\EOp, kc3=\EOn, kcub1=\EOD, kcud1=\EOB,
	kcuf1=\EOC, kcuu1=\EOA, kent=\EOM, kf0=\EOy, kf1=\EOP,
	kf10=\EOx, kf2=\EOQ, kf3=\EOR, kf4=\EOS, kf5=\EOt,
	kf6=\EOu, kf7=\EOv, kf8=\EOl, kf9=\EOw, rc=\E8,
	rev=\E[7m$<2>, ri=\EM$<5>, rmacs=^O, rmkx=\E[?1l\E>,
	rmso=\E[m$<2>, rmul=\E[m$<2>,
	rs2=\E>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=\E7,
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O$<2>, smacs=^N, smkx=\E[?1h\E=,
	smso=\E[1;7m$<2>, smul=\E[4m$<2>, tbc=\E[3g,
# Info:
#	The 4110 series may be a wonderful graphics series, but they 
#	make the 4025 look good for screen editing. 
#	
#	In the dialog area, you can't move the cursor off the bottom 
#	line. 
#	
#	Out of the dialog area, ^K moves it up, but there is no way 
#	to scroll.
#	
#	Note that there is a floppy for free from Tek that makes the 
#	4112 emulate the vt52 (use the vt52 termcap). There is also
#	an expected enhancement that will use ANSI standard sequences.
#	
#	4112 in non-dialog area pretending to scroll. It really wraps 
#	but vi is said to work (more or less) in this mode.
#	
#	'vi' works reasonably well with this entry.
#
4112|4112-nd|4113|4114|tek4112|tektronix 4110 series,
	cr=^M, cud1=^J, ind=^J, bel=^G, cuu1=^K, cub1=^H,
	am, clear=\E^L, lines#34, cols#80,
	smcup=\EKA0\ELV0\EMG0, rmcup=\EKA1\ELV1,
tek4112-d|4112-d|tek 4112 in dialog area,
	am, clear=\ELZ, lines#34, cols#80, cuu1=^K,
tek4112-5|4112-5|4112 in 5 line dialog area,
	lines#5, use=4112,
tek4115|4115|tektronix 4115,
	am, xon,
	cols#80, lines#34,
	bel=^G, blink=\E[5m, bold=\E[1m, cbt=\E[Z,
	clear=\E[H\E[J, cr=\r, cub=\E[%p1%dD, cub1=\b,
	cud=\E[%p1%dB, cud1=\n, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	dch1=\E[P, dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K,
	home=\E[H, hpa=\E[%p1%{1}%+%dG, ht=\t, hts=\EH,
	ich=\E[%p1%d@, ich1=\E[@, il=\E[%p1%dL, il1=\E[L,
	ind=\n, invis=\E[8m, kbs=\b, kcub1=\E[D, kcud1=\E[B,
	kcuf1=\E[C, kcuu1=\E[A, khome=\E[H,
	rep=%p1%c\E[%p2%{1}%-%db, rev=\E[7m, rmso=\E[m,
	rmul=\E[m,
	sgr=\E[%?%p1%t7;%;%?%p2%t4;%;%?%p3%t7;%;%?%p4%t5;%;%?%p6%t1;%;m,
	sgr0=\E[0m, smso=\E[7m, smul=\E[4m, tbc=\E[2g,
	vpa=\E[%p1%{1}%+%dd,
# Info:
#	t500 is a local entry for the oddball Tek 500 owned by Fluke 
#	Labs
#
t500|Tek series 500,
	cr=^M, ind=^J, cud1=^J, bel=^G,
	lines#25, cols#80, cub1=^H, cup=\E=%p1%p1%' '%+%c%p2%' '%+%c,
	clear=^E$<20>, home=^T, bw, am, 
# Info:
#	I added the is string - straight Unix has ESC ; in the login 
#	string which sets a ct8500 into monitor mode (aka 4025 snoopy 
#	mode). The is string here cleans up a few things (but not 
#	everything).
#
ct8500|tektronix ct8500,
	cr=^M, cud1=^J, ind=^J, bel=^G, cr=^M, cud1=^J, ind=^J, bel=^G,
	il1=\E^L, am, cub1=^H, cbt=\E^I, bw, ed=\E^U, el=\E^T,
	clear=\E^E, cup=\E|%p1%' '%+%c%p2%' '%+%c, cols#80,
	da, db, dch1=\E^],
	dl1=\E^M, ich1=\E^\, lines#25, cuf1=\ES, ht=^I, ri=\E^A, rmso=\E ,
	smso=\E$, rmul=\E , cuu1=\ER, smul=\E\041, is2=^_\EZ\Ek,
	sgr0=\E\s,

#
#	Tektronix 4205 terminal.  This entry contains information required
#	by color curses
#

tek4205|4205|tektronix 4205,

#	am is not defined because the wrap around occurs not when the char.
#	is placed in the 80'th column, but when we are attempting to type
#	the 81'st character on the line.

# 	bold, dim, and standout are simulated by colors and thus not allowed
#	with colors

	am, xenl, msgr, mir, ccc,
	cols#80, lines#30, it#8, colors#8, pairs#64, ncv#49,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
        il1=\E[1L, ed=\E[J, el=\E[K, clear=\E[2J\E[H, 
	il=\E[%p1%dL,
	cup=\E[%i%p1%d;%p2%dH,
	dch1=\E[1P, dl1=\E[1M,
	home=\E[H, smir=\E[4h, rmir=\E[4l, 
	cuf1=\E[C, cud1=\E[B, cuu1=\E[A, cub1=\E[D,
	cuf=\E[%p1%dC, cud=\E[%p1%dB, cuu=\E[%p1%dA, cub=\E[%p1%dD,
	ech=\E%p1%dX, el1=\E[1K, ich=\E[%p1%d@, 
	smacs=, rmacs=, enacs=\E)0,
	rmso=\E[=0;<1m, smso=\E[=2;<3m,
	smul=\E[4m, rmul=\E[24m,
	is1=\E%!0\ETM1\E%!1\E[0m,
	rev=\E[7m, bold=\E[=7;<4m, invis=\E[=6;<5, dim=\E[=1;<6m,
	blink=\E[5m, sgr0=\E[=0;<1m\E[24;25;27m,
	smcup=\E%%!1\E[?6l\E[2J, 
	kbs=^h, kcuu1=\E[A, kcud1=\E[B,
	kcub1=\E[D, kcuf1=\E[C,
	.is2=\E%%!1\E[?6141\E[0m,
	cbt=\E[Z, cr=^M, ind=\ED, ri=\EM,
	tbc=\E[1g, ht=^I, bel=^G,

#	tektroinix color table is mapped into the RGB color table

	setf=\E[<%?%p1%{0}%=%t0m
		 %e%p1%{1}%=%t4m
		 %e%p1%{2}%=%t3m
		 %e%p1%{3}%=%t5m
		 %e%p1%{4}%=%t2m
		 %e%p1%{5}%=%t6m
		 %e%p1%{6}%=%t7m
		 %e1m%;,
	setb=\E[=%?%p1%{0}%=%t0m
		 %e%p1%{1}%=%t4m
		 %e%p1%{2}%=%t3m
		 %e%p1%{3}%=%t5m
		 %e%p1%{4}%=%t2m
		 %e%p1%{5}%=%t6m
		 %e%p1%{6}%=%t7m
		 %e1m%;,
#	All colors are reset to factory specifications

	oc=\E%!0
	      \ETFB0
		0000
		1F4F4F4
		2F400
		30F40
		4A4C<F4
		50F4F4
		6F40F4
		7F4F40
	    \E%!1,
	op=\E[39;40m,

#	using RGB notation to define colors.  for arguments 1-3 the interval
#	(0-1000) is broken into 8 smaller sub-intervals (125).  Each sub-
#	interval then maps into pre-defined value.

	initc=\E%%!0
	      \ETF4
	         %?%p1%{0}%=%t0
		 %e%p1%{1}%=%t4
		 %e%p1%{2}%=%t3
		 %e%p1%{3}%=%t5
		 %e%p1%{4}%=%t2
		 %e%p1%{5}%=%t6
		 %e%p1%{6}%=%t7
		 %e1%;
		  %?%p2%{125}%<%t0
		  %e%p2%{250}%<%tA2
		  %e%p2%{375}%<%tA?
		  %e%p2%{500}%<%tC8
		  %e%p2%{625}%<%tD4
		  %e%p2%{750}%<%tE1
		  %e%p2%{875}%<%tE:
		  %eF4%;
		  %?%p3%{125}%<%t0
		  %e%p3%{250}%<%tA2
		  %e%p3%{375}%<%tA?
		  %e%p3%{500}%<%tC8
		  %e%p3%{625}%<%tD4
		  %e%p3%{750}%<%tE1
		  %e%p3%{875}%<%tE:
		  %eF4%;
		  %?%p4%{125}%<%t0
		  %e%p4%{250}%<%tA2
		  %e%p4%{375}%<%tA?
		  %e%p4%{500}%<%tC8
		  %e%p4%{625}%<%tD4
		  %e%p4%{750}%<%tE1
		  %e%p4%{875}%<%tE:
		  %eF4%;
	      \E%%!1,
	kf0=\EOA, kf1=\EOB, kf2=\EOC, kf3=\EOD,
	kf4=\EP, kf5=\EQ, kf6=\ER, kf7=\ES,
#	ATT:#ident	"terminfo:teleray.ti	1.8"	*/
#	ATT:#ident	"terminfo:teleray.ti	1.5"	*/
	
#ident	"@(#)lib/terminfo:teleray.ti	25.1"

# # --------------------------------
#
# teleray: TELERAY
#
# Manufacturer:	TELERAY
# Class:	III
# Info:
#	A dumb teleray with the cursor stuck on the bottom and no 
#	obvious model number is probably a 3700.
#
t3700|teleray3700|dumb teleray 3700,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, clear=^L, cols#80, lines#24,
t3800|teleray 3800 series,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, ed=\EJ, el=\EK, clear=^L,
	cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80,  
	cud1=\n, home=\EH, lines#24, ll=\EY7 , cuf1=\EC, ht=^I, cuu1=^K,
t1061|t10|teleray|teleray 1061,
	tbc=\EG, hts=\EF, cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EL$<2*>,
	am, cub1=^H, ed=\EJ$<1>, el=\EK, clear=^L$<1>,
	cup=\EY%p1%' '%+%c%p2%' '%+%c, cols#80,
	dch1=\EQ, dl1=\EM$<2*>, home=\EH, ich1=\EP, ip=$<0.4*>,
	kf1=^Z1, kf2=^Z2, kf3=^Z3, kf4=^Z4, kf5=^Z5, kf6=^Z6, kf7=^Z7, kf8=^Z8,
	lines#24, cuf1=\EC, ht=^I, rmso=\ER@, smso= \ERD, km,
	is2=\Ee\EU01^Z1\EV\EU02^Z2\EV\EU03^Z3\EV\EU04^Z4\EV\EU05^Z5\EV\EU06^Z6\EV\EU07^Z7\EV\EU08^Z8\EV\Ef,
	cuu1=\EA, smul=\ERH, rmul=\ER@, xhp, xt, xmc#1,
t1061f|teleray 1061 with fast PROMs,
	il1=\EL, ip@, dl1=\EM, use=t1061,
# Info:
#	teleray 16 - map the arrow keys for vi/rogue, shifted to 
#	up/down page, and back/forth words. Put the function keys 
#	(f1-f10) where they can be found, and turn off the other magic 
#	keys along the top row, except for line/local. Do the magic 
#	appropriate to make the page shifts work.
#	Also toggle ^S/^Q for those of us who use Emacs.
#
ya|t16|teleray 16,
	cr=^M, cud1=^J, ind=^J, bel=^G, cr=^M, cud1=^J, ind=^J, bel=^G,
	il1=\E[L, am, cub1=^H, ed=\E[0J,
	el=\E[0K, clear=\E[H\E[2J, cup=%i\E[%p1%d;%p2%df, cols#80, kf1=^Z1,
	kf2=^Z2, kf3=^Z3, kf4=^Z4, kf5=^Z5, kf6=^Z6, kf7=^Z7, kf8=^Z8,
	kf9=^Z9, kf10=^Z0, dch1=\E[P, dl1=\E[M, home=\E[H,
	smcup=\E[U\E[?38l, rmcup=\E[V\E[24;1f\E[?38h, smir=\E[4h,
	rmir=\E[4l, lines#24, cuf1=\E[C, ht=^I, rmso=\E[m, smso=\E[7m,
	dch1=\E[P, cud1=\E[B, cuu1=\E[A, smul=\E[4m,
	rmul=\E[m, xhp, xt, ri=\E[T, da, db, mir,
#ident	"@(#)terminfo:televideo.ti	1.9"
# # --------------------------------
#
# televideo: TELEVIDEO
#
# Manufacturer:	TELEVIDEO
# Class:	III
tvi803,
	clear=\E*$<10>, use=tvi950,
# Info:
#	There are some tvi's that require incredible amounts of padding
#	and some that don't. I'm assuming 912 and 920 are the old slow 
#	ones, and 912b, 912c, 920b, 920c are the new ones that don't 
#	need padding.
#
tvi912|912|920|tvi920|old televideo,
	tbc=\E3, hts=\E1, cr=^M, cud1=^J, ind=^J, bel=^G, il1=\EE$<33*>, am,
	cub1=^H, el=\ET, cup=\E=%p1%' '%+%c%p2%' '%+%c, clear=^Z,
	cols#80, dch1=\EW, dl1=\ER$<33*>,
	kbs=^h, kcuu1=^K, kcud1=^J, kcub1=^H, kcuf1=^L,
	kf0=^A@\r, kf1=^AA\r, kf2=^AB\r, kf3=^AC\r, kf4=^AD\r,
	kf5=^AE\r, kf6=^AF\r, kf7=^AG\r, kf8=^AH\r, kf9=^AI\r,
	home=^^, ich1=\EQ, lines#24, ht=^I,
	rmso=\Ek, smso=\Ej, cuu1=^K, smul=\El, rmul=\Em, xmc#1,
# Info:
#	the 912 has a <funct> key that's like shift: <funct>8 xmits 
#	"^A8\r". The 920 has this plus real function keys that xmit 
#	different things.
#	Terminfo makes you use the funct key on the 912 but the real 
#	keys on the 920.
#
912b|912c|tvi912b|tvi912c|tvi|new televideo 912,
	il1=\EE$<5*>, dl1=\ER$<5*>, use=tvi912,
920b|920c|tvi920b|tvi920c|new televideo 920,
	kf0=^A@\r, kf1=^AA\r, kf2=^AB\r, kf3=^AC\r, kf4=^AD\r, kf5=^AE\r,
	kf6=^AF\r, kf7=^AG\r, kf8=^AH\r, kf9=^AI\r, use=tvi912b,
# Info:
#	We got some new tvi912c' that act really weird on the regular 
#	termcap, so one of our gurus worked this up. Seems that cursor 
#	addressing is broken.
#
912cc|tvi912cc|tvi912 at cowell college,
	cup@, use=tvi912c,
# Info:
#	Two page TVI 912/920.
#	set to page 1 when entering ex (\E-17 )
#	reset to page 0 when exiting ex (\E-07 )
#
tvi912-2p|tvi920-2p|912-2p|920-2p|tvi-2p|televideo w/2 pages,
	smcup=\E-17 , rmcup=\E-07 , use=tvi912,
tvi950-ap|tvi 950 w/alt pages,
	is2=\E\\1, smcup=\E-06 , rmcup=\E-16 , use=tvi950,
tvi950-b|bare tvi950 no is2,
	is2@, use=tvi950,
tvi950-ns|tvi950 w/no standout,
	smso@, rmso@, smul@, rmul@, use=tvi950,
# Info:
#	Now that we have is1, is2, and is3, these should be factored.
#	
#	is2 for all 950's.  It sets the following attributes:
#	
#	full duplex (\EDF)		write protect off (\E()
#	
#	conversation mode (\EC)	graphics mode off (\E%)
#	
#	white on black (\Ed)		auto page flip off (\Ew)
#	
#	turn off status line (\Eg)	clear status line (\Ef\r)
#	
#	normal video (\E0)		monitor mode off (\EX or \Eu)
#	
#	edit mode (\Er)		load blank char to space (\Ee\040)
#	
#	line edit mode (\EO)		enable buffer control (^O)
#	
#	protect mode off (\E\047)	duplex edit keys (\El)
#	
#	program unshifted send key to send line all (\E016)
#	
#	program shifted send key to send line unprotected (\E004)
#	
#	set the following to nulls:
#		field	delimiter (\Ex0\0\0)
#		line	delimiter (\Ex1\0\0)
#		start-protected	field delimiter (\Ex2\0\0)
#		end-protected	field delimiter (\Ex3\0\0)
#	
#
tvi950|950|televideo950,
	am, hs, mir, msgr, xenl,
	cols#80, lh#0, lines#24, lw#0, nlab#0, xmc#1,
	acsc=mExJlFtMjHqKvOkGuLwNnI, bel=^G, cbt=\EI,
	clear=\E*, cr=\r, cub1=\b, cud1=\n, cuf1=\f,
	cup=\E=%p1%'\s'%+%c%p2%'\s'%+%c, cuu1=^K, dch1=\EW,
	dl1=\ER, dsl=\Eg\Ef\r, ed=\Ey, el=\Et,
	flash=\Eb$<20>\Ed, fsl=\r, home=^^, ht=\t, hts=\E1,
	il1=\EE, ind=\n,
	is2=\EDF\EC\Ed\EG0\Eg\Er\EO\E'\E(\E%%\Ew\EX\Ee\s^O\El\E016\E004\Ex0\200\200\Ex1\200\200\Ex2\200\200\Ex3\200\200\Ex4\r\200\Ef\r,
	kbs=\b, kcub1=\b, kcud1=^V, kcuf1=\f, kcuu1=^K,
	kf0=^A0\r, kf1=^A@\r, kf2=^AA\r, kf3=^AB\r, kf4=^AC\r,
	kf5=^AD\r, kf6=^AE\r, kf7=^AF\r, kf8=^AG\r, kf9=^AH\r,
	khome=^^, mc4=\Ea, mc5=\E`, ri=\Ej, rmacs=\E%%,
	rmir=\Er, smacs=\E$, smir=\Eq, smso=\EG4, smul=\EG8,
	tbc=\E3, tsl=\Eg\Ef,
# Info:
#	is2 for 950 with two pages adds the following:
#	set 48 line page (\E\\2)
#	
#	place cursor at page 0, line 24, column 1 (\E-07 )
#	
#	set local (no send) edit keys (\Ek)
#	
#	two page 950 adds the following:
#		when entering ex, set 24 line page (\E\\1)
#		when exiting ex, reset 48 line page (\E\\2)
#		place cursor at 0,24,1 (\E-07 )
#	
#	set duplex (send) edit keys (\El) when entering vi
#	set local (no send) edit keys (\Ek) when exiting vi
#
tvi950-2p|950-2p|televideo950 w/2 pages,
	is2=\EDF\EC\Ed\EG0\Eg\Er\EO\E\047\E(\E%\Ew\EX\Ee ^O
	\Ek\E016\E004\Ex0\0\0\Ex1\0\0\Ex2\0\0
	\Ex3\0\0\Ex4\r\0\E\\2\E-07 ,
	rmcup=\E\\2\E-07 , smcup=\E\\1\E-07 ,
	smkx=\El, rmkx=\Ek, use=tvi950,
# Info:
#	 is2 for 950 with four pages adds the following:
#		set 96 line page (\E\\3)
#		place cursor at page 0, line 24, column 1 (\E-07 )
#	
#	 four page 950 adds the following:
#		when entering ex, set 24 line page (\E\\1)
#		when exiting ex, reset 96 line page (\E\\3)
#			 place cursor at 0,24,1 (\E-07 )
#
tvi950-4p|950-4p|televideo950 w/4 pages,
	is2=\EDF\EC\Ed\EG0\Eg\Er\EO\E\047\E(\E%\Ew\EX\Ee ^O
	\Ek\E016\E004\Ex0\0\0\Ex1\0\0\Ex2\0\0
	\Ex3\0\0\Ex4\r\0\E\\3\E-07 ,
	rmcup=\E\\3\E-07 , smcup=\E\\1\E-07 ,
	smkx=\El, rmkx=\Ek, use=tvi950,
# Info:
#	 is2 for reverse video 950 changes the following:
#		set reverse video (\Ed)
#	
#	 set flash accordingly (\Ed ...nulls... \Eb)
#
tvi950-rv|950-rv|televideo950 rev video,
	tbc=\E3, hts=\E1,
	is2=\EDF\EC\Eb\EG0\Eg\Er\EO\E\047\E(\E%\Ew\EX\Ee ^O
	\El\E016\E004\Ex0\0\0\Ex1\0\0\Ex2\0\0
	\Ex3\0\0\Ex4\r\0, flash=\Ed$<20>\Eb, use=tvi950,
# Info:
#	 uses the appropriate entries from 950-2p and 950-rv
#
tvi950-rv-2p|950-rv-2p|televideo950 rev video w/2 pages,
	is2=\EDF\EC\Eb\EG0\Eg\Er\EO\E\047\E(\E%\Ew\EX\Ee ^O
	\Ek\E016\E004\Ex0\0\0\Ex1\0\0\Ex2\0\0
	\Ex3\0\0\Ex4\r\0\E\\2\E-07 ,
	rmcup=\E\\2\E-07 , smcup=\E\\1\E-07 ,
	smkx=\El, rmkx=\Ek, use=tvi950-rv,
# Info:
#	 uses the appropriate entries from 950-4p and 950-rv
#
tvi950-rv-4p|950-rv-4p|televideo950 rev video w/4 pages,
	is2=\EDF\EC\Eb\EG0\Er\EO\E\047\E(\E%\Ew\EX\Ee ^O
	\Ek\E016\E004\Ex0\0\0\Ex1\0\0\Ex2\0\0
	\Ex3\0\0\Ex4\r\0\E\\3\E-07 ,
	rmcup=\E\\3\E-07 , smcup=\E\\1\E-07 ,
	smkx=\El, rmkx=\Ek, use=tvi950-rv,
#	 Terminal Configuration Assumptions:
#		1) Edit keys transmit (DUPE on S2 bit 1 down)
#		2) Actually a 925 (not in 912/920 emulation)
#		3) Visual Bell assumes a default of white on black
#		4) Page attributes for special display
#		5) This uses a solid underscore cursor when not in vi. 
#			Solid Block cursor in vi.
#		6) No function key definitions are given
#		7) Only one page of memory is available
#
tvi925|925|televideo 925,
	am, bel=^G, bw, cbt=\EI, clear=^Z, cnorm=\E.4, cols#80,
	cr=^M, cub1=^H, cud1=^J, cud1=^V,
	cup=\E=%p1%' '%+%c%p2%' '%+%c, cuu1=^K, cvvis=\E.2,
	dch1=\EW, dl1=\ER, dsl=\Eh, ed=\EY, el=\ET,
	flash=\Eb$<20>\Ed, fsl=\r\Eg, home=^^, hs,
	ht=^I, hts=\E1, ich1=\EQ, il1=\EE, ind=^J,
	kbs=^H, kcub1=^H, kcud1=^V, kcuf1=^L, kcuu1=^K,
	kf0=^AI\r, kf1=^A@\r, kf2=^AA\r, kf3=^AB\r, kf4=^AC\r,
	kf5=^AD\r, kf6=^AE\r, kf7=^AF\r, kf8=^AG\r, kf9=^AH\r,
	khome=^^, kich1=\EQ, kdch1=\EW, kil1=\EE, kdl1=\ER,
	kclr=^Z, kel=\ET, ked=\EY,
	lines#24, rmso=\EG0, rmul=\EG0, smso=\EG4, smul=\EG8,
	tbc=\E3, tsl=\Eh\Ef, ul, xmc#1,
#	ATT:#ident	"terminfo:ti.ti	1.3"	*/
	
#ident	"@(#)lib/terminfo:ti.ti	25.1"

# # --------------------------------
#
# ti: TEXAS INSTRUMENTS
#
# Manufacturer:	TEXAS INSTRUMENTS
# Class:	II
ti700|ti733|735|ti735|ti silent 700,
	cr=^M$<162>, use=ti745,
ti|ti745|745|743|ti silent 745,
	cr=^M, cud1=^J, ind=^J, bel=^G, cub1=^H, cols#80, hc, os,
ti800|ti omni 800,
	cols#132, use=ti745,
tv910|tvi910|kludge quick televideo,
	cr=^M, cud1=^J, ind=^J, bel=^G, am,
	cub1=^H, el=\ET, cup=\E=%p1%' '%+%c%p2%' '%+%c,
	cols#80, clear=\E+,
	kbs=^h, kcuu1=^K, kcud1=^J, kcub1=^H, kcuf1=^L,
	home=^^, lines#24, cuf1=^L, ht=^I,
	rmso=\E(, smso=\E), cuu1=^K, smul=\El, rmul=\Em, xmc#1,
# was:	rmso=\Ej, smso=\Ek, cuu1=^K, smul=\El, rmul=\Em, xmc#1,
#	ATT:#ident	"terminfo:tymshare.ti	1.4"	*/
	
#ident	"@(#)lib/terminfo:tymshare.ti	25.1"


scanset|sc410|sc415|Tymshare Scan Set,
	msgr, am, bw,
	cols#80, lines#24,
	bel=^G, cub1=^H, cud1=^J, ind=^J, cuu1=^K, cr=^M, cuf1=^I,
	sc=^B, rc=^C, clear=\EH\EJ,
	kcuu1=\EA, kcud1=\EB, kcuf1=\EC, kcub1=\ED,
	cup=\EY%p1%' '%+%c%p2%' '%+%c,
	ed=\EJ, el=\EK, home=\EH,
	rs1=\E>,
	smacs=^N, rmacs=^O, acsc=l<m-k4j%q\,x5,
	mc0=\E;3, mc4=\E;0, mc5=\E;0,

scanset-n|Tymshare Scan Set in 40 col mode,
	rs2=\E<,
	use=scanset,
#	ATT:#ident	"terminfo:visual.ti	1.7"	*/
#	ATT:#ident	"terminfo:visual.ti	1.4"	*/
	
#ident	"@(#)lib/terminfo:visual.ti	25.1"

# # --------------------------------
#
# visual: VISUAL
#
vi50|visual50|v50 adm3a mode with goodies,
	cr=^M, cud1=^J, ind=^J, bel=^G, am, cub1=^H, il1=\EL, dl1=\EM,
	ed=\Ek, el=\EK, clear=^Z, cup=\E=%p1%' '%+%c%p2%' '%+%c, cols#80,
	home=\EH, kbs=^H, kcud1=\EB, khome=\EH, kcub1=\ED,
	kcuf1=\EC, kcuu1=\EA, lines#24, msgr, cuf1=^L, ht=^I, smso=\EU,
	rmso=\ET, cuu1=^K,
# The Visual 200 beeps when you type a character in insert mode.
# This is a horribly obnoxious misfeature, and some of the entries
# below try to get around the problem by ignoring the feature or
# turning it off when inputting a character.  They are said not to
# work well at 300 baud.  (You could always cut the wire to the bell!)
vi200|visual 200 with function keys,
	cr=^M, cud1=^J, ind=^J, bel=^G, lines#24, cols#80,
	il1=\EL, am, cub1=^H, ed=\Ey, el=\Ex$<4*>, clear=\Ev,
	cup=\EY%p1%' '%+%c%p2%' '%+%c, dch1=\EO$<4*>, dl1=\EM$<4*>,
	home=\EH, ich1=\Ei \b\Ej, is2=\E3\Eb\Ej\E\\\El\EG\Ed\Ek,
	kf0=\EP, kf1=\EQ, kf2=\ER, kf3=\E , kf4=\E!, kf5=\E", kf6=\E#,
	kf7=\E$, kf8=\E%, kf9=\E&,
	kcub1=\ED, kcuf1=\EC, kcuu1=\EA, kcud1=\EB, khome=\EH,
	cuf1=\EC, ht=^I, ri=\EI, cuu1=\EA, cvvis=\Ed, cnorm=\Ec,
vi200-rv-ic|visual 200 reverse video using insert char,
	rmir=\Ej, smir=\Ei, ich1@, use=vi200-rv,
# The older Visuals didn't come with function keys. This entry uses
# smkx and rmkx so that the keypad keys can be used as function keys.
# If your version of vi doesn't support function keys you may want
# to use vi200-f.
vi200-f|visual|visual 200 no function keys,
	cr=^M, cud1=^J, ind=^J, bel=^G, cols#80, lines#24,
	il1=\EL, am, cub1=^H, ed=\Ey, el=\Ex$<4*>, clear=\Ev,
	cup=\EY%p1%' '%+%c%p2%' '%+%c, dch1=\EO$<4*>, dl1=\EM$<4*>,
	home=\EH, ich1=\Ei \b\Ej, is2=\E3\Eb\Ej\E\\\El\EG\Ed\Ek,
	smkx=\E=, rmkx=\E>,
	kf0=\E?p, kf1=\E?q, kf2=\E?r, kf3=\E?s, kf4=\E?t, kf5=\E?u, kf6=\E?v,
	kf7=\E?w, kf8=\E?x, kf9=\E?y,
	kcub1=\ED, kcuf1=\EC, kcuu1=\EA, kcud1=\EB, khome=\EH,
	cuf1=\EC, ht=^I, ri=\EI, cuu1=\EA, cvvis=\Ed, cnorm=\Ec,
vi200-rv|visual 200 reverse video,
	smso=\E4, rmso=\E3, ri@, cvvis@, cnorm@, use=vi200,
vi200-ic|visual 200 using insert char,
	rmir=\Ej, smir=\Ei, ich1@, use=vi200,
# the function keys are programmable but we don't reprogram
# them to their default values with "is" because programming
# them is very verbose. maybe an "if" file should be made for
# the 300 and they could be stuck in it.
vi300|visual 300 ansi x3.64,
	cr=^M, cud1=^J, ind=^J, bel=^G, cr=^M, cud1=^J, ind=^J, bel=^G,
	am, cub1=^H, bw, mir, ht=^I, xenl, cols#80, lines#24,
	is2=\E[7s\E[2;3;4;20;?5;?6l\E[12;?7h\E[1Q\E[0;1(D\E[8s,
	cup=\E[%i%p1%d;%p2%dH, cuu1=\E[A, cud1=\E[B, cuf1=\E[C, ri=\EM,
	cbt=\E[Z, home=\E[H, ed=\E[J, clear=\E[H\E[2J, el=\E[K,
	il1=\E[L, dl1=\E[M, smir=\E[4h, rmir=\E[4l, dch1=\E[P$<40>,
	smso=\E[1m, rmso=\E[m, smul=\E[4m, rmul=\E[m, khome=\E[H,
	kcud1=\E[B, kcub1=\E[D, kcuf1=\E[C, kcuu1=\E[A, kf1=\E_A\E\\,
	kf2=\E_B\E\\, kf3=\E_C\E\\, kf4=\E_D\E\\, kf5=\E_E\E\\,
	kf6=\E_F\E\\, kf7=\E_G\E\\, kf8=\E_H\E\\, kf9=\E_I\E\\,
vi300-rv|visual 300 reverse video,
	cr=^M, cud1=^J, ind=^J, bel=^G, cr=^M, cud1=^J, ind=^J, bel=^G,
	is2=\E[7s\E[2;3;4;20;?6l\E[12;?5;?7h\E[1Q\E[0;1(D\E[8s,
	use=vi300,
# slow scroll doesn't work that well; if you type on the
# keyboard while the terminal is scrolling it drops characters
vi300-ss|visual 300 slow scroll,
	cr=^M, cud1=^J, ind=^J, bel=^G, cr=^M, cud1=^J, ind=^J, bel=^G,
	cvvis=\E[?4l, cnorm=\E[?4h, use=vi300,
# some of the vi300s have older firmware that has the command
# sequence for setting editing extent reversed.
ovi300|visual 300 old,
	cr=^M, cud1=^J, ind=^J, bel=^G, cr=^M, cud1=^J, ind=^J, bel=^G,
	is2=\E[7s\E[2;3;4;20;?5;?6l\E[12;?7h\E[2Q\E[0;1(D\E[8s,
	use=vi300,
# if your version of ex/vi doesn't correctly implement xn
# use this termcap for the vi300
vi300-aw|visual 300 no autowrap,
	am@, xenl@,
	cvvis=\E[?7l, cnorm=\E[?7h,
	use=vi300, 
# the visual 550 is a visual 300 with tektronix graphics,
# and with 33 lines. clear screen is modified here to
# also clear the graphics.
vi550|visual 550 ansi x3.64,
	cr=^M, cud1=^J, ind=^J, bel=^G, cr=^M, cud1=^J, ind=^J, bel=^G,
	lines#33, clear=\030\E[H\E[2J, use=vi300,
#ident	"@(#)/terms:xterm.src	2.1"
xterm|vs100|xterm terminal emulator,
	am, km, mir, msgr, xenl,
	cols#80, it#8, lines#24,
	acsc=``aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~,
	bel=^G, blink=\E[5m, bold=\E[1m, clear=\E[H\E[J,
	cr=\r, csr=\E[%i%p1%d;%p2%dr,
	cub=\E[%p1%dD, cub1=\b, cud=\E[%p1%dB, cuf=\E[%p1%dC, cuf1=\E[C,
	cup=\E[%i%p1%d;%p2%dH, cuu=\E[%p1%dA, cuu1=\E[A,
	dch=\E[%p1%dP, dch1=\E[P,
	dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K, el1=\E[1K,
	enacs=\E(B\E)0, home=\E[H, hts=H, ind=\n, ich=\E[%p1%d@,
	ich1=\E[@, il=\E[%p1%dL, il1=\E[L, ka1=7, ka3=9,
	kb2=5, kc1=1, kc3=3, kcub1=\E[D, kcud1=\E[B,
	kcuf1=\E[C, kcuu1=\E[A, kend=\E[Y, kent=^J,
	kf0=\EOy, kf1=\EOP, kf10=\EOY, kf11=\EOZ, kf12=\EOA, kf2=\EOQ, kf3=\EOR, kf4=\EOS,
	kf5=\EOT, kf6=\EOU, kf7=\EOV, kf8=\EOW, kf9=\EOX,
	khome=\E[H, knp=\E[U, kpp=\E[V, rc=8, rev=\E[7m, ri=\EM,
	rmcup=\E[?4r, rmso=\E[m, rmacs=^O, smacs=^N,
	rs1=>\E[1;3;4;5;6l\E[?7h\E[m\E[r\E[2J\E[H,
	rs2=>\E[?3l\E[?4l\E[?5l\E[?7h\E[?8h, sc=7,
	sgr=\E[0%?%p1%p6%|%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;m%?%p9%t^N%e^O%;,
	sgr0=\E[m^O, smcup=\E[?4s\E[?4h, smso=\E[7m, tbc=\E[3g,
#	ATT:ident	"terminfo:trailer	1.7"

#ident	"@(#)lib/terminfo:trailer	25.1"

# # ------------------------
#
# The following have been included for upward compatibility with previous
# names.  They are considered obsolete and the new name (which typically
# contains an extra dash) should be used instead.  These names will go
# away eventually (read: "soon") so you should start converting!
#
tvi9122p|9122p|, use=912-2p,
tvi9202p|9202p|, use=920-2p,
tvi9502p|9502p|, use=950-2p,
tvi9504p|9504p|, use=950-4p,
tvi950rv|950rv|, use=950-rv,
tvi950rv2p|950rv2p|, use=950-rv-2p,
tvi950rv4p|950rv4p|, use=950-rv-4p,
aaa-29|, use=aaa-30-s,
aaa-29-ctxt|, use=aaa-30-s-ctxt,
aaa-29-np|, use=aaa-30-s,
aaa-29-rv|, use=aaa-30-s-rv,
aaa-29-rv-ctxt|, use=aaa-s-rv-ctxt,
aaa-59|, use=aaa-60-s,
aaa18|, use=aaa-18,
aaa20|, use=aaa-20,
aaa22|, use=aaa-22,
aaa24|, use=aaa-24,
aaa26|, use=aaa-26,
aaa28|, use=aaa-28,
aaa29|, use=aaa-29,
aaa30|, use=aaa-30,
aaa36|, use=aaa-36,
aaa40|, use=aaa-40,
aaa48|, use=aaa-48,
aaa59|, use=aaa-60-s,
aaa60|, use=aaa-60,
aaadb|, use=aaa-db,
c100-rv-pp|, use=c100-rv,
c1004p|, use=c100-4p,
c100rv|, use=c100-rv,
c100rv4p|, use=c100-rv-4p,
c100rv4pna|, use=c100-rv-4p-na,
c100rv4ppp|, use=c100-rv-4p,
c100rvna|, use=c100-rv-na,
c100rvpp|, use=c100-rv,
c100rvs|, use=c100-rv,
c100s|, use=c100,
c108-4|, use=c108-4p,
c108-8|, use=c108-8p,
h19a|h19A|, use=h19-a,
h19b|, use=h19-b,
h19bs|, use=h19-bs,
h19u|, use=h19-u,
hp2621nl|2621nl|, use=2621-nl,
hp2621nt|2621nt|, use=2621-nt,
hp2621wl|2621wl|, use=2621-wl,
mime2as|, use=mime2a-s,
mime2av|, use=mime2a-v,
mimefb|, use=mime-fb,
mimehb|, use=mime-hb,
tvi2p|, use=tvi-2p,
tvi950b|, use=tvi950-b,
tvi950ns|, use=tvi950-ns,
vt100-np|, use=vt100,
vt100am|, use=vt100-am,
vt100nam|, use=vt100-nam,
vt100s|, use=vt100-s,
vt100w|, use=vt100-w,
#
# END OF TERMINFO
#  ------------------------
